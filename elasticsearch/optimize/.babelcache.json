{
  "{\"filename\":\"/Users/Theo/Desktop/Nebula/elasticsearch/installedPlugins/marvel/index.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "'use strict';\n\nvar Promise = require('bluebird');\nvar join = require('path').join;\nvar requireAllAndApply = require('./server/lib/require_all_and_apply');\nvar pluginSelfCheck = require('./server/lib/plugin_self_check');\n\nmodule.exports = function (kibana) {\n  return new kibana.Plugin({\n    require: ['elasticsearch'],\n    name: 'marvel',\n\n    uiExports: {\n      app: {\n        title: 'Marvel',\n        description: 'Monitoring for Elasticsearch',\n        main: 'plugins/marvel/marvel',\n        injectVars: function injectVars(server, options) {\n          var config = server.config();\n          return {\n            maxBucketSize: config.get('marvel.max_bucket_size'),\n            minIntervalSeconds: config.get('marvel.min_interval_seconds'),\n            kbnIndex: config.get('kibana.index'),\n            esApiVersion: config.get('elasticsearch.apiVersion'),\n            esShardTimeout: config.get('elasticsearch.shardTimeout'),\n            statsReportUrl: config.get('marvel.stats_report_url'),\n            reportStats: config.get('marvel.report_stats'),\n            marvelIndexPrefix: config.get('marvel.index_prefix'),\n            googleTagManagerId: config.get('marvel.google_tag_manager_id')\n          };\n        }\n      }\n    },\n\n    config: function config(Joi) {\n      return Joi.object({\n        enabled: Joi.boolean()['default'](true),\n        index: Joi.string()['default']('.marvel-es-data-1'),\n        index_prefix: Joi.string()['default']('.marvel-es-1-'),\n        missing_intervals: Joi.number()['default'](12),\n        max_bucket_size: Joi.number()['default'](10000),\n        min_interval_seconds: Joi.number()['default'](10),\n        report_stats: Joi.boolean()['default'](true),\n        google_tag_manager_id: Joi.string()['default']('GTM-WXMHGM'),\n        node_resolver: Joi.string().regex(/^(?:transport_address|name)$/)['default']('transport_address'),\n        stats_report_url: Joi.when('$dev', {\n          is: true,\n          then: Joi.string()['default']('../api/marvel/v1/phone-home'),\n          otherwise: Joi.string()['default']('https://marvel-stats.elasticsearch.com/appdata/marvelOpts')\n        }),\n        agent: Joi.object({\n          interval: Joi.string().regex(/[\\d\\.]+[yMwdhms]/)['default']('10s')\n        })['default']()\n      })['default']();\n    },\n\n    init: function init(server, options) {\n      // Make sure the Marvel index is created and the Kibana version is supported\n      pluginSelfCheck(this, server);\n      // Require all the routes\n      requireAllAndApply(join(__dirname, 'server', 'routes', '**', '*.js'), server);\n    }\n  });\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9UaGVvL0Rlc2t0b3AvTmVidWxhL2VsYXN0aWNzZWFyY2gvaW5zdGFsbGVkUGx1Z2lucy9tYXJ2ZWwvaW5kZXguanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFJLE9BQU8sR0FBRyxPQUFPLENBQUMsVUFBVSxDQUFDLENBQUM7QUFDbEMsSUFBSSxJQUFJLEdBQUcsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDLElBQUksQ0FBQztBQUNoQyxJQUFJLGtCQUFrQixHQUFHLE9BQU8sQ0FBQyxvQ0FBb0MsQ0FBQyxDQUFDO0FBQ3ZFLElBQUksZUFBZSxHQUFHLE9BQU8sQ0FBQyxnQ0FBZ0MsQ0FBQyxDQUFDOztBQUVoRSxNQUFNLENBQUMsT0FBTyxHQUFHLFVBQVUsTUFBTSxFQUFFO0FBQ2pDLFNBQU8sSUFBSSxNQUFNLENBQUMsTUFBTSxDQUFDO0FBQ3ZCLFdBQU8sRUFBRSxDQUFDLGVBQWUsQ0FBQztBQUMxQixRQUFJLEVBQUUsUUFBUTs7QUFFZCxhQUFTLEVBQUU7QUFDVCxTQUFHLEVBQUU7QUFDSCxhQUFLLEVBQUUsUUFBUTtBQUNmLG1CQUFXLEVBQUUsOEJBQThCO0FBQzNDLFlBQUksRUFBRSx1QkFBdUI7QUFDN0Isa0JBQVUsRUFBRSxvQkFBVSxNQUFNLEVBQUUsT0FBTyxFQUFFO0FBQ3JDLGNBQUksTUFBTSxHQUFHLE1BQU0sQ0FBQyxNQUFNLEVBQUUsQ0FBQztBQUM3QixpQkFBTztBQUNMLHlCQUFhLEVBQUUsTUFBTSxDQUFDLEdBQUcsQ0FBQyx3QkFBd0IsQ0FBQztBQUNuRCw4QkFBa0IsRUFBRSxNQUFNLENBQUMsR0FBRyxDQUFDLDZCQUE2QixDQUFDO0FBQzdELG9CQUFRLEVBQUUsTUFBTSxDQUFDLEdBQUcsQ0FBQyxjQUFjLENBQUM7QUFDcEMsd0JBQVksRUFBRSxNQUFNLENBQUMsR0FBRyxDQUFDLDBCQUEwQixDQUFDO0FBQ3BELDBCQUFjLEVBQUUsTUFBTSxDQUFDLEdBQUcsQ0FBQyw0QkFBNEIsQ0FBQztBQUN4RCwwQkFBYyxFQUFFLE1BQU0sQ0FBQyxHQUFHLENBQUMseUJBQXlCLENBQUM7QUFDckQsdUJBQVcsRUFBRSxNQUFNLENBQUMsR0FBRyxDQUFDLHFCQUFxQixDQUFDO0FBQzlDLDZCQUFpQixFQUFFLE1BQU0sQ0FBQyxHQUFHLENBQUMscUJBQXFCLENBQUM7QUFDcEQsOEJBQWtCLEVBQUUsTUFBTSxDQUFDLEdBQUcsQ0FBQyw4QkFBOEIsQ0FBQztXQUMvRCxDQUFDO1NBQ0g7T0FDRjtLQUNGOztBQUVELFVBQU0sRUFBRSxnQkFBVSxHQUFHLEVBQUU7QUFDckIsYUFBTyxHQUFHLENBQUMsTUFBTSxDQUFDO0FBQ2hCLGVBQU8sRUFBRSxHQUFHLENBQUMsT0FBTyxFQUFFLFdBQVEsQ0FBQyxJQUFJLENBQUM7QUFDcEMsYUFBSyxFQUFFLEdBQUcsQ0FBQyxNQUFNLEVBQUUsV0FBUSxDQUFDLG1CQUFtQixDQUFDO0FBQ2hELG9CQUFZLEVBQUUsR0FBRyxDQUFDLE1BQU0sRUFBRSxXQUFRLENBQUMsZUFBZSxDQUFDO0FBQ25ELHlCQUFpQixFQUFFLEdBQUcsQ0FBQyxNQUFNLEVBQUUsV0FBUSxDQUFDLEVBQUUsQ0FBQztBQUMzQyx1QkFBZSxFQUFFLEdBQUcsQ0FBQyxNQUFNLEVBQUUsV0FBUSxDQUFDLEtBQUssQ0FBQztBQUM1Qyw0QkFBb0IsRUFBRSxHQUFHLENBQUMsTUFBTSxFQUFFLFdBQVEsQ0FBQyxFQUFFLENBQUM7QUFDOUMsb0JBQVksRUFBRSxHQUFHLENBQUMsT0FBTyxFQUFFLFdBQVEsQ0FBQyxJQUFJLENBQUM7QUFDekMsNkJBQXFCLEVBQUUsR0FBRyxDQUFDLE1BQU0sRUFBRSxXQUFRLENBQUMsWUFBWSxDQUFDO0FBQ3pELHFCQUFhLEVBQUUsR0FBRyxDQUFDLE1BQU0sRUFBRSxDQUFDLEtBQUssQ0FBQyw4QkFBOEIsQ0FBQyxXQUFRLENBQUMsbUJBQW1CLENBQUM7QUFDOUYsd0JBQWdCLEVBQUUsR0FBRyxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUU7QUFDakMsWUFBRSxFQUFFLElBQUk7QUFDUixjQUFJLEVBQUUsR0FBRyxDQUFDLE1BQU0sRUFBRSxXQUFRLENBQUMsNkJBQTZCLENBQUM7QUFDekQsbUJBQVMsRUFBRSxHQUFHLENBQUMsTUFBTSxFQUFFLFdBQVEsQ0FBQywyREFBMkQsQ0FBQztTQUM3RixDQUFDO0FBQ0YsYUFBSyxFQUFFLEdBQUcsQ0FBQyxNQUFNLENBQUM7QUFDaEIsa0JBQVEsRUFBRSxHQUFHLENBQUMsTUFBTSxFQUFFLENBQUMsS0FBSyxDQUFDLGtCQUFrQixDQUFDLFdBQVEsQ0FBQyxLQUFLLENBQUM7U0FDaEUsQ0FBQyxXQUFRLEVBQUU7T0FDYixDQUFDLFdBQVEsRUFBRSxDQUFDO0tBQ2Q7O0FBRUQsUUFBSSxFQUFFLGNBQVUsTUFBTSxFQUFFLE9BQU8sRUFBRTs7QUFFL0IscUJBQWUsQ0FBQyxJQUFJLEVBQUUsTUFBTSxDQUFDLENBQUM7O0FBRTlCLHdCQUFrQixDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUUsUUFBUSxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUUsTUFBTSxDQUFDLEVBQUUsTUFBTSxDQUFDLENBQUM7S0FDL0U7R0FDRixDQUFDLENBQUM7Q0FDSixDQUFDIiwiZmlsZSI6Ii9Vc2Vycy9UaGVvL0Rlc2t0b3AvTmVidWxhL2VsYXN0aWNzZWFyY2gvaW5zdGFsbGVkUGx1Z2lucy9tYXJ2ZWwvaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgUHJvbWlzZSA9IHJlcXVpcmUoJ2JsdWViaXJkJyk7XG52YXIgam9pbiA9IHJlcXVpcmUoJ3BhdGgnKS5qb2luO1xudmFyIHJlcXVpcmVBbGxBbmRBcHBseSA9IHJlcXVpcmUoJy4vc2VydmVyL2xpYi9yZXF1aXJlX2FsbF9hbmRfYXBwbHknKTtcbnZhciBwbHVnaW5TZWxmQ2hlY2sgPSByZXF1aXJlKCcuL3NlcnZlci9saWIvcGx1Z2luX3NlbGZfY2hlY2snKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoa2liYW5hKSB7XG4gIHJldHVybiBuZXcga2liYW5hLlBsdWdpbih7XG4gICAgcmVxdWlyZTogWydlbGFzdGljc2VhcmNoJ10sXG4gICAgbmFtZTogJ21hcnZlbCcsXG5cbiAgICB1aUV4cG9ydHM6IHtcbiAgICAgIGFwcDoge1xuICAgICAgICB0aXRsZTogJ01hcnZlbCcsXG4gICAgICAgIGRlc2NyaXB0aW9uOiAnTW9uaXRvcmluZyBmb3IgRWxhc3RpY3NlYXJjaCcsXG4gICAgICAgIG1haW46ICdwbHVnaW5zL21hcnZlbC9tYXJ2ZWwnLFxuICAgICAgICBpbmplY3RWYXJzOiBmdW5jdGlvbiAoc2VydmVyLCBvcHRpb25zKSB7XG4gICAgICAgICAgdmFyIGNvbmZpZyA9IHNlcnZlci5jb25maWcoKTtcbiAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgbWF4QnVja2V0U2l6ZTogY29uZmlnLmdldCgnbWFydmVsLm1heF9idWNrZXRfc2l6ZScpLFxuICAgICAgICAgICAgbWluSW50ZXJ2YWxTZWNvbmRzOiBjb25maWcuZ2V0KCdtYXJ2ZWwubWluX2ludGVydmFsX3NlY29uZHMnKSxcbiAgICAgICAgICAgIGtibkluZGV4OiBjb25maWcuZ2V0KCdraWJhbmEuaW5kZXgnKSxcbiAgICAgICAgICAgIGVzQXBpVmVyc2lvbjogY29uZmlnLmdldCgnZWxhc3RpY3NlYXJjaC5hcGlWZXJzaW9uJyksXG4gICAgICAgICAgICBlc1NoYXJkVGltZW91dDogY29uZmlnLmdldCgnZWxhc3RpY3NlYXJjaC5zaGFyZFRpbWVvdXQnKSxcbiAgICAgICAgICAgIHN0YXRzUmVwb3J0VXJsOiBjb25maWcuZ2V0KCdtYXJ2ZWwuc3RhdHNfcmVwb3J0X3VybCcpLFxuICAgICAgICAgICAgcmVwb3J0U3RhdHM6IGNvbmZpZy5nZXQoJ21hcnZlbC5yZXBvcnRfc3RhdHMnKSxcbiAgICAgICAgICAgIG1hcnZlbEluZGV4UHJlZml4OiBjb25maWcuZ2V0KCdtYXJ2ZWwuaW5kZXhfcHJlZml4JyksXG4gICAgICAgICAgICBnb29nbGVUYWdNYW5hZ2VySWQ6IGNvbmZpZy5nZXQoJ21hcnZlbC5nb29nbGVfdGFnX21hbmFnZXJfaWQnKVxuICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9LFxuXG4gICAgY29uZmlnOiBmdW5jdGlvbiAoSm9pKSB7XG4gICAgICByZXR1cm4gSm9pLm9iamVjdCh7XG4gICAgICAgIGVuYWJsZWQ6IEpvaS5ib29sZWFuKCkuZGVmYXVsdCh0cnVlKSxcbiAgICAgICAgaW5kZXg6IEpvaS5zdHJpbmcoKS5kZWZhdWx0KCcubWFydmVsLWVzLWRhdGEtMScpLFxuICAgICAgICBpbmRleF9wcmVmaXg6IEpvaS5zdHJpbmcoKS5kZWZhdWx0KCcubWFydmVsLWVzLTEtJyksXG4gICAgICAgIG1pc3NpbmdfaW50ZXJ2YWxzOiBKb2kubnVtYmVyKCkuZGVmYXVsdCgxMiksXG4gICAgICAgIG1heF9idWNrZXRfc2l6ZTogSm9pLm51bWJlcigpLmRlZmF1bHQoMTAwMDApLFxuICAgICAgICBtaW5faW50ZXJ2YWxfc2Vjb25kczogSm9pLm51bWJlcigpLmRlZmF1bHQoMTApLFxuICAgICAgICByZXBvcnRfc3RhdHM6IEpvaS5ib29sZWFuKCkuZGVmYXVsdCh0cnVlKSxcbiAgICAgICAgZ29vZ2xlX3RhZ19tYW5hZ2VyX2lkOiBKb2kuc3RyaW5nKCkuZGVmYXVsdCgnR1RNLVdYTUhHTScpLFxuICAgICAgICBub2RlX3Jlc29sdmVyOiBKb2kuc3RyaW5nKCkucmVnZXgoL14oPzp0cmFuc3BvcnRfYWRkcmVzc3xuYW1lKSQvKS5kZWZhdWx0KCd0cmFuc3BvcnRfYWRkcmVzcycpLFxuICAgICAgICBzdGF0c19yZXBvcnRfdXJsOiBKb2kud2hlbignJGRldicsIHtcbiAgICAgICAgICBpczogdHJ1ZSxcbiAgICAgICAgICB0aGVuOiBKb2kuc3RyaW5nKCkuZGVmYXVsdCgnLi4vYXBpL21hcnZlbC92MS9waG9uZS1ob21lJyksXG4gICAgICAgICAgb3RoZXJ3aXNlOiBKb2kuc3RyaW5nKCkuZGVmYXVsdCgnaHR0cHM6Ly9tYXJ2ZWwtc3RhdHMuZWxhc3RpY3NlYXJjaC5jb20vYXBwZGF0YS9tYXJ2ZWxPcHRzJylcbiAgICAgICAgfSksXG4gICAgICAgIGFnZW50OiBKb2kub2JqZWN0KHtcbiAgICAgICAgICBpbnRlcnZhbDogSm9pLnN0cmluZygpLnJlZ2V4KC9bXFxkXFwuXStbeU13ZGhtc10vKS5kZWZhdWx0KCcxMHMnKVxuICAgICAgICB9KS5kZWZhdWx0KClcbiAgICAgIH0pLmRlZmF1bHQoKTtcbiAgICB9LFxuXG4gICAgaW5pdDogZnVuY3Rpb24gKHNlcnZlciwgb3B0aW9ucykge1xuICAgICAgLy8gTWFrZSBzdXJlIHRoZSBNYXJ2ZWwgaW5kZXggaXMgY3JlYXRlZCBhbmQgdGhlIEtpYmFuYSB2ZXJzaW9uIGlzIHN1cHBvcnRlZFxuICAgICAgcGx1Z2luU2VsZkNoZWNrKHRoaXMsIHNlcnZlcik7XG4gICAgICAvLyBSZXF1aXJlIGFsbCB0aGUgcm91dGVzXG4gICAgICByZXF1aXJlQWxsQW5kQXBwbHkoam9pbihfX2Rpcm5hbWUsICdzZXJ2ZXInLCAncm91dGVzJywgJyoqJywgJyouanMnKSwgc2VydmVyKTtcbiAgICB9XG4gIH0pO1xufTtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/Users/Theo/Desktop/Nebula/elasticsearch/installedPlugins/marvel/index.js"
      ],
      "names": [],
      "mappings": "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",
      "file": "/Users/Theo/Desktop/Nebula/elasticsearch/installedPlugins/marvel/index.js",
      "sourcesContent": [
        "var Promise = require('bluebird');\nvar join = require('path').join;\nvar requireAllAndApply = require('./server/lib/require_all_and_apply');\nvar pluginSelfCheck = require('./server/lib/plugin_self_check');\n\nmodule.exports = function (kibana) {\n  return new kibana.Plugin({\n    require: ['elasticsearch'],\n    name: 'marvel',\n\n    uiExports: {\n      app: {\n        title: 'Marvel',\n        description: 'Monitoring for Elasticsearch',\n        main: 'plugins/marvel/marvel',\n        injectVars: function (server, options) {\n          var config = server.config();\n          return {\n            maxBucketSize: config.get('marvel.max_bucket_size'),\n            minIntervalSeconds: config.get('marvel.min_interval_seconds'),\n            kbnIndex: config.get('kibana.index'),\n            esApiVersion: config.get('elasticsearch.apiVersion'),\n            esShardTimeout: config.get('elasticsearch.shardTimeout'),\n            statsReportUrl: config.get('marvel.stats_report_url'),\n            reportStats: config.get('marvel.report_stats'),\n            marvelIndexPrefix: config.get('marvel.index_prefix'),\n            googleTagManagerId: config.get('marvel.google_tag_manager_id')\n          };\n        }\n      }\n    },\n\n    config: function (Joi) {\n      return Joi.object({\n        enabled: Joi.boolean().default(true),\n        index: Joi.string().default('.marvel-es-data-1'),\n        index_prefix: Joi.string().default('.marvel-es-1-'),\n        missing_intervals: Joi.number().default(12),\n        max_bucket_size: Joi.number().default(10000),\n        min_interval_seconds: Joi.number().default(10),\n        report_stats: Joi.boolean().default(true),\n        google_tag_manager_id: Joi.string().default('GTM-WXMHGM'),\n        node_resolver: Joi.string().regex(/^(?:transport_address|name)$/).default('transport_address'),\n        stats_report_url: Joi.when('$dev', {\n          is: true,\n          then: Joi.string().default('../api/marvel/v1/phone-home'),\n          otherwise: Joi.string().default('https://marvel-stats.elasticsearch.com/appdata/marvelOpts')\n        }),\n        agent: Joi.object({\n          interval: Joi.string().regex(/[\\d\\.]+[yMwdhms]/).default('10s')\n        }).default()\n      }).default();\n    },\n\n    init: function (server, options) {\n      // Make sure the Marvel index is created and the Kibana version is supported\n      pluginSelfCheck(this, server);\n      // Require all the routes\n      requireAllAndApply(join(__dirname, 'server', 'routes', '**', '*.js'), server);\n    }\n  });\n};\n"
      ]
    },
    "mtime": 1467741420000
  },
  "{\"filename\":\"/Users/Theo/Desktop/Nebula/elasticsearch/installedPlugins/marvel/server/lib/require_all_and_apply.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "'use strict';\n\nvar glob = require('glob');\nvar Promise = require('bluebird');\n\nmodule.exports = function (path, server) {\n  return new Promise(function (resolve, reject) {\n    glob(path, { ignore: '**/__test__/**' }, function (err, files) {\n      if (err) return reject(err);\n      var modules = files.map(require);\n      modules.forEach(function (fn) {\n        fn(server);\n      });\n      resolve(modules);\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9UaGVvL0Rlc2t0b3AvTmVidWxhL2VsYXN0aWNzZWFyY2gvaW5zdGFsbGVkUGx1Z2lucy9tYXJ2ZWwvc2VydmVyL2xpYi9yZXF1aXJlX2FsbF9hbmRfYXBwbHkuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFJLElBQUksR0FBRyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUM7QUFDM0IsSUFBSSxPQUFPLEdBQUcsT0FBTyxDQUFDLFVBQVUsQ0FBQyxDQUFDOztBQUVsQyxNQUFNLENBQUMsT0FBTyxHQUFHLFVBQVUsSUFBSSxFQUFFLE1BQU0sRUFBRTtBQUN2QyxTQUFPLElBQUksT0FBTyxDQUFDLFVBQVUsT0FBTyxFQUFFLE1BQU0sRUFBRTtBQUM1QyxRQUFJLENBQUMsSUFBSSxFQUFFLEVBQUUsTUFBTSxFQUFFLGdCQUFnQixFQUFFLEVBQUUsVUFBVSxHQUFHLEVBQUUsS0FBSyxFQUFFO0FBQzdELFVBQUksR0FBRyxFQUFFLE9BQU8sTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0FBQzVCLFVBQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLENBQUM7QUFDakMsYUFBTyxDQUFDLE9BQU8sQ0FBQyxVQUFVLEVBQUUsRUFBRTtBQUM1QixVQUFFLENBQUMsTUFBTSxDQUFDLENBQUM7T0FDWixDQUFDLENBQUM7QUFDSCxhQUFPLENBQUMsT0FBTyxDQUFDLENBQUM7S0FDbEIsQ0FBQyxDQUFDO0dBQ0osQ0FBQyxDQUFDO0NBQ0osQ0FBQyIsImZpbGUiOiIvVXNlcnMvVGhlby9EZXNrdG9wL05lYnVsYS9lbGFzdGljc2VhcmNoL2luc3RhbGxlZFBsdWdpbnMvbWFydmVsL3NlcnZlci9saWIvcmVxdWlyZV9hbGxfYW5kX2FwcGx5LmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGdsb2IgPSByZXF1aXJlKCdnbG9iJyk7XG52YXIgUHJvbWlzZSA9IHJlcXVpcmUoJ2JsdWViaXJkJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHBhdGgsIHNlcnZlcikge1xuICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuICAgIGdsb2IocGF0aCwgeyBpZ25vcmU6ICcqKi9fX3Rlc3RfXy8qKicgfSwgZnVuY3Rpb24gKGVyciwgZmlsZXMpIHtcbiAgICAgIGlmIChlcnIpIHJldHVybiByZWplY3QoZXJyKTtcbiAgICAgIHZhciBtb2R1bGVzID0gZmlsZXMubWFwKHJlcXVpcmUpO1xuICAgICAgbW9kdWxlcy5mb3JFYWNoKGZ1bmN0aW9uIChmbikge1xuICAgICAgICBmbihzZXJ2ZXIpO1xuICAgICAgfSk7XG4gICAgICByZXNvbHZlKG1vZHVsZXMpO1xuICAgIH0pO1xuICB9KTtcbn07XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/Users/Theo/Desktop/Nebula/elasticsearch/installedPlugins/marvel/server/lib/require_all_and_apply.js"
      ],
      "names": [],
      "mappings": ";;AAAA,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC3B,IAAI,OAAO,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;;AAElC,MAAM,CAAC,OAAO,GAAG,UAAU,IAAI,EAAE,MAAM,EAAE;AACvC,SAAO,IAAI,OAAO,CAAC,UAAU,OAAO,EAAE,MAAM,EAAE;AAC5C,QAAI,CAAC,IAAI,EAAE,EAAE,MAAM,EAAE,gBAAgB,EAAE,EAAE,UAAU,GAAG,EAAE,KAAK,EAAE;AAC7D,UAAI,GAAG,EAAE,OAAO,MAAM,CAAC,GAAG,CAAC,CAAC;AAC5B,UAAI,OAAO,GAAG,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;AACjC,aAAO,CAAC,OAAO,CAAC,UAAU,EAAE,EAAE;AAC5B,UAAE,CAAC,MAAM,CAAC,CAAC;OACZ,CAAC,CAAC;AACH,aAAO,CAAC,OAAO,CAAC,CAAC;KAClB,CAAC,CAAC;GACJ,CAAC,CAAC;CACJ,CAAC",
      "file": "/Users/Theo/Desktop/Nebula/elasticsearch/installedPlugins/marvel/server/lib/require_all_and_apply.js",
      "sourcesContent": [
        "var glob = require('glob');\nvar Promise = require('bluebird');\n\nmodule.exports = function (path, server) {\n  return new Promise(function (resolve, reject) {\n    glob(path, { ignore: '**/__test__/**' }, function (err, files) {\n      if (err) return reject(err);\n      var modules = files.map(require);\n      modules.forEach(function (fn) {\n        fn(server);\n      });\n      resolve(modules);\n    });\n  });\n};\n"
      ]
    },
    "mtime": 1467741420000
  },
  "{\"filename\":\"/Users/Theo/Desktop/Nebula/elasticsearch/installedPlugins/marvel/server/lib/plugin_self_check.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "'use strict';\n\nvar createMarvelIndexPattern = require('./create_marvel_index_pattern');\nvar ensureVersions = require('./ensure_versions');\n\nmodule.exports = function pluginSelfCheck(plugin, server) {\n  plugin.status.yellow('Waiting for Elasticsearch');\n  var client = server.plugins.elasticsearch.client;\n\n  server.plugins.elasticsearch.status.on('green', function () {\n    // check if kibana is minimum supported version\n\n    var _ensureVersions = ensureVersions(plugin);\n\n    var isKibanaSupported = _ensureVersions.isKibanaSupported;\n    var kibanaVersion = _ensureVersions.kibanaVersion;\n    var marvelVersion = _ensureVersions.marvelVersion;\n\n    if (isKibanaSupported) {\n      // start setting up the Marvel index.\n      return createMarvelIndexPattern(server).then(function () {\n        return plugin.status.green('Marvel index ready');\n      });\n    } else if (!isKibanaSupported) {\n      plugin.status.red('Marvel version ' + marvelVersion + ' is not supported with Kibana ' + kibanaVersion);\n    }\n  });\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9UaGVvL0Rlc2t0b3AvTmVidWxhL2VsYXN0aWNzZWFyY2gvaW5zdGFsbGVkUGx1Z2lucy9tYXJ2ZWwvc2VydmVyL2xpYi9wbHVnaW5fc2VsZl9jaGVjay5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLElBQU0sd0JBQXdCLEdBQUcsT0FBTyxDQUFDLCtCQUErQixDQUFDLENBQUM7QUFDMUUsSUFBTSxjQUFjLEdBQUcsT0FBTyxDQUFDLG1CQUFtQixDQUFDLENBQUM7O0FBRXBELE1BQU0sQ0FBQyxPQUFPLEdBQUcsU0FBUyxlQUFlLENBQUMsTUFBTSxFQUFFLE1BQU0sRUFBRTtBQUN4RCxRQUFNLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQywyQkFBMkIsQ0FBQyxDQUFDO0FBQ2xELE1BQUksTUFBTSxHQUFHLE1BQU0sQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDLE1BQU0sQ0FBQzs7QUFFakQsUUFBTSxDQUFDLE9BQU8sQ0FBQyxhQUFhLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxPQUFPLEVBQUUsWUFBTTs7OzBCQU1oRCxjQUFjLENBQUMsTUFBTSxDQUFDOztRQUh4QixpQkFBaUIsbUJBQWpCLGlCQUFpQjtRQUNqQixhQUFhLG1CQUFiLGFBQWE7UUFDYixhQUFhLG1CQUFiLGFBQWE7O0FBR2YsUUFBSSxpQkFBaUIsRUFBRTs7QUFFckIsYUFBTyx3QkFBd0IsQ0FBQyxNQUFNLENBQUMsQ0FDdEMsSUFBSSxDQUFDO2VBQU0sTUFBTSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsb0JBQW9CLENBQUM7T0FBQSxDQUFDLENBQUM7S0FDeEQsTUFBTSxJQUFJLENBQUMsaUJBQWlCLEVBQUU7QUFDN0IsWUFBTSxDQUFDLE1BQU0sQ0FBQyxHQUFHLHFCQUFtQixhQUFhLHNDQUFpQyxhQUFhLENBQUcsQ0FBQztLQUNwRztHQUNGLENBQUMsQ0FBQztDQUVKLENBQUMiLCJmaWxlIjoiL1VzZXJzL1RoZW8vRGVza3RvcC9OZWJ1bGEvZWxhc3RpY3NlYXJjaC9pbnN0YWxsZWRQbHVnaW5zL21hcnZlbC9zZXJ2ZXIvbGliL3BsdWdpbl9zZWxmX2NoZWNrLmpzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgY3JlYXRlTWFydmVsSW5kZXhQYXR0ZXJuID0gcmVxdWlyZSgnLi9jcmVhdGVfbWFydmVsX2luZGV4X3BhdHRlcm4nKTtcbmNvbnN0IGVuc3VyZVZlcnNpb25zID0gcmVxdWlyZSgnLi9lbnN1cmVfdmVyc2lvbnMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBwbHVnaW5TZWxmQ2hlY2socGx1Z2luLCBzZXJ2ZXIpIHtcbiAgcGx1Z2luLnN0YXR1cy55ZWxsb3coJ1dhaXRpbmcgZm9yIEVsYXN0aWNzZWFyY2gnKTtcbiAgdmFyIGNsaWVudCA9IHNlcnZlci5wbHVnaW5zLmVsYXN0aWNzZWFyY2guY2xpZW50O1xuXG4gIHNlcnZlci5wbHVnaW5zLmVsYXN0aWNzZWFyY2guc3RhdHVzLm9uKCdncmVlbicsICgpID0+IHtcbiAgICAvLyBjaGVjayBpZiBraWJhbmEgaXMgbWluaW11bSBzdXBwb3J0ZWQgdmVyc2lvblxuICAgIGNvbnN0IHtcbiAgICAgIGlzS2liYW5hU3VwcG9ydGVkLFxuICAgICAga2liYW5hVmVyc2lvbixcbiAgICAgIG1hcnZlbFZlcnNpb25cbiAgICB9ID0gZW5zdXJlVmVyc2lvbnMocGx1Z2luKTtcblxuICAgIGlmIChpc0tpYmFuYVN1cHBvcnRlZCkge1xuICAgICAgLy8gc3RhcnQgc2V0dGluZyB1cCB0aGUgTWFydmVsIGluZGV4LlxuICAgICAgcmV0dXJuIGNyZWF0ZU1hcnZlbEluZGV4UGF0dGVybihzZXJ2ZXIpXG4gICAgICAudGhlbigoKSA9PiBwbHVnaW4uc3RhdHVzLmdyZWVuKCdNYXJ2ZWwgaW5kZXggcmVhZHknKSk7XG4gICAgfSBlbHNlIGlmICghaXNLaWJhbmFTdXBwb3J0ZWQpIHtcbiAgICAgIHBsdWdpbi5zdGF0dXMucmVkKGBNYXJ2ZWwgdmVyc2lvbiAke21hcnZlbFZlcnNpb259IGlzIG5vdCBzdXBwb3J0ZWQgd2l0aCBLaWJhbmEgJHtraWJhbmFWZXJzaW9ufWApO1xuICAgIH1cbiAgfSk7XG5cbn07XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/Users/Theo/Desktop/Nebula/elasticsearch/installedPlugins/marvel/server/lib/plugin_self_check.js"
      ],
      "names": [],
      "mappings": ";;AAAA,IAAM,wBAAwB,GAAG,OAAO,CAAC,+BAA+B,CAAC,CAAC;AAC1E,IAAM,cAAc,GAAG,OAAO,CAAC,mBAAmB,CAAC,CAAC;;AAEpD,MAAM,CAAC,OAAO,GAAG,SAAS,eAAe,CAAC,MAAM,EAAE,MAAM,EAAE;AACxD,QAAM,CAAC,MAAM,CAAC,MAAM,CAAC,2BAA2B,CAAC,CAAC;AAClD,MAAI,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,MAAM,CAAC;;AAEjD,QAAM,CAAC,OAAO,CAAC,aAAa,CAAC,MAAM,CAAC,EAAE,CAAC,OAAO,EAAE,YAAM;;;0BAMhD,cAAc,CAAC,MAAM,CAAC;;QAHxB,iBAAiB,mBAAjB,iBAAiB;QACjB,aAAa,mBAAb,aAAa;QACb,aAAa,mBAAb,aAAa;;AAGf,QAAI,iBAAiB,EAAE;;AAErB,aAAO,wBAAwB,CAAC,MAAM,CAAC,CACtC,IAAI,CAAC;eAAM,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,oBAAoB,CAAC;OAAA,CAAC,CAAC;KACxD,MAAM,IAAI,CAAC,iBAAiB,EAAE;AAC7B,YAAM,CAAC,MAAM,CAAC,GAAG,qBAAmB,aAAa,sCAAiC,aAAa,CAAG,CAAC;KACpG;GACF,CAAC,CAAC;CAEJ,CAAC",
      "file": "/Users/Theo/Desktop/Nebula/elasticsearch/installedPlugins/marvel/server/lib/plugin_self_check.js",
      "sourcesContent": [
        "const createMarvelIndexPattern = require('./create_marvel_index_pattern');\nconst ensureVersions = require('./ensure_versions');\n\nmodule.exports = function pluginSelfCheck(plugin, server) {\n  plugin.status.yellow('Waiting for Elasticsearch');\n  var client = server.plugins.elasticsearch.client;\n\n  server.plugins.elasticsearch.status.on('green', () => {\n    // check if kibana is minimum supported version\n    const {\n      isKibanaSupported,\n      kibanaVersion,\n      marvelVersion\n    } = ensureVersions(plugin);\n\n    if (isKibanaSupported) {\n      // start setting up the Marvel index.\n      return createMarvelIndexPattern(server)\n      .then(() => plugin.status.green('Marvel index ready'));\n    } else if (!isKibanaSupported) {\n      plugin.status.red(`Marvel version ${marvelVersion} is not supported with Kibana ${kibanaVersion}`);\n    }\n  });\n\n};\n"
      ]
    },
    "mtime": 1467741420000
  },
  "{\"filename\":\"/Users/Theo/Desktop/Nebula/elasticsearch/installedPlugins/marvel/server/lib/create_marvel_index_pattern.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "'use strict';\n\nvar Promise = require('bluebird');\nvar marvelIndexPattern = require('./marvel_index_pattern.json');\nmodule.exports = function (server) {\n  var client = server.plugins.elasticsearch.client;\n  var config = server.config();\n  var index = config.get('kibana.index');\n  var marvelIndexPrefix = config.get('marvel.index_prefix');\n  var id = marvelIndexPrefix + '*';\n  var type = 'index-pattern';\n  return client.get({\n    index: index,\n    type: type,\n    id: id,\n    ignoreUnavailable: true\n  })['catch'](function (resp) {\n    if (resp.status !== 404) return Promise.reject(resp);\n    // Create an index pattern for Marvel indices.\n    return client.index({\n      index: index,\n      type: type,\n      id: id,\n      body: marvelIndexPattern\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9UaGVvL0Rlc2t0b3AvTmVidWxhL2VsYXN0aWNzZWFyY2gvaW5zdGFsbGVkUGx1Z2lucy9tYXJ2ZWwvc2VydmVyL2xpYi9jcmVhdGVfbWFydmVsX2luZGV4X3BhdHRlcm4uanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFJLE9BQU8sR0FBRyxPQUFPLENBQUMsVUFBVSxDQUFDLENBQUM7QUFDbEMsSUFBSSxrQkFBa0IsR0FBRyxPQUFPLENBQUMsNkJBQTZCLENBQUMsQ0FBQztBQUNoRSxNQUFNLENBQUMsT0FBTyxHQUFHLFVBQVUsTUFBTSxFQUFFO0FBQ2pDLE1BQUksTUFBTSxHQUFHLE1BQU0sQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDLE1BQU0sQ0FBQztBQUNqRCxNQUFJLE1BQU0sR0FBRyxNQUFNLENBQUMsTUFBTSxFQUFFLENBQUM7QUFDN0IsTUFBSSxLQUFLLEdBQUcsTUFBTSxDQUFDLEdBQUcsQ0FBQyxjQUFjLENBQUMsQ0FBQztBQUN2QyxNQUFJLGlCQUFpQixHQUFHLE1BQU0sQ0FBQyxHQUFHLENBQUMscUJBQXFCLENBQUMsQ0FBQztBQUMxRCxNQUFJLEVBQUUsR0FBSSxpQkFBaUIsR0FBRyxHQUFHLENBQUM7QUFDbEMsTUFBSSxJQUFJLEdBQUcsZUFBZSxDQUFDO0FBQzNCLFNBQU8sTUFBTSxDQUFDLEdBQUcsQ0FBQztBQUNoQixTQUFLLEVBQUUsS0FBSztBQUNaLFFBQUksRUFBRSxJQUFJO0FBQ1YsTUFBRSxFQUFFLEVBQUU7QUFDTixxQkFBaUIsRUFBRSxJQUFJO0dBQ3hCLENBQUMsU0FDSSxDQUFDLFVBQVUsSUFBSSxFQUFFO0FBQ3JCLFFBQUksSUFBSSxDQUFDLE1BQU0sS0FBSyxHQUFHLEVBQUUsT0FBTyxPQUFPLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDOztBQUVyRCxXQUFPLE1BQU0sQ0FBQyxLQUFLLENBQUM7QUFDbEIsV0FBSyxFQUFFLEtBQUs7QUFDWixVQUFJLEVBQUUsSUFBSTtBQUNWLFFBQUUsRUFBRSxFQUFFO0FBQ04sVUFBSSxFQUFFLGtCQUFrQjtLQUN6QixDQUFDLENBQUM7R0FDSixDQUFDLENBQUM7Q0FDSixDQUFDIiwiZmlsZSI6Ii9Vc2Vycy9UaGVvL0Rlc2t0b3AvTmVidWxhL2VsYXN0aWNzZWFyY2gvaW5zdGFsbGVkUGx1Z2lucy9tYXJ2ZWwvc2VydmVyL2xpYi9jcmVhdGVfbWFydmVsX2luZGV4X3BhdHRlcm4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgUHJvbWlzZSA9IHJlcXVpcmUoJ2JsdWViaXJkJyk7XG52YXIgbWFydmVsSW5kZXhQYXR0ZXJuID0gcmVxdWlyZSgnLi9tYXJ2ZWxfaW5kZXhfcGF0dGVybi5qc29uJyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChzZXJ2ZXIpIHtcbiAgdmFyIGNsaWVudCA9IHNlcnZlci5wbHVnaW5zLmVsYXN0aWNzZWFyY2guY2xpZW50O1xuICB2YXIgY29uZmlnID0gc2VydmVyLmNvbmZpZygpO1xuICB2YXIgaW5kZXggPSBjb25maWcuZ2V0KCdraWJhbmEuaW5kZXgnKTtcbiAgdmFyIG1hcnZlbEluZGV4UHJlZml4ID0gY29uZmlnLmdldCgnbWFydmVsLmluZGV4X3ByZWZpeCcpO1xuICB2YXIgaWQgPSAgbWFydmVsSW5kZXhQcmVmaXggKyAnKic7XG4gIHZhciB0eXBlID0gJ2luZGV4LXBhdHRlcm4nO1xuICByZXR1cm4gY2xpZW50LmdldCh7XG4gICAgaW5kZXg6IGluZGV4LFxuICAgIHR5cGU6IHR5cGUsXG4gICAgaWQ6IGlkLFxuICAgIGlnbm9yZVVuYXZhaWxhYmxlOiB0cnVlXG4gIH0pXG4gIC5jYXRjaChmdW5jdGlvbiAocmVzcCkge1xuICAgIGlmIChyZXNwLnN0YXR1cyAhPT0gNDA0KSByZXR1cm4gUHJvbWlzZS5yZWplY3QocmVzcCk7XG4gICAgLy8gQ3JlYXRlIGFuIGluZGV4IHBhdHRlcm4gZm9yIE1hcnZlbCBpbmRpY2VzLlxuICAgIHJldHVybiBjbGllbnQuaW5kZXgoe1xuICAgICAgaW5kZXg6IGluZGV4LFxuICAgICAgdHlwZTogdHlwZSxcbiAgICAgIGlkOiBpZCxcbiAgICAgIGJvZHk6IG1hcnZlbEluZGV4UGF0dGVyblxuICAgIH0pO1xuICB9KTtcbn07XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/Users/Theo/Desktop/Nebula/elasticsearch/installedPlugins/marvel/server/lib/create_marvel_index_pattern.js"
      ],
      "names": [],
      "mappings": ";;AAAA,IAAI,OAAO,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AAClC,IAAI,kBAAkB,GAAG,OAAO,CAAC,6BAA6B,CAAC,CAAC;AAChE,MAAM,CAAC,OAAO,GAAG,UAAU,MAAM,EAAE;AACjC,MAAI,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,MAAM,CAAC;AACjD,MAAI,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;AAC7B,MAAI,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;AACvC,MAAI,iBAAiB,GAAG,MAAM,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;AAC1D,MAAI,EAAE,GAAI,iBAAiB,GAAG,GAAG,CAAC;AAClC,MAAI,IAAI,GAAG,eAAe,CAAC;AAC3B,SAAO,MAAM,CAAC,GAAG,CAAC;AAChB,SAAK,EAAE,KAAK;AACZ,QAAI,EAAE,IAAI;AACV,MAAE,EAAE,EAAE;AACN,qBAAiB,EAAE,IAAI;GACxB,CAAC,SACI,CAAC,UAAU,IAAI,EAAE;AACrB,QAAI,IAAI,CAAC,MAAM,KAAK,GAAG,EAAE,OAAO,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;;AAErD,WAAO,MAAM,CAAC,KAAK,CAAC;AAClB,WAAK,EAAE,KAAK;AACZ,UAAI,EAAE,IAAI;AACV,QAAE,EAAE,EAAE;AACN,UAAI,EAAE,kBAAkB;KACzB,CAAC,CAAC;GACJ,CAAC,CAAC;CACJ,CAAC",
      "file": "/Users/Theo/Desktop/Nebula/elasticsearch/installedPlugins/marvel/server/lib/create_marvel_index_pattern.js",
      "sourcesContent": [
        "var Promise = require('bluebird');\nvar marvelIndexPattern = require('./marvel_index_pattern.json');\nmodule.exports = function (server) {\n  var client = server.plugins.elasticsearch.client;\n  var config = server.config();\n  var index = config.get('kibana.index');\n  var marvelIndexPrefix = config.get('marvel.index_prefix');\n  var id =  marvelIndexPrefix + '*';\n  var type = 'index-pattern';\n  return client.get({\n    index: index,\n    type: type,\n    id: id,\n    ignoreUnavailable: true\n  })\n  .catch(function (resp) {\n    if (resp.status !== 404) return Promise.reject(resp);\n    // Create an index pattern for Marvel indices.\n    return client.index({\n      index: index,\n      type: type,\n      id: id,\n      body: marvelIndexPattern\n    });\n  });\n};\n"
      ]
    },
    "mtime": 1467741420000
  },
  "{\"filename\":\"/Users/Theo/Desktop/Nebula/elasticsearch/installedPlugins/marvel/server/lib/ensure_versions.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [
          {
            "source": "lodash",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "_"
              }
            ]
          },
          {
            "source": "semver",
            "imported": [
              "satisfies"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "satisfies",
                "local": "satisfies"
              }
            ]
          },
          {
            "source": "../../package.json",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "pkg"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": [
        "interop-require-default"
      ]
    },
    "ignored": false,
    "code": "/*\n * Ensure version compatibility with Kibana\n * Marvel 2.2.0 should work with Kibana > v4.4.0\n * https://www.elastic.co/guide/en/marvel/current/installing-marvel.html\n * Semver tester: http://jubianchi.github.io/semver-check/\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _semver = require('semver');\n\nvar _packageJson = require('../../package.json');\n\nvar _packageJson2 = _interopRequireDefault(_packageJson);\n\nvar kbnVersionRanges = {\n  '2.2.0': '~4.4.0',\n  '2.2.1': '~4.4.0',\n  '2.2.2': '~4.4.0',\n  '2.3.0': '~4.5.0',\n  '2.3.1': '~4.5.0',\n  '2.3.2': '~4.5.0',\n  '2.3.3': '~4.5.0',\n  '2.3.4': '~4.5.0'\n};\n\nfunction cleanVersionString(string) {\n  if (string) {\n    // get just the number.number.number portion (filter out '-snapshot')\n    var matches = string.match(/^\\d+\\.\\d+.\\d+/);\n    if (matches) {\n      // escape() because the string could be rendered in UI\n      return _lodash2['default'].escape(matches[0]);\n    }\n  }\n\n  return '';\n}\n\nfunction ensureVersions(plugin) {\n\n  var kibanaVersion = cleanVersionString(_lodash2['default'].get(plugin, 'kbnServer.version'));\n  var marvelVersion = cleanVersionString(_packageJson2['default'].version);\n  var returnData = { kibanaVersion: kibanaVersion, marvelVersion: marvelVersion };\n\n  // version support check can throw a TypeError if kibanaVersion is invalid\n  try {\n    returnData.isKibanaSupported = (0, _semver.satisfies)(kibanaVersion, kbnVersionRanges[marvelVersion]);\n  } catch (e) {\n    returnData.isKibanaSupported = false;\n  }\n\n  return returnData;\n}\n\nexports['default'] = ensureVersions;\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9UaGVvL0Rlc2t0b3AvTmVidWxhL2VsYXN0aWNzZWFyY2gvaW5zdGFsbGVkUGx1Z2lucy9tYXJ2ZWwvc2VydmVyL2xpYi9lbnN1cmVfdmVyc2lvbnMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7c0JBTWMsUUFBUTs7OztzQkFDSSxRQUFROzsyQkFDbEIsb0JBQW9COzs7O0FBRXBDLElBQU0sZ0JBQWdCLEdBQUc7QUFDdkIsU0FBTyxFQUFFLFFBQVE7QUFDakIsU0FBTyxFQUFFLFFBQVE7QUFDakIsU0FBTyxFQUFFLFFBQVE7QUFDakIsU0FBTyxFQUFFLFFBQVE7QUFDakIsU0FBTyxFQUFFLFFBQVE7QUFDakIsU0FBTyxFQUFFLFFBQVE7QUFDakIsU0FBTyxFQUFFLFFBQVE7QUFDakIsU0FBTyxFQUFFLFFBQVE7Q0FDbEIsQ0FBQzs7QUFFRixTQUFTLGtCQUFrQixDQUFDLE1BQU0sRUFBRTtBQUNsQyxNQUFJLE1BQU0sRUFBRTs7QUFFVixRQUFNLE9BQU8sR0FBRyxNQUFNLENBQUMsS0FBSyxDQUFDLGVBQWUsQ0FBQyxDQUFDO0FBQzlDLFFBQUksT0FBTyxFQUFFOztBQUVYLGFBQU8sb0JBQUUsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0tBQzdCO0dBQ0Y7O0FBRUQsU0FBTyxFQUFFLENBQUM7Q0FDWDs7QUFFRCxTQUFTLGNBQWMsQ0FBQyxNQUFNLEVBQUU7O0FBRTlCLE1BQU0sYUFBYSxHQUFHLGtCQUFrQixDQUFDLG9CQUFFLEdBQUcsQ0FBQyxNQUFNLEVBQUUsbUJBQW1CLENBQUMsQ0FBQyxDQUFDO0FBQzdFLE1BQU0sYUFBYSxHQUFHLGtCQUFrQixDQUFDLHlCQUFJLE9BQU8sQ0FBQyxDQUFDO0FBQ3RELE1BQU0sVUFBVSxHQUFHLEVBQUUsYUFBYSxFQUFiLGFBQWEsRUFBRSxhQUFhLEVBQWIsYUFBYSxFQUFFLENBQUM7OztBQUdwRCxNQUFJO0FBQ0YsY0FBVSxDQUFDLGlCQUFpQixHQUFHLHVCQUFVLGFBQWEsRUFBRSxnQkFBZ0IsQ0FBQyxhQUFhLENBQUMsQ0FBQyxDQUFDO0dBQzFGLENBQUMsT0FBTyxDQUFDLEVBQUU7QUFDVixjQUFVLENBQUMsaUJBQWlCLEdBQUcsS0FBSyxDQUFDO0dBQ3RDOztBQUVELFNBQU8sVUFBVSxDQUFDO0NBRW5COztxQkFFYyxjQUFjIiwiZmlsZSI6Ii9Vc2Vycy9UaGVvL0Rlc2t0b3AvTmVidWxhL2VsYXN0aWNzZWFyY2gvaW5zdGFsbGVkUGx1Z2lucy9tYXJ2ZWwvc2VydmVyL2xpYi9lbnN1cmVfdmVyc2lvbnMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogRW5zdXJlIHZlcnNpb24gY29tcGF0aWJpbGl0eSB3aXRoIEtpYmFuYVxuICogTWFydmVsIDIuMi4wIHNob3VsZCB3b3JrIHdpdGggS2liYW5hID4gdjQuNC4wXG4gKiBodHRwczovL3d3dy5lbGFzdGljLmNvL2d1aWRlL2VuL21hcnZlbC9jdXJyZW50L2luc3RhbGxpbmctbWFydmVsLmh0bWxcbiAqIFNlbXZlciB0ZXN0ZXI6IGh0dHA6Ly9qdWJpYW5jaGkuZ2l0aHViLmlvL3NlbXZlci1jaGVjay9cbiAqL1xuaW1wb3J0IF8gZnJvbSAnbG9kYXNoJztcbmltcG9ydCB7IHNhdGlzZmllcyB9IGZyb20gJ3NlbXZlcic7XG5pbXBvcnQgcGtnIGZyb20gJy4uLy4uL3BhY2thZ2UuanNvbic7XG5cbmNvbnN0IGtiblZlcnNpb25SYW5nZXMgPSB7XG4gICcyLjIuMCc6ICd+NC40LjAnLFxuICAnMi4yLjEnOiAnfjQuNC4wJyxcbiAgJzIuMi4yJzogJ340LjQuMCcsXG4gICcyLjMuMCc6ICd+NC41LjAnLFxuICAnMi4zLjEnOiAnfjQuNS4wJyxcbiAgJzIuMy4yJzogJ340LjUuMCcsXG4gICcyLjMuMyc6ICd+NC41LjAnLFxuICAnMi4zLjQnOiAnfjQuNS4wJ1xufTtcblxuZnVuY3Rpb24gY2xlYW5WZXJzaW9uU3RyaW5nKHN0cmluZykge1xuICBpZiAoc3RyaW5nKSB7XG4gICAgLy8gZ2V0IGp1c3QgdGhlIG51bWJlci5udW1iZXIubnVtYmVyIHBvcnRpb24gKGZpbHRlciBvdXQgJy1zbmFwc2hvdCcpXG4gICAgY29uc3QgbWF0Y2hlcyA9IHN0cmluZy5tYXRjaCgvXlxcZCtcXC5cXGQrLlxcZCsvKTtcbiAgICBpZiAobWF0Y2hlcykge1xuICAgICAgLy8gZXNjYXBlKCkgYmVjYXVzZSB0aGUgc3RyaW5nIGNvdWxkIGJlIHJlbmRlcmVkIGluIFVJXG4gICAgICByZXR1cm4gXy5lc2NhcGUobWF0Y2hlc1swXSk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuICcnO1xufVxuXG5mdW5jdGlvbiBlbnN1cmVWZXJzaW9ucyhwbHVnaW4pIHtcblxuICBjb25zdCBraWJhbmFWZXJzaW9uID0gY2xlYW5WZXJzaW9uU3RyaW5nKF8uZ2V0KHBsdWdpbiwgJ2tiblNlcnZlci52ZXJzaW9uJykpO1xuICBjb25zdCBtYXJ2ZWxWZXJzaW9uID0gY2xlYW5WZXJzaW9uU3RyaW5nKHBrZy52ZXJzaW9uKTtcbiAgY29uc3QgcmV0dXJuRGF0YSA9IHsga2liYW5hVmVyc2lvbiwgbWFydmVsVmVyc2lvbiB9O1xuXG4gIC8vIHZlcnNpb24gc3VwcG9ydCBjaGVjayBjYW4gdGhyb3cgYSBUeXBlRXJyb3IgaWYga2liYW5hVmVyc2lvbiBpcyBpbnZhbGlkXG4gIHRyeSB7XG4gICAgcmV0dXJuRGF0YS5pc0tpYmFuYVN1cHBvcnRlZCA9IHNhdGlzZmllcyhraWJhbmFWZXJzaW9uLCBrYm5WZXJzaW9uUmFuZ2VzW21hcnZlbFZlcnNpb25dKTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIHJldHVybkRhdGEuaXNLaWJhbmFTdXBwb3J0ZWQgPSBmYWxzZTtcbiAgfVxuXG4gIHJldHVybiByZXR1cm5EYXRhO1xuXG59XG5cbmV4cG9ydCBkZWZhdWx0IGVuc3VyZVZlcnNpb25zO1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/Users/Theo/Desktop/Nebula/elasticsearch/installedPlugins/marvel/server/lib/ensure_versions.js"
      ],
      "names": [],
      "mappings": ";;;;;;;;;;;;;;sBAMc,QAAQ;;;;sBACI,QAAQ;;2BAClB,oBAAoB;;;;AAEpC,IAAM,gBAAgB,GAAG;AACvB,SAAO,EAAE,QAAQ;AACjB,SAAO,EAAE,QAAQ;AACjB,SAAO,EAAE,QAAQ;AACjB,SAAO,EAAE,QAAQ;AACjB,SAAO,EAAE,QAAQ;AACjB,SAAO,EAAE,QAAQ;AACjB,SAAO,EAAE,QAAQ;AACjB,SAAO,EAAE,QAAQ;CAClB,CAAC;;AAEF,SAAS,kBAAkB,CAAC,MAAM,EAAE;AAClC,MAAI,MAAM,EAAE;;AAEV,QAAM,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;AAC9C,QAAI,OAAO,EAAE;;AAEX,aAAO,oBAAE,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;KAC7B;GACF;;AAED,SAAO,EAAE,CAAC;CACX;;AAED,SAAS,cAAc,CAAC,MAAM,EAAE;;AAE9B,MAAM,aAAa,GAAG,kBAAkB,CAAC,oBAAE,GAAG,CAAC,MAAM,EAAE,mBAAmB,CAAC,CAAC,CAAC;AAC7E,MAAM,aAAa,GAAG,kBAAkB,CAAC,yBAAI,OAAO,CAAC,CAAC;AACtD,MAAM,UAAU,GAAG,EAAE,aAAa,EAAb,aAAa,EAAE,aAAa,EAAb,aAAa,EAAE,CAAC;;;AAGpD,MAAI;AACF,cAAU,CAAC,iBAAiB,GAAG,uBAAU,aAAa,EAAE,gBAAgB,CAAC,aAAa,CAAC,CAAC,CAAC;GAC1F,CAAC,OAAO,CAAC,EAAE;AACV,cAAU,CAAC,iBAAiB,GAAG,KAAK,CAAC;GACtC;;AAED,SAAO,UAAU,CAAC;CAEnB;;qBAEc,cAAc",
      "file": "/Users/Theo/Desktop/Nebula/elasticsearch/installedPlugins/marvel/server/lib/ensure_versions.js",
      "sourcesContent": [
        "/*\n * Ensure version compatibility with Kibana\n * Marvel 2.2.0 should work with Kibana > v4.4.0\n * https://www.elastic.co/guide/en/marvel/current/installing-marvel.html\n * Semver tester: http://jubianchi.github.io/semver-check/\n */\nimport _ from 'lodash';\nimport { satisfies } from 'semver';\nimport pkg from '../../package.json';\n\nconst kbnVersionRanges = {\n  '2.2.0': '~4.4.0',\n  '2.2.1': '~4.4.0',\n  '2.2.2': '~4.4.0',\n  '2.3.0': '~4.5.0',\n  '2.3.1': '~4.5.0',\n  '2.3.2': '~4.5.0',\n  '2.3.3': '~4.5.0',\n  '2.3.4': '~4.5.0'\n};\n\nfunction cleanVersionString(string) {\n  if (string) {\n    // get just the number.number.number portion (filter out '-snapshot')\n    const matches = string.match(/^\\d+\\.\\d+.\\d+/);\n    if (matches) {\n      // escape() because the string could be rendered in UI\n      return _.escape(matches[0]);\n    }\n  }\n\n  return '';\n}\n\nfunction ensureVersions(plugin) {\n\n  const kibanaVersion = cleanVersionString(_.get(plugin, 'kbnServer.version'));\n  const marvelVersion = cleanVersionString(pkg.version);\n  const returnData = { kibanaVersion, marvelVersion };\n\n  // version support check can throw a TypeError if kibanaVersion is invalid\n  try {\n    returnData.isKibanaSupported = satisfies(kibanaVersion, kbnVersionRanges[marvelVersion]);\n  } catch (e) {\n    returnData.isKibanaSupported = false;\n  }\n\n  return returnData;\n\n}\n\nexport default ensureVersions;\n"
      ]
    },
    "mtime": 1467743278000
  },
  "{\"filename\":\"/Users/Theo/Desktop/Nebula/elasticsearch/installedPlugins/sense/index.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [
          {
            "source": "./server/proxy_config_collection",
            "imported": [
              "ProxyConfigCollection"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "ProxyConfigCollection",
                "local": "ProxyConfigCollection"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": [
        "extends"
      ]
    },
    "ignored": false,
    "code": "'use strict';\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _serverProxy_config_collection = require('./server/proxy_config_collection');\n\nmodule.exports = function (kibana) {\n  var _require = require('path');\n\n  var resolve = _require.resolve;\n  var join = _require.join;\n  var sep = _require.sep;\n\n  var Joi = require('joi');\n  var Boom = require('boom');\n  var modules = resolve(__dirname, 'public/webpackShims/');\n  var src = resolve(__dirname, 'public/src/');\n\n  var _require2 = require('fs');\n\n  var existsSync = _require2.existsSync;\n\n  var _require3 = require('lodash');\n\n  var startsWith = _require3.startsWith;\n  var endsWith = _require3.endsWith;\n\n  var apps = [{\n    title: 'Sense',\n    description: 'JSON aware developer\\'s interface to ElasticSearch',\n    icon: 'plugins/sense/bonsai.png',\n    main: 'plugins/sense/sense',\n    autoload: kibana.autoload.styles,\n    injectVars: function injectVars(server, options) {\n      return options;\n    }\n  }];\n\n  if (existsSync(resolve(__dirname, 'public/tests'))) {\n    apps.push({\n      title: 'Sense Tests',\n      id: 'sense-tests',\n      main: 'plugins/sense/tests',\n      hidden: true\n      //listed: false // uncomment after https://github.com/elastic/kibana/pull/4755\n    });\n  }\n\n  return new kibana.Plugin({\n    id: 'sense',\n\n    config: function config(Joi) {\n      return Joi.object({\n        enabled: Joi.boolean()['default'](true),\n        defaultServerUrl: Joi.string()['default']('http://localhost:9200'),\n        proxyFilter: Joi.array().items(Joi.string()).single()['default'](['.*']),\n        ssl: Joi.object({\n          verify: Joi.boolean()\n        })['default'](),\n        proxyConfig: Joi.array().items(Joi.object().keys({\n          match: Joi.object().keys({\n            protocol: Joi.string()['default']('*'),\n            host: Joi.string()['default']('*'),\n            port: Joi.string()['default']('*'),\n            path: Joi.string()['default']('*')\n          }),\n\n          timeout: Joi.number(),\n          ssl: Joi.object().keys({\n            verify: Joi.boolean(),\n            ca: Joi.array().single().items(Joi.string()),\n            cert: Joi.string(),\n            key: Joi.string()\n          })['default']()\n        }))['default']([{\n          match: {\n            protocol: '*',\n            host: '*',\n            port: '*',\n            path: '*'\n          },\n\n          timeout: 180000,\n          ssl: {\n            verify: true\n          }\n        }])\n      })['default']();\n    },\n\n    init: function init(server, options) {\n      var filters = options.proxyFilter.map(function (str) {\n        return new RegExp(str);\n      });\n\n      if (options.ssl && options.ssl.verify) {\n        throw new Error('sense.ssl.version is no longer supported.');\n      }\n\n      var proxyConfigCollection = new _serverProxy_config_collection.ProxyConfigCollection(options.proxyConfig);\n      var proxyRouteConfig = {\n        validate: {\n          query: Joi.object().keys({\n            uri: Joi.string().uri({\n              allowRelative: false,\n              shema: ['http:', 'https:']\n            })\n          }).unknown(true)\n        },\n\n        pre: [function filterUri(req, reply) {\n          var uri = req.query.uri;\n\n          if (!filters.some(function (re) {\n            return re.test(uri);\n          })) {\n            var err = Boom.forbidden();\n            err.output.payload = \"Error connecting to '\" + uri + \"':\\n\\nUnable to send requests to that url.\";\n            err.output.headers['content-type'] = 'text/plain';\n            reply(err);\n          } else {\n            reply();\n          }\n        }],\n\n        handler: function handler(req, reply) {\n          var uri = req.query.uri;\n\n          reply.proxy(_extends({\n            uri: uri,\n            xforward: true,\n            passThrough: true,\n            onResponse: function onResponse(err, res, request, reply, settings, ttl) {\n              if (err != null) {\n                reply(\"Error connecting to '\" + request.query.uri + \"':\\n\\n\" + err.message).type(\"text/plain\").statusCode = 502;\n              } else {\n                reply(null, res);\n              }\n            }\n\n          }, proxyConfigCollection.configForUri(uri)));\n        }\n      };\n\n      server.route({\n        path: '/api/sense/proxy',\n        method: '*',\n        config: _extends({}, proxyRouteConfig, {\n\n          payload: {\n            output: 'stream',\n            parse: false\n          }\n        })\n      });\n\n      server.route({\n        path: '/api/sense/proxy',\n        method: 'GET',\n        config: _extends({}, proxyRouteConfig)\n      });\n\n      server.route({\n        path: '/api/sense/api_server',\n        method: ['GET', 'POST'],\n        handler: function handler(req, reply) {\n          var server = require('./api_server/server');\n          var _req$query = req.query;\n          var sense_version = _req$query.sense_version;\n          var apis = _req$query.apis;\n\n          if (!apis) {\n            reply(Boom.badRequest('\"apis\" is a required param.'));\n            return;\n          }\n\n          return server.resolveApi(sense_version, apis.split(\",\"), reply);\n        }\n      });\n\n      var testApp = kibana.uiExports.apps.hidden.byId['sense-tests'];\n      if (testApp) {\n        server.route({\n          path: '/app/sense-tests',\n          method: 'GET',\n          handler: function handler(req, reply) {\n            return reply.renderApp(testApp);\n          }\n        });\n      }\n    },\n\n    uiExports: {\n      apps: apps,\n\n      noParse: [join(modules, 'ace' + sep), join(modules, 'moment_src/moment' + sep), join(src, 'sense_editor/mode/worker.js')]\n    }\n  });\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9UaGVvL0Rlc2t0b3AvTmVidWxhL2VsYXN0aWNzZWFyY2gvaW5zdGFsbGVkUGx1Z2lucy9zZW5zZS9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OzZDQUFzQyxrQ0FBa0M7O0FBRXhFLE1BQU0sQ0FBQyxPQUFPLEdBQUcsVUFBVSxNQUFNLEVBQUU7aUJBQ0osT0FBTyxDQUFDLE1BQU0sQ0FBQzs7TUFBdEMsT0FBTyxZQUFQLE9BQU87TUFBRSxJQUFJLFlBQUosSUFBSTtNQUFFLEdBQUcsWUFBSCxHQUFHOztBQUN4QixNQUFJLEdBQUcsR0FBRyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUM7QUFDekIsTUFBSSxJQUFJLEdBQUcsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0FBQzNCLE1BQUksT0FBTyxHQUFHLE9BQU8sQ0FBQyxTQUFTLEVBQUUsc0JBQXNCLENBQUMsQ0FBQztBQUN6RCxNQUFJLEdBQUcsR0FBRyxPQUFPLENBQUMsU0FBUyxFQUFFLGFBQWEsQ0FBQyxDQUFDOztrQkFDdkIsT0FBTyxDQUFDLElBQUksQ0FBQzs7TUFBNUIsVUFBVSxhQUFWLFVBQVU7O2tCQUNpQixPQUFPLENBQUMsUUFBUSxDQUFDOztNQUExQyxVQUFVLGFBQVYsVUFBVTtNQUFFLFFBQVEsYUFBUixRQUFROztBQUU1QixNQUFNLElBQUksR0FBRyxDQUNYO0FBQ0UsU0FBSyxFQUFFLE9BQU87QUFDZCxlQUFXLEVBQUUsb0RBQW9EO0FBQ2pFLFFBQUksRUFBRSwwQkFBMEI7QUFDaEMsUUFBSSxFQUFFLHFCQUFxQjtBQUMzQixZQUFRLEVBQUUsTUFBTSxDQUFDLFFBQVEsQ0FBQyxNQUFNO0FBQ2hDLGNBQVUsRUFBRSxvQkFBVSxNQUFNLEVBQUUsT0FBTyxFQUFFO0FBQ3JDLGFBQU8sT0FBTyxDQUFDO0tBQ2hCO0dBQ0YsQ0FDRixDQUFDOztBQUVGLE1BQUksVUFBVSxDQUFDLE9BQU8sQ0FBQyxTQUFTLEVBQUUsY0FBYyxDQUFDLENBQUMsRUFBRTtB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QUFKLElBQUk7O0FBQ3hCLGNBQUksQ0FBQyxJQUFJLEVBQUU7QUFDVCxpQkFBSyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsNkJBQTZCLENBQUMsQ0FBQyxDQUFDO0FBQ3RELG1CQUFPO1dBQ1I7O0FBRUQsaUJBQU8sTUFBTSxDQUFDLFVBQVUsQ0FBQyxhQUFhLEVBQUUsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsRUFBRSxLQUFLLENBQUMsQ0FBQztTQUNqRTtPQUNGLENBQUMsQ0FBQzs7QUFFSCxVQUFNLE9BQU8sR0FBRyxNQUFNLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDO0FBQ2pFLFVBQUksT0FBTyxFQUFFO0FBQ1gsY0FBTSxDQUFDLEtBQUssQ0FBQztBQUNYLGNBQUksRUFBRSxrQkFBa0I7QUFDeEIsZ0JBQU0sRUFBRSxLQUFLO0FBQ2IsaUJBQU8sRUFBRSxpQkFBVSxHQUFHLEVBQUUsS0FBSyxFQUFFO0FBQzdCLG1CQUFPLEtBQUssQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLENBQUM7V0FDakM7U0FDRixDQUFDLENBQUM7T0FDSjtLQUNGOztBQUVELGFBQVMsRUFBRTtBQUNULFVBQUksRUFBRSxJQUFJOztBQUVWLGFBQU8sRUFBRSxDQUNQLElBQUksQ0FBQyxPQUFPLEVBQUUsS0FBSyxHQUFHLEdBQUcsQ0FBQyxFQUMxQixJQUFJLENBQUMsT0FBTyxFQUFFLG1CQUFtQixHQUFHLEdBQUcsQ0FBQyxFQUN4QyxJQUFJLENBQUMsR0FBRyxFQUFFLDZCQUE2QixDQUFDLENBQ3pDO0tBQ0Y7R0FDRixDQUFDLENBQUE7Q0FDSCxDQUFDIiwiZmlsZSI6Ii9Vc2Vycy9UaGVvL0Rlc2t0b3AvTmVidWxhL2VsYXN0aWNzZWFyY2gvaW5zdGFsbGVkUGx1Z2lucy9zZW5zZS9pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFByb3h5Q29uZmlnQ29sbGVjdGlvbiB9IGZyb20gJy4vc2VydmVyL3Byb3h5X2NvbmZpZ19jb2xsZWN0aW9uJztcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoa2liYW5hKSB7XG4gIGxldCB7IHJlc29sdmUsIGpvaW4sIHNlcCB9ID0gcmVxdWlyZSgncGF0aCcpO1xuICBsZXQgSm9pID0gcmVxdWlyZSgnam9pJyk7XG4gIGxldCBCb29tID0gcmVxdWlyZSgnYm9vbScpO1xuICBsZXQgbW9kdWxlcyA9IHJlc29sdmUoX19kaXJuYW1lLCAncHVibGljL3dlYnBhY2tTaGltcy8nKTtcbiAgbGV0IHNyYyA9IHJlc29sdmUoX19kaXJuYW1lLCAncHVibGljL3NyYy8nKTtcbiAgbGV0IHsgZXhpc3RzU3luYyB9ID0gcmVxdWlyZSgnZnMnKTtcbiAgY29uc3QgeyBzdGFydHNXaXRoLCBlbmRzV2l0aCB9ID0gcmVxdWlyZSgnbG9kYXNoJyk7XG5cbiAgY29uc3QgYXBwcyA9IFtcbiAgICB7XG4gICAgICB0aXRsZTogJ1NlbnNlJyxcbiAgICAgIGRlc2NyaXB0aW9uOiAnSlNPTiBhd2FyZSBkZXZlbG9wZXJcXCdzIGludGVyZmFjZSB0byBFbGFzdGljU2VhcmNoJyxcbiAgICAgIGljb246ICdwbHVnaW5zL3NlbnNlL2JvbnNhaS5wbmcnLFxuICAgICAgbWFpbjogJ3BsdWdpbnMvc2Vuc2Uvc2Vuc2UnLFxuICAgICAgYXV0b2xvYWQ6IGtpYmFuYS5hdXRvbG9hZC5zdHlsZXMsXG4gICAgICBpbmplY3RWYXJzOiBmdW5jdGlvbiAoc2VydmVyLCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiBvcHRpb25zO1xuICAgICAgfVxuICAgIH1cbiAgXTtcblxuICBpZiAoZXhpc3RzU3luYyhyZXNvbHZlKF9fZGlybmFtZSwgJ3B1YmxpYy90ZXN0cycpKSkge1xuICAgIGFwcHMucHVzaCh7XG4gICAgICB0aXRsZTogJ1NlbnNlIFRlc3RzJyxcbiAgICAgIGlkOiAnc2Vuc2UtdGVzdHMnLFxuICAgICAgbWFpbjogJ3BsdWdpbnMvc2Vuc2UvdGVzdHMnLFxuICAgICAgaGlkZGVuOiB0cnVlXG4gICAgICAvL2xpc3RlZDogZmFsc2UgLy8gdW5jb21tZW50IGFmdGVyIGh0dHBzOi8vZ2l0aHViLmNvbS9lbGFzdGljL2tpYmFuYS9wdWxsLzQ3NTVcbiAgICB9KTtcbiAgfVxuXG4gIHJldHVybiBuZXcga2liYW5hLlBsdWdpbih7XG4gICAgaWQ6ICdzZW5zZScsXG5cbiAgICBjb25maWc6IGZ1bmN0aW9uIChKb2kpIHtcbiAgICAgIHJldHVybiBKb2kub2JqZWN0KHtcbiAgICAgICAgZW5hYmxlZDogSm9pLmJvb2xlYW4oKS5kZWZhdWx0KHRydWUpLFxuICAgICAgICBkZWZhdWx0U2VydmVyVXJsOiBKb2kuc3RyaW5nKCkuZGVmYXVsdCgnaHR0cDovL2xvY2FsaG9zdDo5MjAwJyksXG4gICAgICAgIHByb3h5RmlsdGVyOiBKb2kuYXJyYXkoKS5pdGVtcyhKb2kuc3RyaW5nKCkpLnNpbmdsZSgpLmRlZmF1bHQoWycuKiddKSxcbiAgICAgICAgc3NsOiBKb2kub2JqZWN0KHtcbiAgICAgICAgICB2ZXJpZnk6IEpvaS5ib29sZWFuKCksXG4gICAgICAgIH0pLmRlZmF1bHQoKSxcbiAgICAgICAgcHJveHlDb25maWc6IEpvaS5hcnJheSgpLml0ZW1zKFxuICAgICAgICAgIEpvaS5vYmplY3QoKS5rZXlzKHtcbiAgICAgICAgICAgIG1hdGNoOiBKb2kub2JqZWN0KCkua2V5cyh7XG4gICAgICAgICAgICAgIHByb3RvY29sOiBKb2kuc3RyaW5nKCkuZGVmYXVsdCgnKicpLFxuICAgICAgICAgICAgICBob3N0OiBKb2kuc3RyaW5nKCkuZGVmYXVsdCgnKicpLFxuICAgICAgICAgICAgICBwb3J0OiBKb2kuc3RyaW5nKCkuZGVmYXVsdCgnKicpLFxuICAgICAgICAgICAgICBwYXRoOiBKb2kuc3RyaW5nKCkuZGVmYXVsdCgnKicpXG4gICAgICAgICAgICB9KSxcblxuICAgICAgICAgICAgdGltZW91dDogSm9pLm51bWJlcigpLFxuICAgICAgICAgICAgc3NsOiBKb2kub2JqZWN0KCkua2V5cyh7XG4gICAgICAgICAgICAgIHZlcmlmeTogSm9pLmJvb2xlYW4oKSxcbiAgICAgICAgICAgICAgY2E6IEpvaS5hcnJheSgpLnNpbmdsZSgpLml0ZW1zKEpvaS5zdHJpbmcoKSksXG4gICAgICAgICAgICAgIGNlcnQ6IEpvaS5zdHJpbmcoKSxcbiAgICAgICAgICAgICAga2V5OiBKb2kuc3RyaW5nKClcbiAgICAgICAgICAgIH0pLmRlZmF1bHQoKVxuICAgICAgICAgIH0pXG4gICAgICAgICkuZGVmYXVsdChbXG4gICAgICAgICAge1xuICAgICAgICAgICAgbWF0Y2g6IHtcbiAgICAgICAgICAgICAgcHJvdG9jb2w6ICcqJyxcbiAgICAgICAgICAgICAgaG9zdDogJyonLFxuICAgICAgICAgICAgICBwb3J0OiAnKicsXG4gICAgICAgICAgICAgIHBhdGg6ICcqJ1xuICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAgdGltZW91dDogMTgwMDAwLFxuICAgICAgICAgICAgc3NsOiB7XG4gICAgICAgICAgICAgIHZlcmlmeTogdHJ1ZVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgXSlcbiAgICAgIH0pLmRlZmF1bHQoKTtcbiAgICB9LFxuXG4gICAgaW5pdDogZnVuY3Rpb24gKHNlcnZlciwgb3B0aW9ucykge1xuICAgICAgY29uc3QgZmlsdGVycyA9IG9wdGlvbnMucHJveHlGaWx0ZXIubWFwKHN0ciA9PiBuZXcgUmVnRXhwKHN0cikpO1xuXG4gICAgICBpZiAob3B0aW9ucy5zc2wgJiYgb3B0aW9ucy5zc2wudmVyaWZ5KSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignc2Vuc2Uuc3NsLnZlcnNpb24gaXMgbm8gbG9uZ2VyIHN1cHBvcnRlZC4nKTtcbiAgICAgIH1cblxuICAgICAgY29uc3QgcHJveHlDb25maWdDb2xsZWN0aW9uID0gbmV3IFByb3h5Q29uZmlnQ29sbGVjdGlvbihvcHRpb25zLnByb3h5Q29uZmlnKTtcbiAgICAgIGNvbnN0IHByb3h5Um91dGVDb25maWcgPSB7XG4gICAgICAgIHZhbGlkYXRlOiB7XG4gICAgICAgICAgcXVlcnk6IEpvaS5vYmplY3QoKS5rZXlzKHtcbiAgICAgICAgICAgIHVyaTogSm9pLnN0cmluZygpLnVyaSh7XG4gICAgICAgICAgICAgIGFsbG93UmVsYXRpdmU6IGZhbHNlLFxuICAgICAgICAgICAgICBzaGVtYTogWydodHRwOicsICdodHRwczonXSxcbiAgICAgICAgICAgIH0pLFxuICAgICAgICAgIH0pLnVua25vd24odHJ1ZSksXG4gICAgICAgIH0sXG5cbiAgICAgICAgcHJlOiBbXG4gICAgICAgICAgZnVuY3Rpb24gZmlsdGVyVXJpKHJlcSwgcmVwbHkpIHtcbiAgICAgICAgICAgIGNvbnN0IHsgdXJpIH0gPSByZXEucXVlcnk7XG5cbiAgICAgICAgICAgIGlmICghZmlsdGVycy5zb21lKHJlID0+IHJlLnRlc3QodXJpKSkpIHtcbiAgICAgICAgICAgICAgY29uc3QgZXJyID0gQm9vbS5mb3JiaWRkZW4oKTtcbiAgICAgICAgICAgICAgZXJyLm91dHB1dC5wYXlsb2FkID0gXCJFcnJvciBjb25uZWN0aW5nIHRvICdcIiArIHVyaSArIFwiJzpcXG5cXG5VbmFibGUgdG8gc2VuZCByZXF1ZXN0cyB0byB0aGF0IHVybC5cIjtcbiAgICAgICAgICAgICAgZXJyLm91dHB1dC5oZWFkZXJzWydjb250ZW50LXR5cGUnXSA9ICd0ZXh0L3BsYWluJztcbiAgICAgICAgICAgICAgcmVwbHkoZXJyKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIHJlcGx5KCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICBdLFxuXG4gICAgICAgIGhhbmRsZXIocmVxLCByZXBseSkge1xuICAgICAgICAgIGNvbnN0IHsgdXJpIH0gPSByZXEucXVlcnk7XG5cbiAgICAgICAgICByZXBseS5wcm94eSh7XG4gICAgICAgICAgICB1cmksXG4gICAgICAgICAgICB4Zm9yd2FyZDogdHJ1ZSxcbiAgICAgICAgICAgIHBhc3NUaHJvdWdoOiB0cnVlLFxuICAgICAgICAgICAgb25SZXNwb25zZShlcnIsIHJlcywgcmVxdWVzdCwgcmVwbHksIHNldHRpbmdzLCB0dGwpIHtcbiAgICAgICAgICAgICAgaWYgKGVyciAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgcmVwbHkoXCJFcnJvciBjb25uZWN0aW5nIHRvICdcIiArIHJlcXVlc3QucXVlcnkudXJpICsgXCInOlxcblxcblwiICsgZXJyLm1lc3NhZ2UpLnR5cGUoXCJ0ZXh0L3BsYWluXCIpLnN0YXR1c0NvZGUgPSA1MDI7XG4gICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgcmVwbHkobnVsbCwgcmVzKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAgLi4ucHJveHlDb25maWdDb2xsZWN0aW9uLmNvbmZpZ0ZvclVyaSh1cmkpXG4gICAgICAgICAgfSlcbiAgICAgICAgfVxuICAgICAgfTtcblxuICAgICAgc2VydmVyLnJvdXRlKHtcbiAgICAgICAgcGF0aDogJy9hcGkvc2Vuc2UvcHJveHknLFxuICAgICAgICBtZXRob2Q6ICcqJyxcbiAgICAgICAgY29uZmlnOiB7XG4gICAgICAgICAgLi4ucHJveHlSb3V0ZUNvbmZpZyxcblxuICAgICAgICAgIHBheWxvYWQ6IHtcbiAgICAgICAgICAgIG91dHB1dDogJ3N0cmVhbScsXG4gICAgICAgICAgICBwYXJzZTogZmFsc2VcbiAgICAgICAgICB9LFxuICAgICAgICB9XG4gICAgICB9KTtcblxuICAgICAgc2VydmVyLnJvdXRlKHtcbiAgICAgICAgcGF0aDogJy9hcGkvc2Vuc2UvcHJveHknLFxuICAgICAgICBtZXRob2Q6ICdHRVQnLFxuICAgICAgICBjb25maWc6IHtcbiAgICAgICAgICAuLi5wcm94eVJvdXRlQ29uZmlnXG4gICAgICAgIH1cbiAgICAgIH0pXG5cbiAgICAgIHNlcnZlci5yb3V0ZSh7XG4gICAgICAgIHBhdGg6ICcvYXBpL3NlbnNlL2FwaV9zZXJ2ZXInLFxuICAgICAgICBtZXRob2Q6IFsnR0VUJywgJ1BPU1QnXSxcbiAgICAgICAgaGFuZGxlcjogZnVuY3Rpb24gKHJlcSwgcmVwbHkpIHtcbiAgICAgICAgICBsZXQgc2VydmVyID0gcmVxdWlyZSgnLi9hcGlfc2VydmVyL3NlcnZlcicpO1xuICAgICAgICAgIGxldCB7c2Vuc2VfdmVyc2lvbiwgYXBpc30gPSByZXEucXVlcnk7XG4gICAgICAgICAgaWYgKCFhcGlzKSB7XG4gICAgICAgICAgICByZXBseShCb29tLmJhZFJlcXVlc3QoJ1wiYXBpc1wiIGlzIGEgcmVxdWlyZWQgcGFyYW0uJykpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHJldHVybiBzZXJ2ZXIucmVzb2x2ZUFwaShzZW5zZV92ZXJzaW9uLCBhcGlzLnNwbGl0KFwiLFwiKSwgcmVwbHkpO1xuICAgICAgICB9XG4gICAgICB9KTtcblxuICAgICAgY29uc3QgdGVzdEFwcCA9IGtpYmFuYS51aUV4cG9ydHMuYXBwcy5oaWRkZW4uYnlJZFsnc2Vuc2UtdGVzdHMnXTtcbiAgICAgIGlmICh0ZXN0QXBwKSB7XG4gICAgICAgIHNlcnZlci5yb3V0ZSh7XG4gICAgICAgICAgcGF0aDogJy9hcHAvc2Vuc2UtdGVzdHMnLFxuICAgICAgICAgIG1ldGhvZDogJ0dFVCcsXG4gICAgICAgICAgaGFuZGxlcjogZnVuY3Rpb24gKHJlcSwgcmVwbHkpIHtcbiAgICAgICAgICAgIHJldHVybiByZXBseS5yZW5kZXJBcHAodGVzdEFwcCk7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9LFxuXG4gICAgdWlFeHBvcnRzOiB7XG4gICAgICBhcHBzOiBhcHBzLFxuXG4gICAgICBub1BhcnNlOiBbXG4gICAgICAgIGpvaW4obW9kdWxlcywgJ2FjZScgKyBzZXApLFxuICAgICAgICBqb2luKG1vZHVsZXMsICdtb21lbnRfc3JjL21vbWVudCcgKyBzZXApLFxuICAgICAgICBqb2luKHNyYywgJ3NlbnNlX2VkaXRvci9tb2RlL3dvcmtlci5qcycpXG4gICAgICBdXG4gICAgfVxuICB9KVxufTtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/Users/Theo/Desktop/Nebula/elasticsearch/installedPlugins/sense/index.js"
      ],
      "names": [],
      "mappings": "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",
      "file": "/Users/Theo/Desktop/Nebula/elasticsearch/installedPlugins/sense/index.js",
      "sourcesContent": [
        "import { ProxyConfigCollection } from './server/proxy_config_collection';\n\nmodule.exports = function (kibana) {\n  let { resolve, join, sep } = require('path');\n  let Joi = require('joi');\n  let Boom = require('boom');\n  let modules = resolve(__dirname, 'public/webpackShims/');\n  let src = resolve(__dirname, 'public/src/');\n  let { existsSync } = require('fs');\n  const { startsWith, endsWith } = require('lodash');\n\n  const apps = [\n    {\n      title: 'Sense',\n      description: 'JSON aware developer\\'s interface to ElasticSearch',\n      icon: 'plugins/sense/bonsai.png',\n      main: 'plugins/sense/sense',\n      autoload: kibana.autoload.styles,\n      injectVars: function (server, options) {\n        return options;\n      }\n    }\n  ];\n\n  if (existsSync(resolve(__dirname, 'public/tests'))) {\n    apps.push({\n      title: 'Sense Tests',\n      id: 'sense-tests',\n      main: 'plugins/sense/tests',\n      hidden: true\n      //listed: false // uncomment after https://github.com/elastic/kibana/pull/4755\n    });\n  }\n\n  return new kibana.Plugin({\n    id: 'sense',\n\n    config: function (Joi) {\n      return Joi.object({\n        enabled: Joi.boolean().default(true),\n        defaultServerUrl: Joi.string().default('http://localhost:9200'),\n        proxyFilter: Joi.array().items(Joi.string()).single().default(['.*']),\n        ssl: Joi.object({\n          verify: Joi.boolean(),\n        }).default(),\n        proxyConfig: Joi.array().items(\n          Joi.object().keys({\n            match: Joi.object().keys({\n              protocol: Joi.string().default('*'),\n              host: Joi.string().default('*'),\n              port: Joi.string().default('*'),\n              path: Joi.string().default('*')\n            }),\n\n            timeout: Joi.number(),\n            ssl: Joi.object().keys({\n              verify: Joi.boolean(),\n              ca: Joi.array().single().items(Joi.string()),\n              cert: Joi.string(),\n              key: Joi.string()\n            }).default()\n          })\n        ).default([\n          {\n            match: {\n              protocol: '*',\n              host: '*',\n              port: '*',\n              path: '*'\n            },\n\n            timeout: 180000,\n            ssl: {\n              verify: true\n            }\n          }\n        ])\n      }).default();\n    },\n\n    init: function (server, options) {\n      const filters = options.proxyFilter.map(str => new RegExp(str));\n\n      if (options.ssl && options.ssl.verify) {\n        throw new Error('sense.ssl.version is no longer supported.');\n      }\n\n      const proxyConfigCollection = new ProxyConfigCollection(options.proxyConfig);\n      const proxyRouteConfig = {\n        validate: {\n          query: Joi.object().keys({\n            uri: Joi.string().uri({\n              allowRelative: false,\n              shema: ['http:', 'https:'],\n            }),\n          }).unknown(true),\n        },\n\n        pre: [\n          function filterUri(req, reply) {\n            const { uri } = req.query;\n\n            if (!filters.some(re => re.test(uri))) {\n              const err = Boom.forbidden();\n              err.output.payload = \"Error connecting to '\" + uri + \"':\\n\\nUnable to send requests to that url.\";\n              err.output.headers['content-type'] = 'text/plain';\n              reply(err);\n            } else {\n              reply();\n            }\n          }\n        ],\n\n        handler(req, reply) {\n          const { uri } = req.query;\n\n          reply.proxy({\n            uri,\n            xforward: true,\n            passThrough: true,\n            onResponse(err, res, request, reply, settings, ttl) {\n              if (err != null) {\n                reply(\"Error connecting to '\" + request.query.uri + \"':\\n\\n\" + err.message).type(\"text/plain\").statusCode = 502;\n              } else {\n                reply(null, res);\n              }\n            },\n\n            ...proxyConfigCollection.configForUri(uri)\n          })\n        }\n      };\n\n      server.route({\n        path: '/api/sense/proxy',\n        method: '*',\n        config: {\n          ...proxyRouteConfig,\n\n          payload: {\n            output: 'stream',\n            parse: false\n          },\n        }\n      });\n\n      server.route({\n        path: '/api/sense/proxy',\n        method: 'GET',\n        config: {\n          ...proxyRouteConfig\n        }\n      })\n\n      server.route({\n        path: '/api/sense/api_server',\n        method: ['GET', 'POST'],\n        handler: function (req, reply) {\n          let server = require('./api_server/server');\n          let {sense_version, apis} = req.query;\n          if (!apis) {\n            reply(Boom.badRequest('\"apis\" is a required param.'));\n            return;\n          }\n\n          return server.resolveApi(sense_version, apis.split(\",\"), reply);\n        }\n      });\n\n      const testApp = kibana.uiExports.apps.hidden.byId['sense-tests'];\n      if (testApp) {\n        server.route({\n          path: '/app/sense-tests',\n          method: 'GET',\n          handler: function (req, reply) {\n            return reply.renderApp(testApp);\n          }\n        });\n      }\n    },\n\n    uiExports: {\n      apps: apps,\n\n      noParse: [\n        join(modules, 'ace' + sep),\n        join(modules, 'moment_src/moment' + sep),\n        join(src, 'sense_editor/mode/worker.js')\n      ]\n    }\n  })\n};\n"
      ]
    },
    "mtime": 1457723837000
  },
  "{\"filename\":\"/Users/Theo/Desktop/Nebula/elasticsearch/installedPlugins/sense/server/proxy_config_collection.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [
          {
            "source": "lodash",
            "imported": [
              "defaultsDeep"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "defaultsDeep",
                "local": "defaultsDeep"
              }
            ]
          },
          {
            "source": "./proxy_config",
            "imported": [
              "ProxyConfig"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "ProxyConfig",
                "local": "ProxyConfig"
              }
            ]
          },
          {
            "source": "url",
            "imported": [
              "parse"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "parse",
                "local": "parseUrl"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "ProxyConfigCollection"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "ProxyConfigCollection",
              "exported": "ProxyConfigCollection"
            }
          ]
        }
      },
      "usedHelpers": [
        "create-class",
        "class-call-check",
        "to-consumable-array"
      ]
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i]; return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _lodash = require('lodash');\n\nvar _proxy_config = require('./proxy_config');\n\nvar _url = require('url');\n\nvar ProxyConfigCollection = (function () {\n  function ProxyConfigCollection() {\n    var configs = arguments.length <= 0 || arguments[0] === undefined ? [] : arguments[0];\n\n    _classCallCheck(this, ProxyConfigCollection);\n\n    this.configs = configs.map(function (settings) {\n      return new _proxy_config.ProxyConfig(settings);\n    });\n  }\n\n  _createClass(ProxyConfigCollection, [{\n    key: 'configForUri',\n    value: function configForUri(uri) {\n      var parsedUri = (0, _url.parse)(uri);\n      var settings = this.configs.map(function (config) {\n        return config.getForParsedUri(parsedUri);\n      });\n      return _lodash.defaultsDeep.apply(undefined, [{}].concat(_toConsumableArray(settings)));\n    }\n  }]);\n\n  return ProxyConfigCollection;\n})();\n\nexports.ProxyConfigCollection = ProxyConfigCollection;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9UaGVvL0Rlc2t0b3AvTmVidWxhL2VsYXN0aWNzZWFyY2gvaW5zdGFsbGVkUGx1Z2lucy9zZW5zZS9zZXJ2ZXIvcHJveHlfY29uZmlnX2NvbGxlY3Rpb24uanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O3NCQUE2QixRQUFROzs0QkFFVCxnQkFBZ0I7O21CQUNWLEtBQUs7O0lBRzFCLHFCQUFxQjtBQUNyQixXQURBLHFCQUFxQixHQUNOO1FBQWQsT0FBTyx5REFBRyxFQUFFOzswQkFEYixxQkFBcUI7O0FBRTlCLFFBQUksQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxVQUFBLFFBQVE7YUFBSSw4QkFBZ0IsUUFBUSxDQUFDO0tBQUEsQ0FBQyxDQUFBO0dBQ2xFOztlQUhVLHFCQUFxQjs7V0FLcEIsc0JBQUMsR0FBRyxFQUFFO0FBQ2hCLFVBQU0sU0FBUyxHQUFHLGdCQUFTLEdBQUcsQ0FBQyxDQUFDO0FBQ2hDLFVBQU0sUUFBUSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLFVBQUEsTUFBTTtlQUFJLE1BQU0sQ0FBQyxlQUFlLENBQUMsU0FBUyxDQUFDO09BQUEsQ0FBQyxDQUFDO0FBQy9FLGFBQU8sdUNBQWEsRUFBRSw0QkFBSyxRQUFRLEdBQUMsQ0FBQztLQUN0Qzs7O1NBVFUscUJBQXFCIiwiZmlsZSI6Ii9Vc2Vycy9UaGVvL0Rlc2t0b3AvTmVidWxhL2VsYXN0aWNzZWFyY2gvaW5zdGFsbGVkUGx1Z2lucy9zZW5zZS9zZXJ2ZXIvcHJveHlfY29uZmlnX2NvbGxlY3Rpb24uanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBkZWZhdWx0c0RlZXAgfSBmcm9tICdsb2Rhc2gnXG5cbmltcG9ydCB7IFByb3h5Q29uZmlnIH0gZnJvbSAnLi9wcm94eV9jb25maWcnXG5pbXBvcnQgeyBwYXJzZSBhcyBwYXJzZVVybCB9IGZyb20gJ3VybCdcblxuXG5leHBvcnQgY2xhc3MgUHJveHlDb25maWdDb2xsZWN0aW9uIHtcbiAgY29uc3RydWN0b3IoY29uZmlncyA9IFtdKSB7XG4gICAgdGhpcy5jb25maWdzID0gY29uZmlncy5tYXAoc2V0dGluZ3MgPT4gbmV3IFByb3h5Q29uZmlnKHNldHRpbmdzKSlcbiAgfVxuXG4gIGNvbmZpZ0ZvclVyaSh1cmkpIHtcbiAgICBjb25zdCBwYXJzZWRVcmkgPSBwYXJzZVVybCh1cmkpO1xuICAgIGNvbnN0IHNldHRpbmdzID0gdGhpcy5jb25maWdzLm1hcChjb25maWcgPT4gY29uZmlnLmdldEZvclBhcnNlZFVyaShwYXJzZWRVcmkpKTtcbiAgICByZXR1cm4gZGVmYXVsdHNEZWVwKHt9LCAuLi5zZXR0aW5ncyk7XG4gIH1cbn1cbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/Users/Theo/Desktop/Nebula/elasticsearch/installedPlugins/sense/server/proxy_config_collection.js"
      ],
      "names": [],
      "mappings": ";;;;;;;;;;;;sBAA6B,QAAQ;;4BAET,gBAAgB;;mBACV,KAAK;;IAG1B,qBAAqB;AACrB,WADA,qBAAqB,GACN;QAAd,OAAO,yDAAG,EAAE;;0BADb,qBAAqB;;AAE9B,QAAI,CAAC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,UAAA,QAAQ;aAAI,8BAAgB,QAAQ,CAAC;KAAA,CAAC,CAAA;GAClE;;eAHU,qBAAqB;;WAKpB,sBAAC,GAAG,EAAE;AAChB,UAAM,SAAS,GAAG,gBAAS,GAAG,CAAC,CAAC;AAChC,UAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UAAA,MAAM;eAAI,MAAM,CAAC,eAAe,CAAC,SAAS,CAAC;OAAA,CAAC,CAAC;AAC/E,aAAO,uCAAa,EAAE,4BAAK,QAAQ,GAAC,CAAC;KACtC;;;SATU,qBAAqB",
      "file": "/Users/Theo/Desktop/Nebula/elasticsearch/installedPlugins/sense/server/proxy_config_collection.js",
      "sourcesContent": [
        "import { defaultsDeep } from 'lodash'\n\nimport { ProxyConfig } from './proxy_config'\nimport { parse as parseUrl } from 'url'\n\n\nexport class ProxyConfigCollection {\n  constructor(configs = []) {\n    this.configs = configs.map(settings => new ProxyConfig(settings))\n  }\n\n  configForUri(uri) {\n    const parsedUri = parseUrl(uri);\n    const settings = this.configs.map(config => config.getForParsedUri(parsedUri));\n    return defaultsDeep({}, ...settings);\n  }\n}\n"
      ]
    },
    "mtime": 1457678751000
  },
  "{\"filename\":\"/Users/Theo/Desktop/Nebula/elasticsearch/installedPlugins/sense/server/proxy_config.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [
          {
            "source": "lodash",
            "imported": [
              "memoize",
              "values"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "memoize",
                "local": "memoize"
              },
              {
                "kind": "named",
                "imported": "values",
                "local": "values"
              }
            ]
          },
          {
            "source": "url",
            "imported": [
              "format"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "format",
                "local": "formatUrl"
              }
            ]
          },
          {
            "source": "https",
            "imported": [
              "Agent"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "Agent",
                "local": "HttpsAgent"
              }
            ]
          },
          {
            "source": "fs",
            "imported": [
              "readFileSync"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "readFileSync",
                "local": "readFileSync"
              }
            ]
          },
          {
            "source": "./wildcard_matcher",
            "imported": [
              "WildcardMatcher"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "WildcardMatcher",
                "local": "WildcardMatcher"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "ProxyConfig"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "ProxyConfig",
              "exported": "ProxyConfig"
            }
          ]
        }
      },
      "usedHelpers": [
        "create-class",
        "class-call-check"
      ]
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _lodash = require('lodash');\n\nvar _url = require('url');\n\nvar _https = require('https');\n\nvar _fs = require('fs');\n\nvar _wildcard_matcher = require('./wildcard_matcher');\n\nvar makeHttpsAgent = (0, _lodash.memoize)(function (opts) {\n  return new _https.Agent(opts);\n}, function (opts) {\n  return JSON.stringify(opts);\n});\n\nvar ProxyConfig = (function () {\n  function ProxyConfig(config) {\n    _classCallCheck(this, ProxyConfig);\n\n    config = Object.assign({}, config);\n\n    // -----\n    // read \"match\" info\n    // -----\n    var rawMatches = Object.assign({}, config.match);\n    this.id = (0, _url.format)({\n      protocol: rawMatches.protocol,\n      hostname: rawMatches.host,\n      port: rawMatches.port,\n      pathname: rawMatches.path\n    }) || '*';\n\n    this.matchers = {\n      protocol: new _wildcard_matcher.WildcardMatcher(rawMatches.protocol),\n      host: new _wildcard_matcher.WildcardMatcher(rawMatches.host),\n      port: new _wildcard_matcher.WildcardMatcher(rawMatches.port),\n      path: new _wildcard_matcher.WildcardMatcher(rawMatches.path, '/')\n    };\n\n    // -----\n    // read config vars\n    // -----\n    this.timeout = config.timeout;\n    this.sslAgent = this._makeSslAgent(config);\n  }\n\n  _createClass(ProxyConfig, [{\n    key: '_makeSslAgent',\n    value: function _makeSslAgent(config) {\n      var ssl = config.ssl || {};\n      this.verifySsl = ssl.verify;\n\n      var sslAgentOpts = {\n        ca: ssl.ca && ssl.ca.map(function (ca) {\n          return (0, _fs.readFileSync)(ca);\n        }),\n        cert: ssl.cert && (0, _fs.readFileSync)(ssl.cert),\n        key: ssl.key && (0, _fs.readFileSync)(ssl.key)\n      };\n\n      if ((0, _lodash.values)(sslAgentOpts).filter(Boolean).length) {\n        return new _https.Agent(sslAgentOpts);\n      }\n    }\n  }, {\n    key: 'getForParsedUri',\n    value: function getForParsedUri(_ref) {\n      var protocol = _ref.protocol;\n      var hostname = _ref.hostname;\n      var port = _ref.port;\n      var pathname = _ref.pathname;\n\n      var match = this.matchers.protocol.match(protocol.slice(0, -1));\n      match = match && this.matchers.host.match(hostname);\n      match = match && this.matchers.port.match(port);\n      match = match && this.matchers.path.match(pathname);\n\n      if (!match) return {};\n      return {\n        timeout: this.timeout,\n        rejectUnauthorized: this.sslAgent ? true : this.verifySsl,\n        agent: protocol === 'https:' ? this.sslAgent : undefined\n      };\n    }\n  }]);\n\n  return ProxyConfig;\n})();\n\nexports.ProxyConfig = ProxyConfig;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9UaGVvL0Rlc2t0b3AvTmVidWxhL2VsYXN0aWNzZWFyY2gvaW5zdGFsbGVkUGx1Z2lucy9zZW5zZS9zZXJ2ZXIvcHJveHlfY29uZmlnLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7c0JBQWdDLFFBQVE7O21CQUNKLEtBQUs7O3FCQUNMLE9BQU87O2tCQUNkLElBQUk7O2dDQUVELG9CQUFvQjs7QUFFcEQsSUFBTSxjQUFjLEdBQUcscUJBQ3JCLFVBQUEsSUFBSTtTQUFJLGlCQUFlLElBQUksQ0FBQztDQUFBLEVBQzVCLFVBQUEsSUFBSTtTQUFJLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDO0NBQUEsQ0FDN0IsQ0FBQTs7SUFFWSxXQUFXO0FBQ1gsV0FEQSxXQUFXLENBQ1YsTUFBTSxFQUFFOzBCQURULFdBQVc7O0FBRXBCLFVBQU0sR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLEVBQUUsRUFBRSxNQUFNLENBQUMsQ0FBQzs7Ozs7QUFLbkMsUUFBTSxVQUFVLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQyxFQUFFLEVBQUUsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDO0FBQ25ELFFBQUksQ0FBQyxFQUFFLEdBQUcsaUJBQVU7QUFDbEIsY0FBUSxFQUFFLFVBQVUsQ0FBQyxRQUFRO0FBQzdCLGNBQVEsRUFBRSxVQUFVLENBQUMsSUFBSTtBQUN6QixVQUFJLEVBQUUsVUFBVSxDQUFDLElBQUk7QUFDckIsY0FBUSxFQUFFLFVBQVUsQ0FBQyxJQUFJO0tBQzFCLENBQUMsSUFBSSxHQUFHLENBQUM7O0FBRVYsUUFBSSxDQUFDLFFBQVEsR0FBRztBQUNkLGNBQVEsRUFBRSxzQ0FBb0IsVUFBVSxDQUFDLFFBQVEsQ0FBQztBQUNsRCxVQUFJLEVBQUUsc0NBQW9CLFVBQVUsQ0FBQyxJQUFJLENBQUM7QUFDMUMsVUFBSSxFQUFFLHNDQUFvQixVQUFVLENBQUMsSUFBSSxDQUFDO0FBQzFDLFVBQUksRUFBRSxzQ0FBb0IsVUFBVSxDQUFDLElBQUksRUFBRSxHQUFHLENBQUM7S0FDaEQsQ0FBQzs7Ozs7QUFLRixRQUFJLENBQUMsT0FBTyxHQUFHLE1BQU0sQ0FBQyxPQUFPLENBQUM7QUFDOUIsUUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsYUFBYSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0dBQzVDOztlQTNCVSxXQUFXOztXQTZCVCx1QkFBQyxNQUFNLEVBQUU7QUFDcEIsVUFBTSxHQUFHLEdBQUcsTUFBTSxDQUFDLEdBQUcsSUFBSSxFQUFFLENBQUM7QUFDN0IsVUFBSSxDQUFDLFNBQVMsR0FBRyxHQUFHLENBQUMsTUFBTSxDQUFDOztBQUU1QixVQUFNLFlBQVksR0FBRztBQUNuQixVQUFFLEVBQUUsR0FBRyxDQUFDLEVBQUUsSUFBSSxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxVQUFBLEVBQUU7aUJBQUksc0JBQWEsRUFBRSxDQUFDO1NBQUEsQ0FBQztBQUNoRCxZQUFJLEVBQUUsR0FBRyxDQUFDLElBQUksSUFBSSxzQkFBYSxHQUFHLENBQUMsSUFBSSxDQUFDO0FBQ3hDLFdBQUcsRUFBRSxHQUFHLENBQUMsR0FBRyxJQUFJLHNCQUFhLEdBQUcsQ0FBQyxHQUFHLENBQUM7T0FDdEMsQ0FBQzs7QUFFRixVQUFJLG9CQUFPLFlBQVksQ0FBQyxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQyxNQUFNLEVBQUU7QUFDL0MsZUFBTyxpQkFBZSxZQUFZLENBQUMsQ0FBQztPQUNyQztLQUNGOzs7V0FFYyx5QkFBQyxJQUFzQyxFQUFFO1VBQXRDLFFBQVEsR0FBVixJQUFzQyxDQUFwQyxRQUFRO1VBQUUsUUFBUSxHQUFwQixJQUFzQyxDQUExQixRQUFRO1VBQUUsSUFBSSxHQUExQixJQUFzQyxDQUFoQixJQUFJO1VBQUUsUUFBUSxHQUFwQyxJQUFzQyxDQUFWLFFBQVE7O0FBQ2xELFVBQUksS0FBSyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDaEUsV0FBSyxHQUFHLEtBQUssSUFBSSxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLENBQUM7QUFDcEQsV0FBSyxHQUFHLEtBQUssSUFBSSxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDaEQsV0FBSyxHQUFHLEtBQUssSUFBSSxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLENBQUM7O0FBRXBELFVBQUksQ0FBQyxLQUFLLEVBQUUsT0FBTyxFQUFFLENBQUM7QUFDdEIsYUFBTztBQUNMLGVBQU8sRUFBRSxJQUFJLENBQUMsT0FBTztBQUNyQiwwQkFBa0IsRUFBRSxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksR0FBRyxJQUFJLENBQUMsU0FBUztBQUN6RCxhQUFLLEVBQUUsUUFBUSxLQUFLLFFBQVEsR0FBRyxJQUFJLENBQUMsUUFBUSxHQUFHLFNBQVM7T0FDekQsQ0FBQztLQUNIOzs7U0F4RFUsV0FBVyIsImZpbGUiOiIvVXNlcnMvVGhlby9EZXNrdG9wL05lYnVsYS9lbGFzdGljc2VhcmNoL2luc3RhbGxlZFBsdWdpbnMvc2Vuc2Uvc2VydmVyL3Byb3h5X2NvbmZpZy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IG1lbW9pemUsIHZhbHVlcyB9IGZyb20gJ2xvZGFzaCdcbmltcG9ydCB7IGZvcm1hdCBhcyBmb3JtYXRVcmwgfSBmcm9tICd1cmwnXG5pbXBvcnQgeyBBZ2VudCBhcyBIdHRwc0FnZW50IH0gZnJvbSAnaHR0cHMnXG5pbXBvcnQgeyByZWFkRmlsZVN5bmMgfSBmcm9tICdmcydcblxuaW1wb3J0IHsgV2lsZGNhcmRNYXRjaGVyIH0gZnJvbSAnLi93aWxkY2FyZF9tYXRjaGVyJ1xuXG5jb25zdCBtYWtlSHR0cHNBZ2VudCA9IG1lbW9pemUoXG4gIG9wdHMgPT4gbmV3IEh0dHBzQWdlbnQob3B0cyksXG4gIG9wdHMgPT4gSlNPTi5zdHJpbmdpZnkob3B0cylcbilcblxuZXhwb3J0IGNsYXNzIFByb3h5Q29uZmlnIHtcbiAgY29uc3RydWN0b3IoY29uZmlnKSB7XG4gICAgY29uZmlnID0gT2JqZWN0LmFzc2lnbih7fSwgY29uZmlnKTtcblxuICAgIC8vIC0tLS0tXG4gICAgLy8gcmVhZCBcIm1hdGNoXCIgaW5mb1xuICAgIC8vIC0tLS0tXG4gICAgY29uc3QgcmF3TWF0Y2hlcyA9IE9iamVjdC5hc3NpZ24oe30sIGNvbmZpZy5tYXRjaCk7XG4gICAgdGhpcy5pZCA9IGZvcm1hdFVybCh7XG4gICAgICBwcm90b2NvbDogcmF3TWF0Y2hlcy5wcm90b2NvbCxcbiAgICAgIGhvc3RuYW1lOiByYXdNYXRjaGVzLmhvc3QsXG4gICAgICBwb3J0OiByYXdNYXRjaGVzLnBvcnQsXG4gICAgICBwYXRobmFtZTogcmF3TWF0Y2hlcy5wYXRoXG4gICAgfSkgfHwgJyonO1xuXG4gICAgdGhpcy5tYXRjaGVycyA9IHtcbiAgICAgIHByb3RvY29sOiBuZXcgV2lsZGNhcmRNYXRjaGVyKHJhd01hdGNoZXMucHJvdG9jb2wpLFxuICAgICAgaG9zdDogbmV3IFdpbGRjYXJkTWF0Y2hlcihyYXdNYXRjaGVzLmhvc3QpLFxuICAgICAgcG9ydDogbmV3IFdpbGRjYXJkTWF0Y2hlcihyYXdNYXRjaGVzLnBvcnQpLFxuICAgICAgcGF0aDogbmV3IFdpbGRjYXJkTWF0Y2hlcihyYXdNYXRjaGVzLnBhdGgsICcvJyksXG4gICAgfTtcblxuICAgIC8vIC0tLS0tXG4gICAgLy8gcmVhZCBjb25maWcgdmFyc1xuICAgIC8vIC0tLS0tXG4gICAgdGhpcy50aW1lb3V0ID0gY29uZmlnLnRpbWVvdXQ7XG4gICAgdGhpcy5zc2xBZ2VudCA9IHRoaXMuX21ha2VTc2xBZ2VudChjb25maWcpO1xuICB9XG5cbiAgX21ha2VTc2xBZ2VudChjb25maWcpIHtcbiAgICBjb25zdCBzc2wgPSBjb25maWcuc3NsIHx8IHt9O1xuICAgIHRoaXMudmVyaWZ5U3NsID0gc3NsLnZlcmlmeTtcblxuICAgIGNvbnN0IHNzbEFnZW50T3B0cyA9IHtcbiAgICAgIGNhOiBzc2wuY2EgJiYgc3NsLmNhLm1hcChjYSA9PiByZWFkRmlsZVN5bmMoY2EpKSxcbiAgICAgIGNlcnQ6IHNzbC5jZXJ0ICYmIHJlYWRGaWxlU3luYyhzc2wuY2VydCksXG4gICAgICBrZXk6IHNzbC5rZXkgJiYgcmVhZEZpbGVTeW5jKHNzbC5rZXkpLFxuICAgIH07XG5cbiAgICBpZiAodmFsdWVzKHNzbEFnZW50T3B0cykuZmlsdGVyKEJvb2xlYW4pLmxlbmd0aCkge1xuICAgICAgcmV0dXJuIG5ldyBIdHRwc0FnZW50KHNzbEFnZW50T3B0cyk7XG4gICAgfVxuICB9XG5cbiAgZ2V0Rm9yUGFyc2VkVXJpKHsgcHJvdG9jb2wsIGhvc3RuYW1lLCBwb3J0LCBwYXRobmFtZSB9KSB7XG4gICAgbGV0IG1hdGNoID0gdGhpcy5tYXRjaGVycy5wcm90b2NvbC5tYXRjaChwcm90b2NvbC5zbGljZSgwLCAtMSkpO1xuICAgIG1hdGNoID0gbWF0Y2ggJiYgdGhpcy5tYXRjaGVycy5ob3N0Lm1hdGNoKGhvc3RuYW1lKTtcbiAgICBtYXRjaCA9IG1hdGNoICYmIHRoaXMubWF0Y2hlcnMucG9ydC5tYXRjaChwb3J0KTtcbiAgICBtYXRjaCA9IG1hdGNoICYmIHRoaXMubWF0Y2hlcnMucGF0aC5tYXRjaChwYXRobmFtZSk7XG5cbiAgICBpZiAoIW1hdGNoKSByZXR1cm4ge307XG4gICAgcmV0dXJuIHtcbiAgICAgIHRpbWVvdXQ6IHRoaXMudGltZW91dCxcbiAgICAgIHJlamVjdFVuYXV0aG9yaXplZDogdGhpcy5zc2xBZ2VudCA/IHRydWUgOiB0aGlzLnZlcmlmeVNzbCxcbiAgICAgIGFnZW50OiBwcm90b2NvbCA9PT0gJ2h0dHBzOicgPyB0aGlzLnNzbEFnZW50IDogdW5kZWZpbmVkXG4gICAgfTtcbiAgfVxufVxuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/Users/Theo/Desktop/Nebula/elasticsearch/installedPlugins/sense/server/proxy_config.js"
      ],
      "names": [],
      "mappings": "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",
      "file": "/Users/Theo/Desktop/Nebula/elasticsearch/installedPlugins/sense/server/proxy_config.js",
      "sourcesContent": [
        "import { memoize, values } from 'lodash'\nimport { format as formatUrl } from 'url'\nimport { Agent as HttpsAgent } from 'https'\nimport { readFileSync } from 'fs'\n\nimport { WildcardMatcher } from './wildcard_matcher'\n\nconst makeHttpsAgent = memoize(\n  opts => new HttpsAgent(opts),\n  opts => JSON.stringify(opts)\n)\n\nexport class ProxyConfig {\n  constructor(config) {\n    config = Object.assign({}, config);\n\n    // -----\n    // read \"match\" info\n    // -----\n    const rawMatches = Object.assign({}, config.match);\n    this.id = formatUrl({\n      protocol: rawMatches.protocol,\n      hostname: rawMatches.host,\n      port: rawMatches.port,\n      pathname: rawMatches.path\n    }) || '*';\n\n    this.matchers = {\n      protocol: new WildcardMatcher(rawMatches.protocol),\n      host: new WildcardMatcher(rawMatches.host),\n      port: new WildcardMatcher(rawMatches.port),\n      path: new WildcardMatcher(rawMatches.path, '/'),\n    };\n\n    // -----\n    // read config vars\n    // -----\n    this.timeout = config.timeout;\n    this.sslAgent = this._makeSslAgent(config);\n  }\n\n  _makeSslAgent(config) {\n    const ssl = config.ssl || {};\n    this.verifySsl = ssl.verify;\n\n    const sslAgentOpts = {\n      ca: ssl.ca && ssl.ca.map(ca => readFileSync(ca)),\n      cert: ssl.cert && readFileSync(ssl.cert),\n      key: ssl.key && readFileSync(ssl.key),\n    };\n\n    if (values(sslAgentOpts).filter(Boolean).length) {\n      return new HttpsAgent(sslAgentOpts);\n    }\n  }\n\n  getForParsedUri({ protocol, hostname, port, pathname }) {\n    let match = this.matchers.protocol.match(protocol.slice(0, -1));\n    match = match && this.matchers.host.match(hostname);\n    match = match && this.matchers.port.match(port);\n    match = match && this.matchers.path.match(pathname);\n\n    if (!match) return {};\n    return {\n      timeout: this.timeout,\n      rejectUnauthorized: this.sslAgent ? true : this.verifySsl,\n      agent: protocol === 'https:' ? this.sslAgent : undefined\n    };\n  }\n}\n"
      ]
    },
    "mtime": 1457681754000
  },
  "{\"filename\":\"/Users/Theo/Desktop/Nebula/elasticsearch/installedPlugins/sense/server/wildcard_matcher.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [
          {
            "source": "minimatch",
            "imported": [
              "Minimatch"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "Minimatch",
                "local": "Minimatch"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "WildcardMatcher"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "WildcardMatcher",
              "exported": "WildcardMatcher"
            }
          ]
        }
      },
      "usedHelpers": [
        "create-class",
        "class-call-check"
      ]
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _minimatch = require('minimatch');\n\nvar WildcardMatcher = (function () {\n  function WildcardMatcher(wildcardPattern, emptyVal) {\n    _classCallCheck(this, WildcardMatcher);\n\n    this.emptyVal = emptyVal;\n    this.pattern = String(wildcardPattern || '*');\n    this.matcher = new _minimatch.Minimatch(this.pattern, {\n      noglobstar: true,\n      dot: true,\n      nocase: true,\n      matchBase: true,\n      nocomment: true\n    });\n  }\n\n  _createClass(WildcardMatcher, [{\n    key: 'match',\n    value: function match(candidate) {\n      var empty = !candidate || candidate === this.emptyVal;\n      if (empty && this.pattern === '*') {\n        return true;\n      }\n\n      return this.matcher.match(candidate || '');\n    }\n  }]);\n\n  return WildcardMatcher;\n})();\n\nexports.WildcardMatcher = WildcardMatcher;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9UaGVvL0Rlc2t0b3AvTmVidWxhL2VsYXN0aWNzZWFyY2gvaW5zdGFsbGVkUGx1Z2lucy9zZW5zZS9zZXJ2ZXIvd2lsZGNhcmRfbWF0Y2hlci5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O3lCQUEwQixXQUFXOztJQUV4QixlQUFlO0FBQ2YsV0FEQSxlQUFlLENBQ2QsZUFBZSxFQUFFLFFBQVEsRUFBRTswQkFENUIsZUFBZTs7QUFFeEIsUUFBSSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUM7QUFDekIsUUFBSSxDQUFDLE9BQU8sR0FBRyxNQUFNLENBQUMsZUFBZSxJQUFJLEdBQUcsQ0FBQyxDQUFDO0FBQzlDLFFBQUksQ0FBQyxPQUFPLEdBQUcseUJBQWMsSUFBSSxDQUFDLE9BQU8sRUFBRTtBQUN6QyxnQkFBVSxFQUFFLElBQUk7QUFDaEIsU0FBRyxFQUFFLElBQUk7QUFDVCxZQUFNLEVBQUUsSUFBSTtBQUNaLGVBQVMsRUFBRSxJQUFJO0FBQ2YsZUFBUyxFQUFFLElBQUk7S0FDaEIsQ0FBQyxDQUFBO0dBQ0g7O2VBWFUsZUFBZTs7V0FhckIsZUFBQyxTQUFTLEVBQUU7QUFDZixVQUFNLEtBQUssR0FBRyxDQUFDLFNBQVMsSUFBSSxTQUFTLEtBQUssSUFBSSxDQUFDLFFBQVEsQ0FBQztBQUN4RCxVQUFJLEtBQUssSUFBSSxJQUFJLENBQUMsT0FBTyxLQUFLLEdBQUcsRUFBRTtBQUNqQyxlQUFPLElBQUksQ0FBQztPQUNiOztBQUVELGFBQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsU0FBUyxJQUFJLEVBQUUsQ0FBQyxDQUFBO0tBQzNDOzs7U0FwQlUsZUFBZSIsImZpbGUiOiIvVXNlcnMvVGhlby9EZXNrdG9wL05lYnVsYS9lbGFzdGljc2VhcmNoL2luc3RhbGxlZFBsdWdpbnMvc2Vuc2Uvc2VydmVyL3dpbGRjYXJkX21hdGNoZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBNaW5pbWF0Y2ggfSBmcm9tICdtaW5pbWF0Y2gnXG5cbmV4cG9ydCBjbGFzcyBXaWxkY2FyZE1hdGNoZXIge1xuICBjb25zdHJ1Y3Rvcih3aWxkY2FyZFBhdHRlcm4sIGVtcHR5VmFsKSB7XG4gICAgdGhpcy5lbXB0eVZhbCA9IGVtcHR5VmFsO1xuICAgIHRoaXMucGF0dGVybiA9IFN0cmluZyh3aWxkY2FyZFBhdHRlcm4gfHwgJyonKTtcbiAgICB0aGlzLm1hdGNoZXIgPSBuZXcgTWluaW1hdGNoKHRoaXMucGF0dGVybiwge1xuICAgICAgbm9nbG9ic3RhcjogdHJ1ZSxcbiAgICAgIGRvdDogdHJ1ZSxcbiAgICAgIG5vY2FzZTogdHJ1ZSxcbiAgICAgIG1hdGNoQmFzZTogdHJ1ZSxcbiAgICAgIG5vY29tbWVudDogdHJ1ZVxuICAgIH0pXG4gIH1cblxuICBtYXRjaChjYW5kaWRhdGUpIHtcbiAgICBjb25zdCBlbXB0eSA9ICFjYW5kaWRhdGUgfHwgY2FuZGlkYXRlID09PSB0aGlzLmVtcHR5VmFsO1xuICAgIGlmIChlbXB0eSAmJiB0aGlzLnBhdHRlcm4gPT09ICcqJykge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXMubWF0Y2hlci5tYXRjaChjYW5kaWRhdGUgfHwgJycpXG4gIH1cbn1cbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/Users/Theo/Desktop/Nebula/elasticsearch/installedPlugins/sense/server/wildcard_matcher.js"
      ],
      "names": [],
      "mappings": ";;;;;;;;;;yBAA0B,WAAW;;IAExB,eAAe;AACf,WADA,eAAe,CACd,eAAe,EAAE,QAAQ,EAAE;0BAD5B,eAAe;;AAExB,QAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;AACzB,QAAI,CAAC,OAAO,GAAG,MAAM,CAAC,eAAe,IAAI,GAAG,CAAC,CAAC;AAC9C,QAAI,CAAC,OAAO,GAAG,yBAAc,IAAI,CAAC,OAAO,EAAE;AACzC,gBAAU,EAAE,IAAI;AAChB,SAAG,EAAE,IAAI;AACT,YAAM,EAAE,IAAI;AACZ,eAAS,EAAE,IAAI;AACf,eAAS,EAAE,IAAI;KAChB,CAAC,CAAA;GACH;;eAXU,eAAe;;WAarB,eAAC,SAAS,EAAE;AACf,UAAM,KAAK,GAAG,CAAC,SAAS,IAAI,SAAS,KAAK,IAAI,CAAC,QAAQ,CAAC;AACxD,UAAI,KAAK,IAAI,IAAI,CAAC,OAAO,KAAK,GAAG,EAAE;AACjC,eAAO,IAAI,CAAC;OACb;;AAED,aAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,SAAS,IAAI,EAAE,CAAC,CAAA;KAC3C;;;SApBU,eAAe",
      "file": "/Users/Theo/Desktop/Nebula/elasticsearch/installedPlugins/sense/server/wildcard_matcher.js",
      "sourcesContent": [
        "import { Minimatch } from 'minimatch'\n\nexport class WildcardMatcher {\n  constructor(wildcardPattern, emptyVal) {\n    this.emptyVal = emptyVal;\n    this.pattern = String(wildcardPattern || '*');\n    this.matcher = new Minimatch(this.pattern, {\n      noglobstar: true,\n      dot: true,\n      nocase: true,\n      matchBase: true,\n      nocomment: true\n    })\n  }\n\n  match(candidate) {\n    const empty = !candidate || candidate === this.emptyVal;\n    if (empty && this.pattern === '*') {\n      return true;\n    }\n\n    return this.matcher.match(candidate || '')\n  }\n}\n"
      ]
    },
    "mtime": 1457678751000
  },
  "{\"filename\":\"/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/index.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "'use strict';\n\nvar Promise = require('bluebird');\nvar join = require('path').join;\nvar requireAllAndApply = require('./server/lib/require_all_and_apply');\nvar pluginSelfCheck = require('./server/lib/plugin_self_check');\n\nmodule.exports = function (kibana) {\n  return new kibana.Plugin({\n    require: ['elasticsearch'],\n    name: 'marvel',\n\n    uiExports: {\n      app: {\n        title: 'Marvel',\n        description: 'Monitoring for Elasticsearch',\n        main: 'plugins/marvel/marvel',\n        injectVars: function injectVars(server, options) {\n          var config = server.config();\n          return {\n            maxBucketSize: config.get('marvel.max_bucket_size'),\n            minIntervalSeconds: config.get('marvel.min_interval_seconds'),\n            kbnIndex: config.get('kibana.index'),\n            esApiVersion: config.get('elasticsearch.apiVersion'),\n            esShardTimeout: config.get('elasticsearch.shardTimeout'),\n            statsReportUrl: config.get('marvel.stats_report_url'),\n            reportStats: config.get('marvel.report_stats'),\n            marvelIndexPrefix: config.get('marvel.index_prefix'),\n            googleTagManagerId: config.get('marvel.google_tag_manager_id')\n          };\n        }\n      }\n    },\n\n    config: function config(Joi) {\n      return Joi.object({\n        enabled: Joi.boolean()['default'](true),\n        index: Joi.string()['default']('.marvel-es-data-1'),\n        index_prefix: Joi.string()['default']('.marvel-es-1-'),\n        missing_intervals: Joi.number()['default'](12),\n        max_bucket_size: Joi.number()['default'](10000),\n        min_interval_seconds: Joi.number()['default'](10),\n        report_stats: Joi.boolean()['default'](true),\n        google_tag_manager_id: Joi.string()['default']('GTM-WXMHGM'),\n        node_resolver: Joi.string().regex(/^(?:transport_address|name)$/)['default']('transport_address'),\n        stats_report_url: Joi.when('$dev', {\n          is: true,\n          then: Joi.string()['default']('../api/marvel/v1/phone-home'),\n          otherwise: Joi.string()['default']('https://marvel-stats.elasticsearch.com/appdata/marvelOpts')\n        }),\n        agent: Joi.object({\n          interval: Joi.string().regex(/[\\d\\.]+[yMwdhms]/)['default']('10s')\n        })['default']()\n      })['default']();\n    },\n\n    init: function init(server, options) {\n      // Make sure the Marvel index is created and the Kibana version is supported\n      pluginSelfCheck(this, server);\n      // Require all the routes\n      requireAllAndApply(join(__dirname, 'server', 'routes', '**', '*.js'), server);\n    }\n  });\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9UaGVvL0Rlc2t0b3AvTmVidWxhVGVtcC9OZWJ1bGEvZWxhc3RpY3NlYXJjaC9pbnN0YWxsZWRQbHVnaW5zL21hcnZlbC9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLElBQUksT0FBTyxHQUFHLE9BQU8sQ0FBQyxVQUFVLENBQUMsQ0FBQztBQUNsQyxJQUFJLElBQUksR0FBRyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUMsSUFBSSxDQUFDO0FBQ2hDLElBQUksa0JBQWtCLEdBQUcsT0FBTyxDQUFDLG9DQUFvQyxDQUFDLENBQUM7QUFDdkUsSUFBSSxlQUFlLEdBQUcsT0FBTyxDQUFDLGdDQUFnQyxDQUFDLENBQUM7O0FBRWhFLE1BQU0sQ0FBQyxPQUFPLEdBQUcsVUFBVSxNQUFNLEVBQUU7QUFDakMsU0FBTyxJQUFJLE1BQU0sQ0FBQyxNQUFNLENBQUM7QUFDdkIsV0FBTyxFQUFFLENBQUMsZUFBZSxDQUFDO0FBQzFCLFFBQUksRUFBRSxRQUFROztBQUVkLGFBQVMsRUFBRTtBQUNULFNBQUcsRUFBRTtBQUNILGFBQUssRUFBRSxRQUFRO0FBQ2YsbUJBQVcsRUFBRSw4QkFBOEI7QUFDM0MsWUFBSSxFQUFFLHVCQUF1QjtBQUM3QixrQkFBVSxFQUFFLG9CQUFVLE1BQU0sRUFBRSxPQUFPLEVBQUU7QUFDckMsY0FBSSxNQUFNLEdBQUcsTUFBTSxDQUFDLE1BQU0sRUFBRSxDQUFDO0FBQzdCLGlCQUFPO0FBQ0wseUJBQWEsRUFBRSxNQUFNLENBQUMsR0FBRyxDQUFDLHdCQUF3QixDQUFDO0FBQ25ELDhCQUFrQixFQUFFLE1BQU0sQ0FBQyxHQUFHLENBQUMsNkJBQTZCLENBQUM7QUFDN0Qsb0JBQVEsRUFBRSxNQUFNLENBQUMsR0FBRyxDQUFDLGNBQWMsQ0FBQztBQUNwQyx3QkFBWSxFQUFFLE1BQU0sQ0FBQyxHQUFHLENBQUMsMEJBQTBCLENBQUM7QUFDcEQsMEJBQWMsRUFBRSxNQUFNLENBQUMsR0FBRyxDQUFDLDRCQUE0QixDQUFDO0FBQ3hELDBCQUFjLEVBQUUsTUFBTSxDQUFDLEdBQUcsQ0FBQyx5QkFBeUIsQ0FBQztBQUNyRCx1QkFBVyxFQUFFLE1BQU0sQ0FBQyxHQUFHLENBQUMscUJBQXFCLENBQUM7QUFDOUMsNkJBQWlCLEVBQUUsTUFBTSxDQUFDLEdBQUcsQ0FBQyxxQkFBcUIsQ0FBQztBQUNwRCw4QkFBa0IsRUFBRSxNQUFNLENBQUMsR0FBRyxDQUFDLDhCQUE4QixDQUFDO1dBQy9ELENBQUM7U0FDSDtPQUNGO0tBQ0Y7O0FBRUQsVUFBTSxFQUFFLGdCQUFVLEdBQUcsRUFBRTtBQUNyQixhQUFPLEdBQUcsQ0FBQyxNQUFNLENBQUM7QUFDaEIsZUFBTyxFQUFFLEdBQUcsQ0FBQyxPQUFPLEVBQUUsV0FBUSxDQUFDLElBQUksQ0FBQztBQUNwQyxhQUFLLEVBQUUsR0FBRyxDQUFDLE1BQU0sRUFBRSxXQUFRLENBQUMsbUJBQW1CLENBQUM7QUFDaEQsb0JBQVksRUFBRSxHQUFHLENBQUMsTUFBTSxFQUFFLFdBQVEsQ0FBQyxlQUFlLENBQUM7QUFDbkQseUJBQWlCLEVBQUUsR0FBRyxDQUFDLE1BQU0sRUFBRSxXQUFRLENBQUMsRUFBRSxDQUFDO0FBQzNDLHVCQUFlLEVBQUUsR0FBRyxDQUFDLE1BQU0sRUFBRSxXQUFRLENBQUMsS0FBSyxDQUFDO0FBQzVDLDRCQUFvQixFQUFFLEdBQUcsQ0FBQyxNQUFNLEVBQUUsV0FBUSxDQUFDLEVBQUUsQ0FBQztBQUM5QyxvQkFBWSxFQUFFLEdBQUcsQ0FBQyxPQUFPLEVBQUUsV0FBUSxDQUFDLElBQUksQ0FBQztBQUN6Qyw2QkFBcUIsRUFBRSxHQUFHLENBQUMsTUFBTSxFQUFFLFdBQVEsQ0FBQyxZQUFZLENBQUM7QUFDekQscUJBQWEsRUFBRSxHQUFHLENBQUMsTUFBTSxFQUFFLENBQUMsS0FBSyxDQUFDLDhCQUE4QixDQUFDLFdBQVEsQ0FBQyxtQkFBbUIsQ0FBQztBQUM5Rix3QkFBZ0IsRUFBRSxHQUFHLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRTtBQUNqQyxZQUFFLEVBQUUsSUFBSTtBQUNSLGNBQUksRUFBRSxHQUFHLENBQUMsTUFBTSxFQUFFLFdBQVEsQ0FBQyw2QkFBNkIsQ0FBQztBQUN6RCxtQkFBUyxFQUFFLEdBQUcsQ0FBQyxNQUFNLEVBQUUsV0FBUSxDQUFDLDJEQUEyRCxDQUFDO1NBQzdGLENBQUM7QUFDRixhQUFLLEVBQUUsR0FBRyxDQUFDLE1BQU0sQ0FBQztBQUNoQixrQkFBUSxFQUFFLEdBQUcsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxLQUFLLENBQUMsa0JBQWtCLENBQUMsV0FBUSxDQUFDLEtBQUssQ0FBQztTQUNoRSxDQUFDLFdBQVEsRUFBRTtPQUNiLENBQUMsV0FBUSxFQUFFLENBQUM7S0FDZDs7QUFFRCxRQUFJLEVBQUUsY0FBVSxNQUFNLEVBQUUsT0FBTyxFQUFFOztBQUUvQixxQkFBZSxDQUFDLElBQUksRUFBRSxNQUFNLENBQUMsQ0FBQzs7QUFFOUIsd0JBQWtCLENBQUMsSUFBSSxDQUFDLFNBQVMsRUFBRSxRQUFRLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxNQUFNLENBQUMsRUFBRSxNQUFNLENBQUMsQ0FBQztLQUMvRTtHQUNGLENBQUMsQ0FBQztDQUNKLENBQUMiLCJmaWxlIjoiL1VzZXJzL1RoZW8vRGVza3RvcC9OZWJ1bGFUZW1wL05lYnVsYS9lbGFzdGljc2VhcmNoL2luc3RhbGxlZFBsdWdpbnMvbWFydmVsL2luZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIFByb21pc2UgPSByZXF1aXJlKCdibHVlYmlyZCcpO1xudmFyIGpvaW4gPSByZXF1aXJlKCdwYXRoJykuam9pbjtcbnZhciByZXF1aXJlQWxsQW5kQXBwbHkgPSByZXF1aXJlKCcuL3NlcnZlci9saWIvcmVxdWlyZV9hbGxfYW5kX2FwcGx5Jyk7XG52YXIgcGx1Z2luU2VsZkNoZWNrID0gcmVxdWlyZSgnLi9zZXJ2ZXIvbGliL3BsdWdpbl9zZWxmX2NoZWNrJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGtpYmFuYSkge1xuICByZXR1cm4gbmV3IGtpYmFuYS5QbHVnaW4oe1xuICAgIHJlcXVpcmU6IFsnZWxhc3RpY3NlYXJjaCddLFxuICAgIG5hbWU6ICdtYXJ2ZWwnLFxuXG4gICAgdWlFeHBvcnRzOiB7XG4gICAgICBhcHA6IHtcbiAgICAgICAgdGl0bGU6ICdNYXJ2ZWwnLFxuICAgICAgICBkZXNjcmlwdGlvbjogJ01vbml0b3JpbmcgZm9yIEVsYXN0aWNzZWFyY2gnLFxuICAgICAgICBtYWluOiAncGx1Z2lucy9tYXJ2ZWwvbWFydmVsJyxcbiAgICAgICAgaW5qZWN0VmFyczogZnVuY3Rpb24gKHNlcnZlciwgb3B0aW9ucykge1xuICAgICAgICAgIHZhciBjb25maWcgPSBzZXJ2ZXIuY29uZmlnKCk7XG4gICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIG1heEJ1Y2tldFNpemU6IGNvbmZpZy5nZXQoJ21hcnZlbC5tYXhfYnVja2V0X3NpemUnKSxcbiAgICAgICAgICAgIG1pbkludGVydmFsU2Vjb25kczogY29uZmlnLmdldCgnbWFydmVsLm1pbl9pbnRlcnZhbF9zZWNvbmRzJyksXG4gICAgICAgICAgICBrYm5JbmRleDogY29uZmlnLmdldCgna2liYW5hLmluZGV4JyksXG4gICAgICAgICAgICBlc0FwaVZlcnNpb246IGNvbmZpZy5nZXQoJ2VsYXN0aWNzZWFyY2guYXBpVmVyc2lvbicpLFxuICAgICAgICAgICAgZXNTaGFyZFRpbWVvdXQ6IGNvbmZpZy5nZXQoJ2VsYXN0aWNzZWFyY2guc2hhcmRUaW1lb3V0JyksXG4gICAgICAgICAgICBzdGF0c1JlcG9ydFVybDogY29uZmlnLmdldCgnbWFydmVsLnN0YXRzX3JlcG9ydF91cmwnKSxcbiAgICAgICAgICAgIHJlcG9ydFN0YXRzOiBjb25maWcuZ2V0KCdtYXJ2ZWwucmVwb3J0X3N0YXRzJyksXG4gICAgICAgICAgICBtYXJ2ZWxJbmRleFByZWZpeDogY29uZmlnLmdldCgnbWFydmVsLmluZGV4X3ByZWZpeCcpLFxuICAgICAgICAgICAgZ29vZ2xlVGFnTWFuYWdlcklkOiBjb25maWcuZ2V0KCdtYXJ2ZWwuZ29vZ2xlX3RhZ19tYW5hZ2VyX2lkJylcbiAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcblxuICAgIGNvbmZpZzogZnVuY3Rpb24gKEpvaSkge1xuICAgICAgcmV0dXJuIEpvaS5vYmplY3Qoe1xuICAgICAgICBlbmFibGVkOiBKb2kuYm9vbGVhbigpLmRlZmF1bHQodHJ1ZSksXG4gICAgICAgIGluZGV4OiBKb2kuc3RyaW5nKCkuZGVmYXVsdCgnLm1hcnZlbC1lcy1kYXRhLTEnKSxcbiAgICAgICAgaW5kZXhfcHJlZml4OiBKb2kuc3RyaW5nKCkuZGVmYXVsdCgnLm1hcnZlbC1lcy0xLScpLFxuICAgICAgICBtaXNzaW5nX2ludGVydmFsczogSm9pLm51bWJlcigpLmRlZmF1bHQoMTIpLFxuICAgICAgICBtYXhfYnVja2V0X3NpemU6IEpvaS5udW1iZXIoKS5kZWZhdWx0KDEwMDAwKSxcbiAgICAgICAgbWluX2ludGVydmFsX3NlY29uZHM6IEpvaS5udW1iZXIoKS5kZWZhdWx0KDEwKSxcbiAgICAgICAgcmVwb3J0X3N0YXRzOiBKb2kuYm9vbGVhbigpLmRlZmF1bHQodHJ1ZSksXG4gICAgICAgIGdvb2dsZV90YWdfbWFuYWdlcl9pZDogSm9pLnN0cmluZygpLmRlZmF1bHQoJ0dUTS1XWE1IR00nKSxcbiAgICAgICAgbm9kZV9yZXNvbHZlcjogSm9pLnN0cmluZygpLnJlZ2V4KC9eKD86dHJhbnNwb3J0X2FkZHJlc3N8bmFtZSkkLykuZGVmYXVsdCgndHJhbnNwb3J0X2FkZHJlc3MnKSxcbiAgICAgICAgc3RhdHNfcmVwb3J0X3VybDogSm9pLndoZW4oJyRkZXYnLCB7XG4gICAgICAgICAgaXM6IHRydWUsXG4gICAgICAgICAgdGhlbjogSm9pLnN0cmluZygpLmRlZmF1bHQoJy4uL2FwaS9tYXJ2ZWwvdjEvcGhvbmUtaG9tZScpLFxuICAgICAgICAgIG90aGVyd2lzZTogSm9pLnN0cmluZygpLmRlZmF1bHQoJ2h0dHBzOi8vbWFydmVsLXN0YXRzLmVsYXN0aWNzZWFyY2guY29tL2FwcGRhdGEvbWFydmVsT3B0cycpXG4gICAgICAgIH0pLFxuICAgICAgICBhZ2VudDogSm9pLm9iamVjdCh7XG4gICAgICAgICAgaW50ZXJ2YWw6IEpvaS5zdHJpbmcoKS5yZWdleCgvW1xcZFxcLl0rW3lNd2RobXNdLykuZGVmYXVsdCgnMTBzJylcbiAgICAgICAgfSkuZGVmYXVsdCgpXG4gICAgICB9KS5kZWZhdWx0KCk7XG4gICAgfSxcblxuICAgIGluaXQ6IGZ1bmN0aW9uIChzZXJ2ZXIsIG9wdGlvbnMpIHtcbiAgICAgIC8vIE1ha2Ugc3VyZSB0aGUgTWFydmVsIGluZGV4IGlzIGNyZWF0ZWQgYW5kIHRoZSBLaWJhbmEgdmVyc2lvbiBpcyBzdXBwb3J0ZWRcbiAgICAgIHBsdWdpblNlbGZDaGVjayh0aGlzLCBzZXJ2ZXIpO1xuICAgICAgLy8gUmVxdWlyZSBhbGwgdGhlIHJvdXRlc1xuICAgICAgcmVxdWlyZUFsbEFuZEFwcGx5KGpvaW4oX19kaXJuYW1lLCAnc2VydmVyJywgJ3JvdXRlcycsICcqKicsICcqLmpzJyksIHNlcnZlcik7XG4gICAgfVxuICB9KTtcbn07XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/index.js"
      ],
      "names": [],
      "mappings": "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",
      "file": "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/index.js",
      "sourcesContent": [
        "var Promise = require('bluebird');\nvar join = require('path').join;\nvar requireAllAndApply = require('./server/lib/require_all_and_apply');\nvar pluginSelfCheck = require('./server/lib/plugin_self_check');\n\nmodule.exports = function (kibana) {\n  return new kibana.Plugin({\n    require: ['elasticsearch'],\n    name: 'marvel',\n\n    uiExports: {\n      app: {\n        title: 'Marvel',\n        description: 'Monitoring for Elasticsearch',\n        main: 'plugins/marvel/marvel',\n        injectVars: function (server, options) {\n          var config = server.config();\n          return {\n            maxBucketSize: config.get('marvel.max_bucket_size'),\n            minIntervalSeconds: config.get('marvel.min_interval_seconds'),\n            kbnIndex: config.get('kibana.index'),\n            esApiVersion: config.get('elasticsearch.apiVersion'),\n            esShardTimeout: config.get('elasticsearch.shardTimeout'),\n            statsReportUrl: config.get('marvel.stats_report_url'),\n            reportStats: config.get('marvel.report_stats'),\n            marvelIndexPrefix: config.get('marvel.index_prefix'),\n            googleTagManagerId: config.get('marvel.google_tag_manager_id')\n          };\n        }\n      }\n    },\n\n    config: function (Joi) {\n      return Joi.object({\n        enabled: Joi.boolean().default(true),\n        index: Joi.string().default('.marvel-es-data-1'),\n        index_prefix: Joi.string().default('.marvel-es-1-'),\n        missing_intervals: Joi.number().default(12),\n        max_bucket_size: Joi.number().default(10000),\n        min_interval_seconds: Joi.number().default(10),\n        report_stats: Joi.boolean().default(true),\n        google_tag_manager_id: Joi.string().default('GTM-WXMHGM'),\n        node_resolver: Joi.string().regex(/^(?:transport_address|name)$/).default('transport_address'),\n        stats_report_url: Joi.when('$dev', {\n          is: true,\n          then: Joi.string().default('../api/marvel/v1/phone-home'),\n          otherwise: Joi.string().default('https://marvel-stats.elasticsearch.com/appdata/marvelOpts')\n        }),\n        agent: Joi.object({\n          interval: Joi.string().regex(/[\\d\\.]+[yMwdhms]/).default('10s')\n        }).default()\n      }).default();\n    },\n\n    init: function (server, options) {\n      // Make sure the Marvel index is created and the Kibana version is supported\n      pluginSelfCheck(this, server);\n      // Require all the routes\n      requireAllAndApply(join(__dirname, 'server', 'routes', '**', '*.js'), server);\n    }\n  });\n};\n"
      ]
    },
    "mtime": 1468947861000
  },
  "{\"filename\":\"/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/require_all_and_apply.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "'use strict';\n\nvar glob = require('glob');\nvar Promise = require('bluebird');\n\nmodule.exports = function (path, server) {\n  return new Promise(function (resolve, reject) {\n    glob(path, { ignore: '**/__test__/**' }, function (err, files) {\n      if (err) return reject(err);\n      var modules = files.map(require);\n      modules.forEach(function (fn) {\n        fn(server);\n      });\n      resolve(modules);\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9UaGVvL0Rlc2t0b3AvTmVidWxhVGVtcC9OZWJ1bGEvZWxhc3RpY3NlYXJjaC9pbnN0YWxsZWRQbHVnaW5zL21hcnZlbC9zZXJ2ZXIvbGliL3JlcXVpcmVfYWxsX2FuZF9hcHBseS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLElBQUksSUFBSSxHQUFHLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQztBQUMzQixJQUFJLE9BQU8sR0FBRyxPQUFPLENBQUMsVUFBVSxDQUFDLENBQUM7O0FBRWxDLE1BQU0sQ0FBQyxPQUFPLEdBQUcsVUFBVSxJQUFJLEVBQUUsTUFBTSxFQUFFO0FBQ3ZDLFNBQU8sSUFBSSxPQUFPLENBQUMsVUFBVSxPQUFPLEVBQUUsTUFBTSxFQUFFO0FBQzVDLFFBQUksQ0FBQyxJQUFJLEVBQUUsRUFBRSxNQUFNLEVBQUUsZ0JBQWdCLEVBQUUsRUFBRSxVQUFVLEdBQUcsRUFBRSxLQUFLLEVBQUU7QUFDN0QsVUFBSSxHQUFHLEVBQUUsT0FBTyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUM7QUFDNUIsVUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsQ0FBQztBQUNqQyxhQUFPLENBQUMsT0FBTyxDQUFDLFVBQVUsRUFBRSxFQUFFO0FBQzVCLFVBQUUsQ0FBQyxNQUFNLENBQUMsQ0FBQztPQUNaLENBQUMsQ0FBQztBQUNILGFBQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQztLQUNsQixDQUFDLENBQUM7R0FDSixDQUFDLENBQUM7Q0FDSixDQUFDIiwiZmlsZSI6Ii9Vc2Vycy9UaGVvL0Rlc2t0b3AvTmVidWxhVGVtcC9OZWJ1bGEvZWxhc3RpY3NlYXJjaC9pbnN0YWxsZWRQbHVnaW5zL21hcnZlbC9zZXJ2ZXIvbGliL3JlcXVpcmVfYWxsX2FuZF9hcHBseS5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBnbG9iID0gcmVxdWlyZSgnZ2xvYicpO1xudmFyIFByb21pc2UgPSByZXF1aXJlKCdibHVlYmlyZCcpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChwYXRoLCBzZXJ2ZXIpIHtcbiAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICBnbG9iKHBhdGgsIHsgaWdub3JlOiAnKiovX190ZXN0X18vKionIH0sIGZ1bmN0aW9uIChlcnIsIGZpbGVzKSB7XG4gICAgICBpZiAoZXJyKSByZXR1cm4gcmVqZWN0KGVycik7XG4gICAgICB2YXIgbW9kdWxlcyA9IGZpbGVzLm1hcChyZXF1aXJlKTtcbiAgICAgIG1vZHVsZXMuZm9yRWFjaChmdW5jdGlvbiAoZm4pIHtcbiAgICAgICAgZm4oc2VydmVyKTtcbiAgICAgIH0pO1xuICAgICAgcmVzb2x2ZShtb2R1bGVzKTtcbiAgICB9KTtcbiAgfSk7XG59O1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/require_all_and_apply.js"
      ],
      "names": [],
      "mappings": ";;AAAA,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC3B,IAAI,OAAO,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;;AAElC,MAAM,CAAC,OAAO,GAAG,UAAU,IAAI,EAAE,MAAM,EAAE;AACvC,SAAO,IAAI,OAAO,CAAC,UAAU,OAAO,EAAE,MAAM,EAAE;AAC5C,QAAI,CAAC,IAAI,EAAE,EAAE,MAAM,EAAE,gBAAgB,EAAE,EAAE,UAAU,GAAG,EAAE,KAAK,EAAE;AAC7D,UAAI,GAAG,EAAE,OAAO,MAAM,CAAC,GAAG,CAAC,CAAC;AAC5B,UAAI,OAAO,GAAG,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;AACjC,aAAO,CAAC,OAAO,CAAC,UAAU,EAAE,EAAE;AAC5B,UAAE,CAAC,MAAM,CAAC,CAAC;OACZ,CAAC,CAAC;AACH,aAAO,CAAC,OAAO,CAAC,CAAC;KAClB,CAAC,CAAC;GACJ,CAAC,CAAC;CACJ,CAAC",
      "file": "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/require_all_and_apply.js",
      "sourcesContent": [
        "var glob = require('glob');\nvar Promise = require('bluebird');\n\nmodule.exports = function (path, server) {\n  return new Promise(function (resolve, reject) {\n    glob(path, { ignore: '**/__test__/**' }, function (err, files) {\n      if (err) return reject(err);\n      var modules = files.map(require);\n      modules.forEach(function (fn) {\n        fn(server);\n      });\n      resolve(modules);\n    });\n  });\n};\n"
      ]
    },
    "mtime": 1468947861000
  },
  "{\"filename\":\"/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/plugin_self_check.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "'use strict';\n\nvar createMarvelIndexPattern = require('./create_marvel_index_pattern');\nvar ensureVersions = require('./ensure_versions');\n\nmodule.exports = function pluginSelfCheck(plugin, server) {\n  plugin.status.yellow('Waiting for Elasticsearch');\n  var client = server.plugins.elasticsearch.client;\n\n  server.plugins.elasticsearch.status.on('green', function () {\n    // check if kibana is minimum supported version\n\n    var _ensureVersions = ensureVersions(plugin);\n\n    var isKibanaSupported = _ensureVersions.isKibanaSupported;\n    var kibanaVersion = _ensureVersions.kibanaVersion;\n    var marvelVersion = _ensureVersions.marvelVersion;\n\n    if (isKibanaSupported) {\n      // start setting up the Marvel index.\n      return createMarvelIndexPattern(server).then(function () {\n        return plugin.status.green('Marvel index ready');\n      });\n    } else if (!isKibanaSupported) {\n      plugin.status.red('Marvel version ' + marvelVersion + ' is not supported with Kibana ' + kibanaVersion);\n    }\n  });\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9UaGVvL0Rlc2t0b3AvTmVidWxhVGVtcC9OZWJ1bGEvZWxhc3RpY3NlYXJjaC9pbnN0YWxsZWRQbHVnaW5zL21hcnZlbC9zZXJ2ZXIvbGliL3BsdWdpbl9zZWxmX2NoZWNrLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBTSx3QkFBd0IsR0FBRyxPQUFPLENBQUMsK0JBQStCLENBQUMsQ0FBQztBQUMxRSxJQUFNLGNBQWMsR0FBRyxPQUFPLENBQUMsbUJBQW1CLENBQUMsQ0FBQzs7QUFFcEQsTUFBTSxDQUFDLE9BQU8sR0FBRyxTQUFTLGVBQWUsQ0FBQyxNQUFNLEVBQUUsTUFBTSxFQUFFO0FBQ3hELFFBQU0sQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLDJCQUEyQixDQUFDLENBQUM7QUFDbEQsTUFBSSxNQUFNLEdBQUcsTUFBTSxDQUFDLE9BQU8sQ0FBQyxhQUFhLENBQUMsTUFBTSxDQUFDOztBQUVqRCxRQUFNLENBQUMsT0FBTyxDQUFDLGFBQWEsQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLE9BQU8sRUFBRSxZQUFNOzs7MEJBTWhELGNBQWMsQ0FBQyxNQUFNLENBQUM7O1FBSHhCLGlCQUFpQixtQkFBakIsaUJBQWlCO1FBQ2pCLGFBQWEsbUJBQWIsYUFBYTtRQUNiLGFBQWEsbUJBQWIsYUFBYTs7QUFHZixRQUFJLGlCQUFpQixFQUFFOztBQUVyQixhQUFPLHdCQUF3QixDQUFDLE1BQU0sQ0FBQyxDQUN0QyxJQUFJLENBQUM7ZUFBTSxNQUFNLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxvQkFBb0IsQ0FBQztPQUFBLENBQUMsQ0FBQztLQUN4RCxNQUFNLElBQUksQ0FBQyxpQkFBaUIsRUFBRTtBQUM3QixZQUFNLENBQUMsTUFBTSxDQUFDLEdBQUcscUJBQW1CLGFBQWEsc0NBQWlDLGFBQWEsQ0FBRyxDQUFDO0tBQ3BHO0dBQ0YsQ0FBQyxDQUFDO0NBRUosQ0FBQyIsImZpbGUiOiIvVXNlcnMvVGhlby9EZXNrdG9wL05lYnVsYVRlbXAvTmVidWxhL2VsYXN0aWNzZWFyY2gvaW5zdGFsbGVkUGx1Z2lucy9tYXJ2ZWwvc2VydmVyL2xpYi9wbHVnaW5fc2VsZl9jaGVjay5qcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGNyZWF0ZU1hcnZlbEluZGV4UGF0dGVybiA9IHJlcXVpcmUoJy4vY3JlYXRlX21hcnZlbF9pbmRleF9wYXR0ZXJuJyk7XG5jb25zdCBlbnN1cmVWZXJzaW9ucyA9IHJlcXVpcmUoJy4vZW5zdXJlX3ZlcnNpb25zJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gcGx1Z2luU2VsZkNoZWNrKHBsdWdpbiwgc2VydmVyKSB7XG4gIHBsdWdpbi5zdGF0dXMueWVsbG93KCdXYWl0aW5nIGZvciBFbGFzdGljc2VhcmNoJyk7XG4gIHZhciBjbGllbnQgPSBzZXJ2ZXIucGx1Z2lucy5lbGFzdGljc2VhcmNoLmNsaWVudDtcblxuICBzZXJ2ZXIucGx1Z2lucy5lbGFzdGljc2VhcmNoLnN0YXR1cy5vbignZ3JlZW4nLCAoKSA9PiB7XG4gICAgLy8gY2hlY2sgaWYga2liYW5hIGlzIG1pbmltdW0gc3VwcG9ydGVkIHZlcnNpb25cbiAgICBjb25zdCB7XG4gICAgICBpc0tpYmFuYVN1cHBvcnRlZCxcbiAgICAgIGtpYmFuYVZlcnNpb24sXG4gICAgICBtYXJ2ZWxWZXJzaW9uXG4gICAgfSA9IGVuc3VyZVZlcnNpb25zKHBsdWdpbik7XG5cbiAgICBpZiAoaXNLaWJhbmFTdXBwb3J0ZWQpIHtcbiAgICAgIC8vIHN0YXJ0IHNldHRpbmcgdXAgdGhlIE1hcnZlbCBpbmRleC5cbiAgICAgIHJldHVybiBjcmVhdGVNYXJ2ZWxJbmRleFBhdHRlcm4oc2VydmVyKVxuICAgICAgLnRoZW4oKCkgPT4gcGx1Z2luLnN0YXR1cy5ncmVlbignTWFydmVsIGluZGV4IHJlYWR5JykpO1xuICAgIH0gZWxzZSBpZiAoIWlzS2liYW5hU3VwcG9ydGVkKSB7XG4gICAgICBwbHVnaW4uc3RhdHVzLnJlZChgTWFydmVsIHZlcnNpb24gJHttYXJ2ZWxWZXJzaW9ufSBpcyBub3Qgc3VwcG9ydGVkIHdpdGggS2liYW5hICR7a2liYW5hVmVyc2lvbn1gKTtcbiAgICB9XG4gIH0pO1xuXG59O1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/plugin_self_check.js"
      ],
      "names": [],
      "mappings": ";;AAAA,IAAM,wBAAwB,GAAG,OAAO,CAAC,+BAA+B,CAAC,CAAC;AAC1E,IAAM,cAAc,GAAG,OAAO,CAAC,mBAAmB,CAAC,CAAC;;AAEpD,MAAM,CAAC,OAAO,GAAG,SAAS,eAAe,CAAC,MAAM,EAAE,MAAM,EAAE;AACxD,QAAM,CAAC,MAAM,CAAC,MAAM,CAAC,2BAA2B,CAAC,CAAC;AAClD,MAAI,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,MAAM,CAAC;;AAEjD,QAAM,CAAC,OAAO,CAAC,aAAa,CAAC,MAAM,CAAC,EAAE,CAAC,OAAO,EAAE,YAAM;;;0BAMhD,cAAc,CAAC,MAAM,CAAC;;QAHxB,iBAAiB,mBAAjB,iBAAiB;QACjB,aAAa,mBAAb,aAAa;QACb,aAAa,mBAAb,aAAa;;AAGf,QAAI,iBAAiB,EAAE;;AAErB,aAAO,wBAAwB,CAAC,MAAM,CAAC,CACtC,IAAI,CAAC;eAAM,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,oBAAoB,CAAC;OAAA,CAAC,CAAC;KACxD,MAAM,IAAI,CAAC,iBAAiB,EAAE;AAC7B,YAAM,CAAC,MAAM,CAAC,GAAG,qBAAmB,aAAa,sCAAiC,aAAa,CAAG,CAAC;KACpG;GACF,CAAC,CAAC;CAEJ,CAAC",
      "file": "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/plugin_self_check.js",
      "sourcesContent": [
        "const createMarvelIndexPattern = require('./create_marvel_index_pattern');\nconst ensureVersions = require('./ensure_versions');\n\nmodule.exports = function pluginSelfCheck(plugin, server) {\n  plugin.status.yellow('Waiting for Elasticsearch');\n  var client = server.plugins.elasticsearch.client;\n\n  server.plugins.elasticsearch.status.on('green', () => {\n    // check if kibana is minimum supported version\n    const {\n      isKibanaSupported,\n      kibanaVersion,\n      marvelVersion\n    } = ensureVersions(plugin);\n\n    if (isKibanaSupported) {\n      // start setting up the Marvel index.\n      return createMarvelIndexPattern(server)\n      .then(() => plugin.status.green('Marvel index ready'));\n    } else if (!isKibanaSupported) {\n      plugin.status.red(`Marvel version ${marvelVersion} is not supported with Kibana ${kibanaVersion}`);\n    }\n  });\n\n};\n"
      ]
    },
    "mtime": 1468947861000
  },
  "{\"filename\":\"/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/create_marvel_index_pattern.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "'use strict';\n\nvar Promise = require('bluebird');\nvar marvelIndexPattern = require('./marvel_index_pattern.json');\nmodule.exports = function (server) {\n  var client = server.plugins.elasticsearch.client;\n  var config = server.config();\n  var index = config.get('kibana.index');\n  var marvelIndexPrefix = config.get('marvel.index_prefix');\n  var id = marvelIndexPrefix + '*';\n  var type = 'index-pattern';\n  return client.get({\n    index: index,\n    type: type,\n    id: id,\n    ignoreUnavailable: true\n  })['catch'](function (resp) {\n    if (resp.status !== 404) return Promise.reject(resp);\n    // Create an index pattern for Marvel indices.\n    return client.index({\n      index: index,\n      type: type,\n      id: id,\n      body: marvelIndexPattern\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9UaGVvL0Rlc2t0b3AvTmVidWxhVGVtcC9OZWJ1bGEvZWxhc3RpY3NlYXJjaC9pbnN0YWxsZWRQbHVnaW5zL21hcnZlbC9zZXJ2ZXIvbGliL2NyZWF0ZV9tYXJ2ZWxfaW5kZXhfcGF0dGVybi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLElBQUksT0FBTyxHQUFHLE9BQU8sQ0FBQyxVQUFVLENBQUMsQ0FBQztBQUNsQyxJQUFJLGtCQUFrQixHQUFHLE9BQU8sQ0FBQyw2QkFBNkIsQ0FBQyxDQUFDO0FBQ2hFLE1BQU0sQ0FBQyxPQUFPLEdBQUcsVUFBVSxNQUFNLEVBQUU7QUFDakMsTUFBSSxNQUFNLEdBQUcsTUFBTSxDQUFDLE9BQU8sQ0FBQyxhQUFhLENBQUMsTUFBTSxDQUFDO0FBQ2pELE1BQUksTUFBTSxHQUFHLE1BQU0sQ0FBQyxNQUFNLEVBQUUsQ0FBQztBQUM3QixNQUFJLEtBQUssR0FBRyxNQUFNLENBQUMsR0FBRyxDQUFDLGNBQWMsQ0FBQyxDQUFDO0FBQ3ZDLE1BQUksaUJBQWlCLEdBQUcsTUFBTSxDQUFDLEdBQUcsQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDO0FBQzFELE1BQUksRUFBRSxHQUFJLGlCQUFpQixHQUFHLEdBQUcsQ0FBQztBQUNsQyxNQUFJLElBQUksR0FBRyxlQUFlLENBQUM7QUFDM0IsU0FBTyxNQUFNLENBQUMsR0FBRyxDQUFDO0FBQ2hCLFNBQUssRUFBRSxLQUFLO0FBQ1osUUFBSSxFQUFFLElBQUk7QUFDVixNQUFFLEVBQUUsRUFBRTtBQUNOLHFCQUFpQixFQUFFLElBQUk7R0FDeEIsQ0FBQyxTQUNJLENBQUMsVUFBVSxJQUFJLEVBQUU7QUFDckIsUUFBSSxJQUFJLENBQUMsTUFBTSxLQUFLLEdBQUcsRUFBRSxPQUFPLE9BQU8sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUM7O0FBRXJELFdBQU8sTUFBTSxDQUFDLEtBQUssQ0FBQztBQUNsQixXQUFLLEVBQUUsS0FBSztBQUNaLFVBQUksRUFBRSxJQUFJO0FBQ1YsUUFBRSxFQUFFLEVBQUU7QUFDTixVQUFJLEVBQUUsa0JBQWtCO0tBQ3pCLENBQUMsQ0FBQztHQUNKLENBQUMsQ0FBQztDQUNKLENBQUMiLCJmaWxlIjoiL1VzZXJzL1RoZW8vRGVza3RvcC9OZWJ1bGFUZW1wL05lYnVsYS9lbGFzdGljc2VhcmNoL2luc3RhbGxlZFBsdWdpbnMvbWFydmVsL3NlcnZlci9saWIvY3JlYXRlX21hcnZlbF9pbmRleF9wYXR0ZXJuLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIFByb21pc2UgPSByZXF1aXJlKCdibHVlYmlyZCcpO1xudmFyIG1hcnZlbEluZGV4UGF0dGVybiA9IHJlcXVpcmUoJy4vbWFydmVsX2luZGV4X3BhdHRlcm4uanNvbicpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoc2VydmVyKSB7XG4gIHZhciBjbGllbnQgPSBzZXJ2ZXIucGx1Z2lucy5lbGFzdGljc2VhcmNoLmNsaWVudDtcbiAgdmFyIGNvbmZpZyA9IHNlcnZlci5jb25maWcoKTtcbiAgdmFyIGluZGV4ID0gY29uZmlnLmdldCgna2liYW5hLmluZGV4Jyk7XG4gIHZhciBtYXJ2ZWxJbmRleFByZWZpeCA9IGNvbmZpZy5nZXQoJ21hcnZlbC5pbmRleF9wcmVmaXgnKTtcbiAgdmFyIGlkID0gIG1hcnZlbEluZGV4UHJlZml4ICsgJyonO1xuICB2YXIgdHlwZSA9ICdpbmRleC1wYXR0ZXJuJztcbiAgcmV0dXJuIGNsaWVudC5nZXQoe1xuICAgIGluZGV4OiBpbmRleCxcbiAgICB0eXBlOiB0eXBlLFxuICAgIGlkOiBpZCxcbiAgICBpZ25vcmVVbmF2YWlsYWJsZTogdHJ1ZVxuICB9KVxuICAuY2F0Y2goZnVuY3Rpb24gKHJlc3ApIHtcbiAgICBpZiAocmVzcC5zdGF0dXMgIT09IDQwNCkgcmV0dXJuIFByb21pc2UucmVqZWN0KHJlc3ApO1xuICAgIC8vIENyZWF0ZSBhbiBpbmRleCBwYXR0ZXJuIGZvciBNYXJ2ZWwgaW5kaWNlcy5cbiAgICByZXR1cm4gY2xpZW50LmluZGV4KHtcbiAgICAgIGluZGV4OiBpbmRleCxcbiAgICAgIHR5cGU6IHR5cGUsXG4gICAgICBpZDogaWQsXG4gICAgICBib2R5OiBtYXJ2ZWxJbmRleFBhdHRlcm5cbiAgICB9KTtcbiAgfSk7XG59O1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/create_marvel_index_pattern.js"
      ],
      "names": [],
      "mappings": ";;AAAA,IAAI,OAAO,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AAClC,IAAI,kBAAkB,GAAG,OAAO,CAAC,6BAA6B,CAAC,CAAC;AAChE,MAAM,CAAC,OAAO,GAAG,UAAU,MAAM,EAAE;AACjC,MAAI,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,MAAM,CAAC;AACjD,MAAI,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;AAC7B,MAAI,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;AACvC,MAAI,iBAAiB,GAAG,MAAM,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;AAC1D,MAAI,EAAE,GAAI,iBAAiB,GAAG,GAAG,CAAC;AAClC,MAAI,IAAI,GAAG,eAAe,CAAC;AAC3B,SAAO,MAAM,CAAC,GAAG,CAAC;AAChB,SAAK,EAAE,KAAK;AACZ,QAAI,EAAE,IAAI;AACV,MAAE,EAAE,EAAE;AACN,qBAAiB,EAAE,IAAI;GACxB,CAAC,SACI,CAAC,UAAU,IAAI,EAAE;AACrB,QAAI,IAAI,CAAC,MAAM,KAAK,GAAG,EAAE,OAAO,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;;AAErD,WAAO,MAAM,CAAC,KAAK,CAAC;AAClB,WAAK,EAAE,KAAK;AACZ,UAAI,EAAE,IAAI;AACV,QAAE,EAAE,EAAE;AACN,UAAI,EAAE,kBAAkB;KACzB,CAAC,CAAC;GACJ,CAAC,CAAC;CACJ,CAAC",
      "file": "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/create_marvel_index_pattern.js",
      "sourcesContent": [
        "var Promise = require('bluebird');\nvar marvelIndexPattern = require('./marvel_index_pattern.json');\nmodule.exports = function (server) {\n  var client = server.plugins.elasticsearch.client;\n  var config = server.config();\n  var index = config.get('kibana.index');\n  var marvelIndexPrefix = config.get('marvel.index_prefix');\n  var id =  marvelIndexPrefix + '*';\n  var type = 'index-pattern';\n  return client.get({\n    index: index,\n    type: type,\n    id: id,\n    ignoreUnavailable: true\n  })\n  .catch(function (resp) {\n    if (resp.status !== 404) return Promise.reject(resp);\n    // Create an index pattern for Marvel indices.\n    return client.index({\n      index: index,\n      type: type,\n      id: id,\n      body: marvelIndexPattern\n    });\n  });\n};\n"
      ]
    },
    "mtime": 1468947861000
  },
  "{\"filename\":\"/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/ensure_versions.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [
          {
            "source": "lodash",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "_"
              }
            ]
          },
          {
            "source": "semver",
            "imported": [
              "satisfies"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "satisfies",
                "local": "satisfies"
              }
            ]
          },
          {
            "source": "../../package.json",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "pkg"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": [
        "interop-require-default"
      ]
    },
    "ignored": false,
    "code": "/*\n * Ensure version compatibility with Kibana\n * Marvel 2.2.0 should work with Kibana > v4.4.0\n * https://www.elastic.co/guide/en/marvel/current/installing-marvel.html\n * Semver tester: http://jubianchi.github.io/semver-check/\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _semver = require('semver');\n\nvar _packageJson = require('../../package.json');\n\nvar _packageJson2 = _interopRequireDefault(_packageJson);\n\nvar kbnVersionRanges = {\n  '2.2.0': '~4.4.0',\n  '2.2.1': '~4.4.0',\n  '2.2.2': '~4.4.0',\n  '2.3.0': '~4.5.0',\n  '2.3.1': '~4.5.0',\n  '2.3.2': '~4.5.0',\n  '2.3.3': '~4.5.0',\n  '2.3.4': '~4.5.0'\n};\n\nfunction cleanVersionString(string) {\n  if (string) {\n    // get just the number.number.number portion (filter out '-snapshot')\n    var matches = string.match(/^\\d+\\.\\d+.\\d+/);\n    if (matches) {\n      // escape() because the string could be rendered in UI\n      return _lodash2['default'].escape(matches[0]);\n    }\n  }\n\n  return '';\n}\n\nfunction ensureVersions(plugin) {\n\n  var kibanaVersion = cleanVersionString(_lodash2['default'].get(plugin, 'kbnServer.version'));\n  var marvelVersion = cleanVersionString(_packageJson2['default'].version);\n  var returnData = { kibanaVersion: kibanaVersion, marvelVersion: marvelVersion };\n\n  // version support check can throw a TypeError if kibanaVersion is invalid\n  try {\n    returnData.isKibanaSupported = (0, _semver.satisfies)(kibanaVersion, kbnVersionRanges[marvelVersion]);\n  } catch (e) {\n    returnData.isKibanaSupported = false;\n  }\n\n  return returnData;\n}\n\nexports['default'] = ensureVersions;\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9UaGVvL0Rlc2t0b3AvTmVidWxhVGVtcC9OZWJ1bGEvZWxhc3RpY3NlYXJjaC9pbnN0YWxsZWRQbHVnaW5zL21hcnZlbC9zZXJ2ZXIvbGliL2Vuc3VyZV92ZXJzaW9ucy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztzQkFNYyxRQUFROzs7O3NCQUNJLFFBQVE7OzJCQUNsQixvQkFBb0I7Ozs7QUFFcEMsSUFBTSxnQkFBZ0IsR0FBRztBQUN2QixTQUFPLEVBQUUsUUFBUTtBQUNqQixTQUFPLEVBQUUsUUFBUTtBQUNqQixTQUFPLEVBQUUsUUFBUTtBQUNqQixTQUFPLEVBQUUsUUFBUTtBQUNqQixTQUFPLEVBQUUsUUFBUTtBQUNqQixTQUFPLEVBQUUsUUFBUTtBQUNqQixTQUFPLEVBQUUsUUFBUTtBQUNqQixTQUFPLEVBQUUsUUFBUTtDQUNsQixDQUFDOztBQUVGLFNBQVMsa0JBQWtCLENBQUMsTUFBTSxFQUFFO0FBQ2xDLE1BQUksTUFBTSxFQUFFOztBQUVWLFFBQU0sT0FBTyxHQUFHLE1BQU0sQ0FBQyxLQUFLLENBQUMsZUFBZSxDQUFDLENBQUM7QUFDOUMsUUFBSSxPQUFPLEVBQUU7O0FBRVgsYUFBTyxvQkFBRSxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7S0FDN0I7R0FDRjs7QUFFRCxTQUFPLEVBQUUsQ0FBQztDQUNYOztBQUVELFNBQVMsY0FBYyxDQUFDLE1BQU0sRUFBRTs7QUFFOUIsTUFBTSxhQUFhLEdBQUcsa0JBQWtCLENBQUMsb0JBQUUsR0FBRyxDQUFDLE1BQU0sRUFBRSxtQkFBbUIsQ0FBQyxDQUFDLENBQUM7QUFDN0UsTUFBTSxhQUFhLEdBQUcsa0JBQWtCLENBQUMseUJBQUksT0FBTyxDQUFDLENBQUM7QUFDdEQsTUFBTSxVQUFVLEdBQUcsRUFBRSxhQUFhLEVBQWIsYUFBYSxFQUFFLGFBQWEsRUFBYixhQUFhLEVBQUUsQ0FBQzs7O0FBR3BELE1BQUk7QUFDRixjQUFVLENBQUMsaUJBQWlCLEdBQUcsdUJBQVUsYUFBYSxFQUFFLGdCQUFnQixDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUM7R0FDMUYsQ0FBQyxPQUFPLENBQUMsRUFBRTtBQUNWLGNBQVUsQ0FBQyxpQkFBaUIsR0FBRyxLQUFLLENBQUM7R0FDdEM7O0FBRUQsU0FBTyxVQUFVLENBQUM7Q0FFbkI7O3FCQUVjLGNBQWMiLCJmaWxlIjoiL1VzZXJzL1RoZW8vRGVza3RvcC9OZWJ1bGFUZW1wL05lYnVsYS9lbGFzdGljc2VhcmNoL2luc3RhbGxlZFBsdWdpbnMvbWFydmVsL3NlcnZlci9saWIvZW5zdXJlX3ZlcnNpb25zLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIEVuc3VyZSB2ZXJzaW9uIGNvbXBhdGliaWxpdHkgd2l0aCBLaWJhbmFcbiAqIE1hcnZlbCAyLjIuMCBzaG91bGQgd29yayB3aXRoIEtpYmFuYSA+IHY0LjQuMFxuICogaHR0cHM6Ly93d3cuZWxhc3RpYy5jby9ndWlkZS9lbi9tYXJ2ZWwvY3VycmVudC9pbnN0YWxsaW5nLW1hcnZlbC5odG1sXG4gKiBTZW12ZXIgdGVzdGVyOiBodHRwOi8vanViaWFuY2hpLmdpdGh1Yi5pby9zZW12ZXItY2hlY2svXG4gKi9cbmltcG9ydCBfIGZyb20gJ2xvZGFzaCc7XG5pbXBvcnQgeyBzYXRpc2ZpZXMgfSBmcm9tICdzZW12ZXInO1xuaW1wb3J0IHBrZyBmcm9tICcuLi8uLi9wYWNrYWdlLmpzb24nO1xuXG5jb25zdCBrYm5WZXJzaW9uUmFuZ2VzID0ge1xuICAnMi4yLjAnOiAnfjQuNC4wJyxcbiAgJzIuMi4xJzogJ340LjQuMCcsXG4gICcyLjIuMic6ICd+NC40LjAnLFxuICAnMi4zLjAnOiAnfjQuNS4wJyxcbiAgJzIuMy4xJzogJ340LjUuMCcsXG4gICcyLjMuMic6ICd+NC41LjAnLFxuICAnMi4zLjMnOiAnfjQuNS4wJyxcbiAgJzIuMy40JzogJ340LjUuMCdcbn07XG5cbmZ1bmN0aW9uIGNsZWFuVmVyc2lvblN0cmluZyhzdHJpbmcpIHtcbiAgaWYgKHN0cmluZykge1xuICAgIC8vIGdldCBqdXN0IHRoZSBudW1iZXIubnVtYmVyLm51bWJlciBwb3J0aW9uIChmaWx0ZXIgb3V0ICctc25hcHNob3QnKVxuICAgIGNvbnN0IG1hdGNoZXMgPSBzdHJpbmcubWF0Y2goL15cXGQrXFwuXFxkKy5cXGQrLyk7XG4gICAgaWYgKG1hdGNoZXMpIHtcbiAgICAgIC8vIGVzY2FwZSgpIGJlY2F1c2UgdGhlIHN0cmluZyBjb3VsZCBiZSByZW5kZXJlZCBpbiBVSVxuICAgICAgcmV0dXJuIF8uZXNjYXBlKG1hdGNoZXNbMF0pO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiAnJztcbn1cblxuZnVuY3Rpb24gZW5zdXJlVmVyc2lvbnMocGx1Z2luKSB7XG5cbiAgY29uc3Qga2liYW5hVmVyc2lvbiA9IGNsZWFuVmVyc2lvblN0cmluZyhfLmdldChwbHVnaW4sICdrYm5TZXJ2ZXIudmVyc2lvbicpKTtcbiAgY29uc3QgbWFydmVsVmVyc2lvbiA9IGNsZWFuVmVyc2lvblN0cmluZyhwa2cudmVyc2lvbik7XG4gIGNvbnN0IHJldHVybkRhdGEgPSB7IGtpYmFuYVZlcnNpb24sIG1hcnZlbFZlcnNpb24gfTtcblxuICAvLyB2ZXJzaW9uIHN1cHBvcnQgY2hlY2sgY2FuIHRocm93IGEgVHlwZUVycm9yIGlmIGtpYmFuYVZlcnNpb24gaXMgaW52YWxpZFxuICB0cnkge1xuICAgIHJldHVybkRhdGEuaXNLaWJhbmFTdXBwb3J0ZWQgPSBzYXRpc2ZpZXMoa2liYW5hVmVyc2lvbiwga2JuVmVyc2lvblJhbmdlc1ttYXJ2ZWxWZXJzaW9uXSk7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICByZXR1cm5EYXRhLmlzS2liYW5hU3VwcG9ydGVkID0gZmFsc2U7XG4gIH1cblxuICByZXR1cm4gcmV0dXJuRGF0YTtcblxufVxuXG5leHBvcnQgZGVmYXVsdCBlbnN1cmVWZXJzaW9ucztcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/ensure_versions.js"
      ],
      "names": [],
      "mappings": ";;;;;;;;;;;;;;sBAMc,QAAQ;;;;sBACI,QAAQ;;2BAClB,oBAAoB;;;;AAEpC,IAAM,gBAAgB,GAAG;AACvB,SAAO,EAAE,QAAQ;AACjB,SAAO,EAAE,QAAQ;AACjB,SAAO,EAAE,QAAQ;AACjB,SAAO,EAAE,QAAQ;AACjB,SAAO,EAAE,QAAQ;AACjB,SAAO,EAAE,QAAQ;AACjB,SAAO,EAAE,QAAQ;AACjB,SAAO,EAAE,QAAQ;CAClB,CAAC;;AAEF,SAAS,kBAAkB,CAAC,MAAM,EAAE;AAClC,MAAI,MAAM,EAAE;;AAEV,QAAM,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;AAC9C,QAAI,OAAO,EAAE;;AAEX,aAAO,oBAAE,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;KAC7B;GACF;;AAED,SAAO,EAAE,CAAC;CACX;;AAED,SAAS,cAAc,CAAC,MAAM,EAAE;;AAE9B,MAAM,aAAa,GAAG,kBAAkB,CAAC,oBAAE,GAAG,CAAC,MAAM,EAAE,mBAAmB,CAAC,CAAC,CAAC;AAC7E,MAAM,aAAa,GAAG,kBAAkB,CAAC,yBAAI,OAAO,CAAC,CAAC;AACtD,MAAM,UAAU,GAAG,EAAE,aAAa,EAAb,aAAa,EAAE,aAAa,EAAb,aAAa,EAAE,CAAC;;;AAGpD,MAAI;AACF,cAAU,CAAC,iBAAiB,GAAG,uBAAU,aAAa,EAAE,gBAAgB,CAAC,aAAa,CAAC,CAAC,CAAC;GAC1F,CAAC,OAAO,CAAC,EAAE;AACV,cAAU,CAAC,iBAAiB,GAAG,KAAK,CAAC;GACtC;;AAED,SAAO,UAAU,CAAC;CAEnB;;qBAEc,cAAc",
      "file": "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/ensure_versions.js",
      "sourcesContent": [
        "/*\n * Ensure version compatibility with Kibana\n * Marvel 2.2.0 should work with Kibana > v4.4.0\n * https://www.elastic.co/guide/en/marvel/current/installing-marvel.html\n * Semver tester: http://jubianchi.github.io/semver-check/\n */\nimport _ from 'lodash';\nimport { satisfies } from 'semver';\nimport pkg from '../../package.json';\n\nconst kbnVersionRanges = {\n  '2.2.0': '~4.4.0',\n  '2.2.1': '~4.4.0',\n  '2.2.2': '~4.4.0',\n  '2.3.0': '~4.5.0',\n  '2.3.1': '~4.5.0',\n  '2.3.2': '~4.5.0',\n  '2.3.3': '~4.5.0',\n  '2.3.4': '~4.5.0'\n};\n\nfunction cleanVersionString(string) {\n  if (string) {\n    // get just the number.number.number portion (filter out '-snapshot')\n    const matches = string.match(/^\\d+\\.\\d+.\\d+/);\n    if (matches) {\n      // escape() because the string could be rendered in UI\n      return _.escape(matches[0]);\n    }\n  }\n\n  return '';\n}\n\nfunction ensureVersions(plugin) {\n\n  const kibanaVersion = cleanVersionString(_.get(plugin, 'kbnServer.version'));\n  const marvelVersion = cleanVersionString(pkg.version);\n  const returnData = { kibanaVersion, marvelVersion };\n\n  // version support check can throw a TypeError if kibanaVersion is invalid\n  try {\n    returnData.isKibanaSupported = satisfies(kibanaVersion, kbnVersionRanges[marvelVersion]);\n  } catch (e) {\n    returnData.isKibanaSupported = false;\n  }\n\n  return returnData;\n\n}\n\nexport default ensureVersions;\n"
      ]
    },
    "mtime": 1468947861000
  },
  "{\"filename\":\"/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/sense/index.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [
          {
            "source": "./server/proxy_config_collection",
            "imported": [
              "ProxyConfigCollection"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "ProxyConfigCollection",
                "local": "ProxyConfigCollection"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": [
        "extends"
      ]
    },
    "ignored": false,
    "code": "'use strict';\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _serverProxy_config_collection = require('./server/proxy_config_collection');\n\nmodule.exports = function (kibana) {\n  var _require = require('path');\n\n  var resolve = _require.resolve;\n  var join = _require.join;\n  var sep = _require.sep;\n\n  var Joi = require('joi');\n  var Boom = require('boom');\n  var modules = resolve(__dirname, 'public/webpackShims/');\n  var src = resolve(__dirname, 'public/src/');\n\n  var _require2 = require('fs');\n\n  var existsSync = _require2.existsSync;\n\n  var _require3 = require('lodash');\n\n  var startsWith = _require3.startsWith;\n  var endsWith = _require3.endsWith;\n\n  var apps = [{\n    title: 'Sense',\n    description: 'JSON aware developer\\'s interface to ElasticSearch',\n    icon: 'plugins/sense/bonsai.png',\n    main: 'plugins/sense/sense',\n    autoload: kibana.autoload.styles,\n    injectVars: function injectVars(server, options) {\n      return options;\n    }\n  }];\n\n  if (existsSync(resolve(__dirname, 'public/tests'))) {\n    apps.push({\n      title: 'Sense Tests',\n      id: 'sense-tests',\n      main: 'plugins/sense/tests',\n      hidden: true\n      //listed: false // uncomment after https://github.com/elastic/kibana/pull/4755\n    });\n  }\n\n  return new kibana.Plugin({\n    id: 'sense',\n\n    config: function config(Joi) {\n      return Joi.object({\n        enabled: Joi.boolean()['default'](true),\n        defaultServerUrl: Joi.string()['default']('http://localhost:9200'),\n        proxyFilter: Joi.array().items(Joi.string()).single()['default'](['.*']),\n        ssl: Joi.object({\n          verify: Joi.boolean()\n        })['default'](),\n        proxyConfig: Joi.array().items(Joi.object().keys({\n          match: Joi.object().keys({\n            protocol: Joi.string()['default']('*'),\n            host: Joi.string()['default']('*'),\n            port: Joi.string()['default']('*'),\n            path: Joi.string()['default']('*')\n          }),\n\n          timeout: Joi.number(),\n          ssl: Joi.object().keys({\n            verify: Joi.boolean(),\n            ca: Joi.array().single().items(Joi.string()),\n            cert: Joi.string(),\n            key: Joi.string()\n          })['default']()\n        }))['default']([{\n          match: {\n            protocol: '*',\n            host: '*',\n            port: '*',\n            path: '*'\n          },\n\n          timeout: 180000,\n          ssl: {\n            verify: true\n          }\n        }])\n      })['default']();\n    },\n\n    init: function init(server, options) {\n      var filters = options.proxyFilter.map(function (str) {\n        return new RegExp(str);\n      });\n\n      if (options.ssl && options.ssl.verify) {\n        throw new Error('sense.ssl.version is no longer supported.');\n      }\n\n      var proxyConfigCollection = new _serverProxy_config_collection.ProxyConfigCollection(options.proxyConfig);\n      var proxyRouteConfig = {\n        validate: {\n          query: Joi.object().keys({\n            uri: Joi.string().uri({\n              allowRelative: false,\n              shema: ['http:', 'https:']\n            })\n          }).unknown(true)\n        },\n\n        pre: [function filterUri(req, reply) {\n          var uri = req.query.uri;\n\n          if (!filters.some(function (re) {\n            return re.test(uri);\n          })) {\n            var err = Boom.forbidden();\n            err.output.payload = \"Error connecting to '\" + uri + \"':\\n\\nUnable to send requests to that url.\";\n            err.output.headers['content-type'] = 'text/plain';\n            reply(err);\n          } else {\n            reply();\n          }\n        }],\n\n        handler: function handler(req, reply) {\n          var uri = req.query.uri;\n\n          reply.proxy(_extends({\n            uri: uri,\n            xforward: true,\n            passThrough: true,\n            onResponse: function onResponse(err, res, request, reply, settings, ttl) {\n              if (err != null) {\n                reply(\"Error connecting to '\" + request.query.uri + \"':\\n\\n\" + err.message).type(\"text/plain\").statusCode = 502;\n              } else {\n                reply(null, res);\n              }\n            }\n\n          }, proxyConfigCollection.configForUri(uri)));\n        }\n      };\n\n      server.route({\n        path: '/api/sense/proxy',\n        method: '*',\n        config: _extends({}, proxyRouteConfig, {\n\n          payload: {\n            output: 'stream',\n            parse: false\n          }\n        })\n      });\n\n      server.route({\n        path: '/api/sense/proxy',\n        method: 'GET',\n        config: _extends({}, proxyRouteConfig)\n      });\n\n      server.route({\n        path: '/api/sense/api_server',\n        method: ['GET', 'POST'],\n        handler: function handler(req, reply) {\n          var server = require('./api_server/server');\n          var _req$query = req.query;\n          var sense_version = _req$query.sense_version;\n          var apis = _req$query.apis;\n\n          if (!apis) {\n            reply(Boom.badRequest('\"apis\" is a required param.'));\n            return;\n          }\n\n          return server.resolveApi(sense_version, apis.split(\",\"), reply);\n        }\n      });\n\n      var testApp = kibana.uiExports.apps.hidden.byId['sense-tests'];\n      if (testApp) {\n        server.route({\n          path: '/app/sense-tests',\n          method: 'GET',\n          handler: function handler(req, reply) {\n            return reply.renderApp(testApp);\n          }\n        });\n      }\n    },\n\n    uiExports: {\n      apps: apps,\n\n      noParse: [join(modules, 'ace' + sep), join(modules, 'moment_src/moment' + sep), join(src, 'sense_editor/mode/worker.js')]\n    }\n  });\n};\n//# sourceMappingURL=data:application/json;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/sense/index.js"
      ],
      "names": [],
      "mappings": "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",
      "file": "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/sense/index.js",
      "sourcesContent": [
        "import { ProxyConfigCollection } from './server/proxy_config_collection';\n\nmodule.exports = function (kibana) {\n  let { resolve, join, sep } = require('path');\n  let Joi = require('joi');\n  let Boom = require('boom');\n  let modules = resolve(__dirname, 'public/webpackShims/');\n  let src = resolve(__dirname, 'public/src/');\n  let { existsSync } = require('fs');\n  const { startsWith, endsWith } = require('lodash');\n\n  const apps = [\n    {\n      title: 'Sense',\n      description: 'JSON aware developer\\'s interface to ElasticSearch',\n      icon: 'plugins/sense/bonsai.png',\n      main: 'plugins/sense/sense',\n      autoload: kibana.autoload.styles,\n      injectVars: function (server, options) {\n        return options;\n      }\n    }\n  ];\n\n  if (existsSync(resolve(__dirname, 'public/tests'))) {\n    apps.push({\n      title: 'Sense Tests',\n      id: 'sense-tests',\n      main: 'plugins/sense/tests',\n      hidden: true\n      //listed: false // uncomment after https://github.com/elastic/kibana/pull/4755\n    });\n  }\n\n  return new kibana.Plugin({\n    id: 'sense',\n\n    config: function (Joi) {\n      return Joi.object({\n        enabled: Joi.boolean().default(true),\n        defaultServerUrl: Joi.string().default('http://localhost:9200'),\n        proxyFilter: Joi.array().items(Joi.string()).single().default(['.*']),\n        ssl: Joi.object({\n          verify: Joi.boolean(),\n        }).default(),\n        proxyConfig: Joi.array().items(\n          Joi.object().keys({\n            match: Joi.object().keys({\n              protocol: Joi.string().default('*'),\n              host: Joi.string().default('*'),\n              port: Joi.string().default('*'),\n              path: Joi.string().default('*')\n            }),\n\n            timeout: Joi.number(),\n            ssl: Joi.object().keys({\n              verify: Joi.boolean(),\n              ca: Joi.array().single().items(Joi.string()),\n              cert: Joi.string(),\n              key: Joi.string()\n            }).default()\n          })\n        ).default([\n          {\n            match: {\n              protocol: '*',\n              host: '*',\n              port: '*',\n              path: '*'\n            },\n\n            timeout: 180000,\n            ssl: {\n              verify: true\n            }\n          }\n        ])\n      }).default();\n    },\n\n    init: function (server, options) {\n      const filters = options.proxyFilter.map(str => new RegExp(str));\n\n      if (options.ssl && options.ssl.verify) {\n        throw new Error('sense.ssl.version is no longer supported.');\n      }\n\n      const proxyConfigCollection = new ProxyConfigCollection(options.proxyConfig);\n      const proxyRouteConfig = {\n        validate: {\n          query: Joi.object().keys({\n            uri: Joi.string().uri({\n              allowRelative: false,\n              shema: ['http:', 'https:'],\n            }),\n          }).unknown(true),\n        },\n\n        pre: [\n          function filterUri(req, reply) {\n            const { uri } = req.query;\n\n            if (!filters.some(re => re.test(uri))) {\n              const err = Boom.forbidden();\n              err.output.payload = \"Error connecting to '\" + uri + \"':\\n\\nUnable to send requests to that url.\";\n              err.output.headers['content-type'] = 'text/plain';\n              reply(err);\n            } else {\n              reply();\n            }\n          }\n        ],\n\n        handler(req, reply) {\n          const { uri } = req.query;\n\n          reply.proxy({\n            uri,\n            xforward: true,\n            passThrough: true,\n            onResponse(err, res, request, reply, settings, ttl) {\n              if (err != null) {\n                reply(\"Error connecting to '\" + request.query.uri + \"':\\n\\n\" + err.message).type(\"text/plain\").statusCode = 502;\n              } else {\n                reply(null, res);\n              }\n            },\n\n            ...proxyConfigCollection.configForUri(uri)\n          })\n        }\n      };\n\n      server.route({\n        path: '/api/sense/proxy',\n        method: '*',\n        config: {\n          ...proxyRouteConfig,\n\n          payload: {\n            output: 'stream',\n            parse: false\n          },\n        }\n      });\n\n      server.route({\n        path: '/api/sense/proxy',\n        method: 'GET',\n        config: {\n          ...proxyRouteConfig\n        }\n      })\n\n      server.route({\n        path: '/api/sense/api_server',\n        method: ['GET', 'POST'],\n        handler: function (req, reply) {\n          let server = require('./api_server/server');\n          let {sense_version, apis} = req.query;\n          if (!apis) {\n            reply(Boom.badRequest('\"apis\" is a required param.'));\n            return;\n          }\n\n          return server.resolveApi(sense_version, apis.split(\",\"), reply);\n        }\n      });\n\n      const testApp = kibana.uiExports.apps.hidden.byId['sense-tests'];\n      if (testApp) {\n        server.route({\n          path: '/app/sense-tests',\n          method: 'GET',\n          handler: function (req, reply) {\n            return reply.renderApp(testApp);\n          }\n        });\n      }\n    },\n\n    uiExports: {\n      apps: apps,\n\n      noParse: [\n        join(modules, 'ace' + sep),\n        join(modules, 'moment_src/moment' + sep),\n        join(src, 'sense_editor/mode/worker.js')\n      ]\n    }\n  })\n};\n"
      ]
    },
    "mtime": 1468947861000
  },
  "{\"filename\":\"/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/sense/server/proxy_config_collection.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [
          {
            "source": "lodash",
            "imported": [
              "defaultsDeep"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "defaultsDeep",
                "local": "defaultsDeep"
              }
            ]
          },
          {
            "source": "./proxy_config",
            "imported": [
              "ProxyConfig"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "ProxyConfig",
                "local": "ProxyConfig"
              }
            ]
          },
          {
            "source": "url",
            "imported": [
              "parse"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "parse",
                "local": "parseUrl"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "ProxyConfigCollection"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "ProxyConfigCollection",
              "exported": "ProxyConfigCollection"
            }
          ]
        }
      },
      "usedHelpers": [
        "create-class",
        "class-call-check",
        "to-consumable-array"
      ]
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i]; return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _lodash = require('lodash');\n\nvar _proxy_config = require('./proxy_config');\n\nvar _url = require('url');\n\nvar ProxyConfigCollection = (function () {\n  function ProxyConfigCollection() {\n    var configs = arguments.length <= 0 || arguments[0] === undefined ? [] : arguments[0];\n\n    _classCallCheck(this, ProxyConfigCollection);\n\n    this.configs = configs.map(function (settings) {\n      return new _proxy_config.ProxyConfig(settings);\n    });\n  }\n\n  _createClass(ProxyConfigCollection, [{\n    key: 'configForUri',\n    value: function configForUri(uri) {\n      var parsedUri = (0, _url.parse)(uri);\n      var settings = this.configs.map(function (config) {\n        return config.getForParsedUri(parsedUri);\n      });\n      return _lodash.defaultsDeep.apply(undefined, [{}].concat(_toConsumableArray(settings)));\n    }\n  }]);\n\n  return ProxyConfigCollection;\n})();\n\nexports.ProxyConfigCollection = ProxyConfigCollection;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9UaGVvL0Rlc2t0b3AvTmVidWxhVGVtcC9OZWJ1bGEvZWxhc3RpY3NlYXJjaC9pbnN0YWxsZWRQbHVnaW5zL3NlbnNlL3NlcnZlci9wcm94eV9jb25maWdfY29sbGVjdGlvbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7c0JBQTZCLFFBQVE7OzRCQUVULGdCQUFnQjs7bUJBQ1YsS0FBSzs7SUFHMUIscUJBQXFCO0FBQ3JCLFdBREEscUJBQXFCLEdBQ047UUFBZCxPQUFPLHlEQUFHLEVBQUU7OzBCQURiLHFCQUFxQjs7QUFFOUIsUUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLFVBQUEsUUFBUTthQUFJLDhCQUFnQixRQUFRLENBQUM7S0FBQSxDQUFDLENBQUE7R0FDbEU7O2VBSFUscUJBQXFCOztXQUtwQixzQkFBQyxHQUFHLEVBQUU7QUFDaEIsVUFBTSxTQUFTLEdBQUcsZ0JBQVMsR0FBRyxDQUFDLENBQUM7QUFDaEMsVUFBTSxRQUFRLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsVUFBQSxNQUFNO2VBQUksTUFBTSxDQUFDLGVBQWUsQ0FBQyxTQUFTLENBQUM7T0FBQSxDQUFDLENBQUM7QUFDL0UsYUFBTyx1Q0FBYSxFQUFFLDRCQUFLLFFBQVEsR0FBQyxDQUFDO0tBQ3RDOzs7U0FUVSxxQkFBcUIiLCJmaWxlIjoiL1VzZXJzL1RoZW8vRGVza3RvcC9OZWJ1bGFUZW1wL05lYnVsYS9lbGFzdGljc2VhcmNoL2luc3RhbGxlZFBsdWdpbnMvc2Vuc2Uvc2VydmVyL3Byb3h5X2NvbmZpZ19jb2xsZWN0aW9uLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZGVmYXVsdHNEZWVwIH0gZnJvbSAnbG9kYXNoJ1xuXG5pbXBvcnQgeyBQcm94eUNvbmZpZyB9IGZyb20gJy4vcHJveHlfY29uZmlnJ1xuaW1wb3J0IHsgcGFyc2UgYXMgcGFyc2VVcmwgfSBmcm9tICd1cmwnXG5cblxuZXhwb3J0IGNsYXNzIFByb3h5Q29uZmlnQ29sbGVjdGlvbiB7XG4gIGNvbnN0cnVjdG9yKGNvbmZpZ3MgPSBbXSkge1xuICAgIHRoaXMuY29uZmlncyA9IGNvbmZpZ3MubWFwKHNldHRpbmdzID0+IG5ldyBQcm94eUNvbmZpZyhzZXR0aW5ncykpXG4gIH1cblxuICBjb25maWdGb3JVcmkodXJpKSB7XG4gICAgY29uc3QgcGFyc2VkVXJpID0gcGFyc2VVcmwodXJpKTtcbiAgICBjb25zdCBzZXR0aW5ncyA9IHRoaXMuY29uZmlncy5tYXAoY29uZmlnID0+IGNvbmZpZy5nZXRGb3JQYXJzZWRVcmkocGFyc2VkVXJpKSk7XG4gICAgcmV0dXJuIGRlZmF1bHRzRGVlcCh7fSwgLi4uc2V0dGluZ3MpO1xuICB9XG59XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/sense/server/proxy_config_collection.js"
      ],
      "names": [],
      "mappings": ";;;;;;;;;;;;sBAA6B,QAAQ;;4BAET,gBAAgB;;mBACV,KAAK;;IAG1B,qBAAqB;AACrB,WADA,qBAAqB,GACN;QAAd,OAAO,yDAAG,EAAE;;0BADb,qBAAqB;;AAE9B,QAAI,CAAC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,UAAA,QAAQ;aAAI,8BAAgB,QAAQ,CAAC;KAAA,CAAC,CAAA;GAClE;;eAHU,qBAAqB;;WAKpB,sBAAC,GAAG,EAAE;AAChB,UAAM,SAAS,GAAG,gBAAS,GAAG,CAAC,CAAC;AAChC,UAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UAAA,MAAM;eAAI,MAAM,CAAC,eAAe,CAAC,SAAS,CAAC;OAAA,CAAC,CAAC;AAC/E,aAAO,uCAAa,EAAE,4BAAK,QAAQ,GAAC,CAAC;KACtC;;;SATU,qBAAqB",
      "file": "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/sense/server/proxy_config_collection.js",
      "sourcesContent": [
        "import { defaultsDeep } from 'lodash'\n\nimport { ProxyConfig } from './proxy_config'\nimport { parse as parseUrl } from 'url'\n\n\nexport class ProxyConfigCollection {\n  constructor(configs = []) {\n    this.configs = configs.map(settings => new ProxyConfig(settings))\n  }\n\n  configForUri(uri) {\n    const parsedUri = parseUrl(uri);\n    const settings = this.configs.map(config => config.getForParsedUri(parsedUri));\n    return defaultsDeep({}, ...settings);\n  }\n}\n"
      ]
    },
    "mtime": 1468947861000
  },
  "{\"filename\":\"/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/sense/server/proxy_config.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [
          {
            "source": "lodash",
            "imported": [
              "memoize",
              "values"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "memoize",
                "local": "memoize"
              },
              {
                "kind": "named",
                "imported": "values",
                "local": "values"
              }
            ]
          },
          {
            "source": "url",
            "imported": [
              "format"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "format",
                "local": "formatUrl"
              }
            ]
          },
          {
            "source": "https",
            "imported": [
              "Agent"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "Agent",
                "local": "HttpsAgent"
              }
            ]
          },
          {
            "source": "fs",
            "imported": [
              "readFileSync"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "readFileSync",
                "local": "readFileSync"
              }
            ]
          },
          {
            "source": "./wildcard_matcher",
            "imported": [
              "WildcardMatcher"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "WildcardMatcher",
                "local": "WildcardMatcher"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "ProxyConfig"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "ProxyConfig",
              "exported": "ProxyConfig"
            }
          ]
        }
      },
      "usedHelpers": [
        "create-class",
        "class-call-check"
      ]
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _lodash = require('lodash');\n\nvar _url = require('url');\n\nvar _https = require('https');\n\nvar _fs = require('fs');\n\nvar _wildcard_matcher = require('./wildcard_matcher');\n\nvar makeHttpsAgent = (0, _lodash.memoize)(function (opts) {\n  return new _https.Agent(opts);\n}, function (opts) {\n  return JSON.stringify(opts);\n});\n\nvar ProxyConfig = (function () {\n  function ProxyConfig(config) {\n    _classCallCheck(this, ProxyConfig);\n\n    config = Object.assign({}, config);\n\n    // -----\n    // read \"match\" info\n    // -----\n    var rawMatches = Object.assign({}, config.match);\n    this.id = (0, _url.format)({\n      protocol: rawMatches.protocol,\n      hostname: rawMatches.host,\n      port: rawMatches.port,\n      pathname: rawMatches.path\n    }) || '*';\n\n    this.matchers = {\n      protocol: new _wildcard_matcher.WildcardMatcher(rawMatches.protocol),\n      host: new _wildcard_matcher.WildcardMatcher(rawMatches.host),\n      port: new _wildcard_matcher.WildcardMatcher(rawMatches.port),\n      path: new _wildcard_matcher.WildcardMatcher(rawMatches.path, '/')\n    };\n\n    // -----\n    // read config vars\n    // -----\n    this.timeout = config.timeout;\n    this.sslAgent = this._makeSslAgent(config);\n  }\n\n  _createClass(ProxyConfig, [{\n    key: '_makeSslAgent',\n    value: function _makeSslAgent(config) {\n      var ssl = config.ssl || {};\n      this.verifySsl = ssl.verify;\n\n      var sslAgentOpts = {\n        ca: ssl.ca && ssl.ca.map(function (ca) {\n          return (0, _fs.readFileSync)(ca);\n        }),\n        cert: ssl.cert && (0, _fs.readFileSync)(ssl.cert),\n        key: ssl.key && (0, _fs.readFileSync)(ssl.key)\n      };\n\n      if ((0, _lodash.values)(sslAgentOpts).filter(Boolean).length) {\n        return new _https.Agent(sslAgentOpts);\n      }\n    }\n  }, {\n    key: 'getForParsedUri',\n    value: function getForParsedUri(_ref) {\n      var protocol = _ref.protocol;\n      var hostname = _ref.hostname;\n      var port = _ref.port;\n      var pathname = _ref.pathname;\n\n      var match = this.matchers.protocol.match(protocol.slice(0, -1));\n      match = match && this.matchers.host.match(hostname);\n      match = match && this.matchers.port.match(port);\n      match = match && this.matchers.path.match(pathname);\n\n      if (!match) return {};\n      return {\n        timeout: this.timeout,\n        rejectUnauthorized: this.sslAgent ? true : this.verifySsl,\n        agent: protocol === 'https:' ? this.sslAgent : undefined\n      };\n    }\n  }]);\n\n  return ProxyConfig;\n})();\n\nexports.ProxyConfig = ProxyConfig;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9UaGVvL0Rlc2t0b3AvTmVidWxhVGVtcC9OZWJ1bGEvZWxhc3RpY3NlYXJjaC9pbnN0YWxsZWRQbHVnaW5zL3NlbnNlL3NlcnZlci9wcm94eV9jb25maWcuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztzQkFBZ0MsUUFBUTs7bUJBQ0osS0FBSzs7cUJBQ0wsT0FBTzs7a0JBQ2QsSUFBSTs7Z0NBRUQsb0JBQW9COztBQUVwRCxJQUFNLGNBQWMsR0FBRyxxQkFDckIsVUFBQSxJQUFJO1NBQUksaUJBQWUsSUFBSSxDQUFDO0NBQUEsRUFDNUIsVUFBQSxJQUFJO1NBQUksSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUM7Q0FBQSxDQUM3QixDQUFBOztJQUVZLFdBQVc7QUFDWCxXQURBLFdBQVcsQ0FDVixNQUFNLEVBQUU7MEJBRFQsV0FBVzs7QUFFcEIsVUFBTSxHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFLE1BQU0sQ0FBQyxDQUFDOzs7OztBQUtuQyxRQUFNLFVBQVUsR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLEVBQUUsRUFBRSxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUM7QUFDbkQsUUFBSSxDQUFDLEVBQUUsR0FBRyxpQkFBVTtBQUNsQixjQUFRLEVBQUUsVUFBVSxDQUFDLFFBQVE7QUFDN0IsY0FBUSxFQUFFLFVBQVUsQ0FBQyxJQUFJO0FBQ3pCLFVBQUksRUFBRSxVQUFVLENBQUMsSUFBSTtBQUNyQixjQUFRLEVBQUUsVUFBVSxDQUFDLElBQUk7S0FDMUIsQ0FBQyxJQUFJLEdBQUcsQ0FBQzs7QUFFVixRQUFJLENBQUMsUUFBUSxHQUFHO0FBQ2QsY0FBUSxFQUFFLHNDQUFvQixVQUFVLENBQUMsUUFBUSxDQUFDO0FBQ2xELFVBQUksRUFBRSxzQ0FBb0IsVUFBVSxDQUFDLElBQUksQ0FBQztBQUMxQyxVQUFJLEVBQUUsc0NBQW9CLFVBQVUsQ0FBQyxJQUFJLENBQUM7QUFDMUMsVUFBSSxFQUFFLHNDQUFvQixVQUFVLENBQUMsSUFBSSxFQUFFLEdBQUcsQ0FBQztLQUNoRCxDQUFDOzs7OztBQUtGLFFBQUksQ0FBQyxPQUFPLEdBQUcsTUFBTSxDQUFDLE9BQU8sQ0FBQztBQUM5QixRQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxhQUFhLENBQUMsTUFBTSxDQUFDLENBQUM7R0FDNUM7O2VBM0JVLFdBQVc7O1dBNkJULHVCQUFDLE1BQU0sRUFBRTtBQUNwQixVQUFNLEdBQUcsR0FBRyxNQUFNLENBQUMsR0FBRyxJQUFJLEVBQUUsQ0FBQztBQUM3QixVQUFJLENBQUMsU0FBUyxHQUFHLEdBQUcsQ0FBQyxNQUFNLENBQUM7O0FBRTVCLFVBQU0sWUFBWSxHQUFHO0FBQ25CLFVBQUUsRUFBRSxHQUFHLENBQUMsRUFBRSxJQUFJLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxDQUFDLFVBQUEsRUFBRTtpQkFBSSxzQkFBYSxFQUFFLENBQUM7U0FBQSxDQUFDO0FBQ2hELFlBQUksRUFBRSxHQUFHLENBQUMsSUFBSSxJQUFJLHNCQUFhLEdBQUcsQ0FBQyxJQUFJLENBQUM7QUFDeEMsV0FBRyxFQUFFLEdBQUcsQ0FBQyxHQUFHLElBQUksc0JBQWEsR0FBRyxDQUFDLEdBQUcsQ0FBQztPQUN0QyxDQUFDOztBQUVGLFVBQUksb0JBQU8sWUFBWSxDQUFDLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDLE1BQU0sRUFBRTtBQUMvQyxlQUFPLGlCQUFlLFlBQVksQ0FBQyxDQUFDO09BQ3JDO0tBQ0Y7OztXQUVjLHlCQUFDLElBQXNDLEVBQUU7VUFBdEMsUUFBUSxHQUFWLElBQXNDLENBQXBDLFFBQVE7VUFBRSxRQUFRLEdBQXBCLElBQXNDLENBQTFCLFFBQVE7VUFBRSxJQUFJLEdBQTFCLElBQXNDLENBQWhCLElBQUk7VUFBRSxRQUFRLEdBQXBDLElBQXNDLENBQVYsUUFBUTs7QUFDbEQsVUFBSSxLQUFLLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNoRSxXQUFLLEdBQUcsS0FBSyxJQUFJLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsQ0FBQztBQUNwRCxXQUFLLEdBQUcsS0FBSyxJQUFJLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUNoRCxXQUFLLEdBQUcsS0FBSyxJQUFJLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsQ0FBQzs7QUFFcEQsVUFBSSxDQUFDLEtBQUssRUFBRSxPQUFPLEVBQUUsQ0FBQztBQUN0QixhQUFPO0FBQ0wsZUFBTyxFQUFFLElBQUksQ0FBQyxPQUFPO0FBQ3JCLDBCQUFrQixFQUFFLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxHQUFHLElBQUksQ0FBQyxTQUFTO0FBQ3pELGFBQUssRUFBRSxRQUFRLEtBQUssUUFBUSxHQUFHLElBQUksQ0FBQyxRQUFRLEdBQUcsU0FBUztPQUN6RCxDQUFDO0tBQ0g7OztTQXhEVSxXQUFXIiwiZmlsZSI6Ii9Vc2Vycy9UaGVvL0Rlc2t0b3AvTmVidWxhVGVtcC9OZWJ1bGEvZWxhc3RpY3NlYXJjaC9pbnN0YWxsZWRQbHVnaW5zL3NlbnNlL3NlcnZlci9wcm94eV9jb25maWcuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBtZW1vaXplLCB2YWx1ZXMgfSBmcm9tICdsb2Rhc2gnXG5pbXBvcnQgeyBmb3JtYXQgYXMgZm9ybWF0VXJsIH0gZnJvbSAndXJsJ1xuaW1wb3J0IHsgQWdlbnQgYXMgSHR0cHNBZ2VudCB9IGZyb20gJ2h0dHBzJ1xuaW1wb3J0IHsgcmVhZEZpbGVTeW5jIH0gZnJvbSAnZnMnXG5cbmltcG9ydCB7IFdpbGRjYXJkTWF0Y2hlciB9IGZyb20gJy4vd2lsZGNhcmRfbWF0Y2hlcidcblxuY29uc3QgbWFrZUh0dHBzQWdlbnQgPSBtZW1vaXplKFxuICBvcHRzID0+IG5ldyBIdHRwc0FnZW50KG9wdHMpLFxuICBvcHRzID0+IEpTT04uc3RyaW5naWZ5KG9wdHMpXG4pXG5cbmV4cG9ydCBjbGFzcyBQcm94eUNvbmZpZyB7XG4gIGNvbnN0cnVjdG9yKGNvbmZpZykge1xuICAgIGNvbmZpZyA9IE9iamVjdC5hc3NpZ24oe30sIGNvbmZpZyk7XG5cbiAgICAvLyAtLS0tLVxuICAgIC8vIHJlYWQgXCJtYXRjaFwiIGluZm9cbiAgICAvLyAtLS0tLVxuICAgIGNvbnN0IHJhd01hdGNoZXMgPSBPYmplY3QuYXNzaWduKHt9LCBjb25maWcubWF0Y2gpO1xuICAgIHRoaXMuaWQgPSBmb3JtYXRVcmwoe1xuICAgICAgcHJvdG9jb2w6IHJhd01hdGNoZXMucHJvdG9jb2wsXG4gICAgICBob3N0bmFtZTogcmF3TWF0Y2hlcy5ob3N0LFxuICAgICAgcG9ydDogcmF3TWF0Y2hlcy5wb3J0LFxuICAgICAgcGF0aG5hbWU6IHJhd01hdGNoZXMucGF0aFxuICAgIH0pIHx8ICcqJztcblxuICAgIHRoaXMubWF0Y2hlcnMgPSB7XG4gICAgICBwcm90b2NvbDogbmV3IFdpbGRjYXJkTWF0Y2hlcihyYXdNYXRjaGVzLnByb3RvY29sKSxcbiAgICAgIGhvc3Q6IG5ldyBXaWxkY2FyZE1hdGNoZXIocmF3TWF0Y2hlcy5ob3N0KSxcbiAgICAgIHBvcnQ6IG5ldyBXaWxkY2FyZE1hdGNoZXIocmF3TWF0Y2hlcy5wb3J0KSxcbiAgICAgIHBhdGg6IG5ldyBXaWxkY2FyZE1hdGNoZXIocmF3TWF0Y2hlcy5wYXRoLCAnLycpLFxuICAgIH07XG5cbiAgICAvLyAtLS0tLVxuICAgIC8vIHJlYWQgY29uZmlnIHZhcnNcbiAgICAvLyAtLS0tLVxuICAgIHRoaXMudGltZW91dCA9IGNvbmZpZy50aW1lb3V0O1xuICAgIHRoaXMuc3NsQWdlbnQgPSB0aGlzLl9tYWtlU3NsQWdlbnQoY29uZmlnKTtcbiAgfVxuXG4gIF9tYWtlU3NsQWdlbnQoY29uZmlnKSB7XG4gICAgY29uc3Qgc3NsID0gY29uZmlnLnNzbCB8fCB7fTtcbiAgICB0aGlzLnZlcmlmeVNzbCA9IHNzbC52ZXJpZnk7XG5cbiAgICBjb25zdCBzc2xBZ2VudE9wdHMgPSB7XG4gICAgICBjYTogc3NsLmNhICYmIHNzbC5jYS5tYXAoY2EgPT4gcmVhZEZpbGVTeW5jKGNhKSksXG4gICAgICBjZXJ0OiBzc2wuY2VydCAmJiByZWFkRmlsZVN5bmMoc3NsLmNlcnQpLFxuICAgICAga2V5OiBzc2wua2V5ICYmIHJlYWRGaWxlU3luYyhzc2wua2V5KSxcbiAgICB9O1xuXG4gICAgaWYgKHZhbHVlcyhzc2xBZ2VudE9wdHMpLmZpbHRlcihCb29sZWFuKS5sZW5ndGgpIHtcbiAgICAgIHJldHVybiBuZXcgSHR0cHNBZ2VudChzc2xBZ2VudE9wdHMpO1xuICAgIH1cbiAgfVxuXG4gIGdldEZvclBhcnNlZFVyaSh7IHByb3RvY29sLCBob3N0bmFtZSwgcG9ydCwgcGF0aG5hbWUgfSkge1xuICAgIGxldCBtYXRjaCA9IHRoaXMubWF0Y2hlcnMucHJvdG9jb2wubWF0Y2gocHJvdG9jb2wuc2xpY2UoMCwgLTEpKTtcbiAgICBtYXRjaCA9IG1hdGNoICYmIHRoaXMubWF0Y2hlcnMuaG9zdC5tYXRjaChob3N0bmFtZSk7XG4gICAgbWF0Y2ggPSBtYXRjaCAmJiB0aGlzLm1hdGNoZXJzLnBvcnQubWF0Y2gocG9ydCk7XG4gICAgbWF0Y2ggPSBtYXRjaCAmJiB0aGlzLm1hdGNoZXJzLnBhdGgubWF0Y2gocGF0aG5hbWUpO1xuXG4gICAgaWYgKCFtYXRjaCkgcmV0dXJuIHt9O1xuICAgIHJldHVybiB7XG4gICAgICB0aW1lb3V0OiB0aGlzLnRpbWVvdXQsXG4gICAgICByZWplY3RVbmF1dGhvcml6ZWQ6IHRoaXMuc3NsQWdlbnQgPyB0cnVlIDogdGhpcy52ZXJpZnlTc2wsXG4gICAgICBhZ2VudDogcHJvdG9jb2wgPT09ICdodHRwczonID8gdGhpcy5zc2xBZ2VudCA6IHVuZGVmaW5lZFxuICAgIH07XG4gIH1cbn1cbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/sense/server/proxy_config.js"
      ],
      "names": [],
      "mappings": "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",
      "file": "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/sense/server/proxy_config.js",
      "sourcesContent": [
        "import { memoize, values } from 'lodash'\nimport { format as formatUrl } from 'url'\nimport { Agent as HttpsAgent } from 'https'\nimport { readFileSync } from 'fs'\n\nimport { WildcardMatcher } from './wildcard_matcher'\n\nconst makeHttpsAgent = memoize(\n  opts => new HttpsAgent(opts),\n  opts => JSON.stringify(opts)\n)\n\nexport class ProxyConfig {\n  constructor(config) {\n    config = Object.assign({}, config);\n\n    // -----\n    // read \"match\" info\n    // -----\n    const rawMatches = Object.assign({}, config.match);\n    this.id = formatUrl({\n      protocol: rawMatches.protocol,\n      hostname: rawMatches.host,\n      port: rawMatches.port,\n      pathname: rawMatches.path\n    }) || '*';\n\n    this.matchers = {\n      protocol: new WildcardMatcher(rawMatches.protocol),\n      host: new WildcardMatcher(rawMatches.host),\n      port: new WildcardMatcher(rawMatches.port),\n      path: new WildcardMatcher(rawMatches.path, '/'),\n    };\n\n    // -----\n    // read config vars\n    // -----\n    this.timeout = config.timeout;\n    this.sslAgent = this._makeSslAgent(config);\n  }\n\n  _makeSslAgent(config) {\n    const ssl = config.ssl || {};\n    this.verifySsl = ssl.verify;\n\n    const sslAgentOpts = {\n      ca: ssl.ca && ssl.ca.map(ca => readFileSync(ca)),\n      cert: ssl.cert && readFileSync(ssl.cert),\n      key: ssl.key && readFileSync(ssl.key),\n    };\n\n    if (values(sslAgentOpts).filter(Boolean).length) {\n      return new HttpsAgent(sslAgentOpts);\n    }\n  }\n\n  getForParsedUri({ protocol, hostname, port, pathname }) {\n    let match = this.matchers.protocol.match(protocol.slice(0, -1));\n    match = match && this.matchers.host.match(hostname);\n    match = match && this.matchers.port.match(port);\n    match = match && this.matchers.path.match(pathname);\n\n    if (!match) return {};\n    return {\n      timeout: this.timeout,\n      rejectUnauthorized: this.sslAgent ? true : this.verifySsl,\n      agent: protocol === 'https:' ? this.sslAgent : undefined\n    };\n  }\n}\n"
      ]
    },
    "mtime": 1468947861000
  },
  "{\"filename\":\"/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/sense/server/wildcard_matcher.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [
          {
            "source": "minimatch",
            "imported": [
              "Minimatch"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "Minimatch",
                "local": "Minimatch"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "WildcardMatcher"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "WildcardMatcher",
              "exported": "WildcardMatcher"
            }
          ]
        }
      },
      "usedHelpers": [
        "create-class",
        "class-call-check"
      ]
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _minimatch = require('minimatch');\n\nvar WildcardMatcher = (function () {\n  function WildcardMatcher(wildcardPattern, emptyVal) {\n    _classCallCheck(this, WildcardMatcher);\n\n    this.emptyVal = emptyVal;\n    this.pattern = String(wildcardPattern || '*');\n    this.matcher = new _minimatch.Minimatch(this.pattern, {\n      noglobstar: true,\n      dot: true,\n      nocase: true,\n      matchBase: true,\n      nocomment: true\n    });\n  }\n\n  _createClass(WildcardMatcher, [{\n    key: 'match',\n    value: function match(candidate) {\n      var empty = !candidate || candidate === this.emptyVal;\n      if (empty && this.pattern === '*') {\n        return true;\n      }\n\n      return this.matcher.match(candidate || '');\n    }\n  }]);\n\n  return WildcardMatcher;\n})();\n\nexports.WildcardMatcher = WildcardMatcher;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9UaGVvL0Rlc2t0b3AvTmVidWxhVGVtcC9OZWJ1bGEvZWxhc3RpY3NlYXJjaC9pbnN0YWxsZWRQbHVnaW5zL3NlbnNlL3NlcnZlci93aWxkY2FyZF9tYXRjaGVyLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7eUJBQTBCLFdBQVc7O0lBRXhCLGVBQWU7QUFDZixXQURBLGVBQWUsQ0FDZCxlQUFlLEVBQUUsUUFBUSxFQUFFOzBCQUQ1QixlQUFlOztBQUV4QixRQUFJLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQztBQUN6QixRQUFJLENBQUMsT0FBTyxHQUFHLE1BQU0sQ0FBQyxlQUFlLElBQUksR0FBRyxDQUFDLENBQUM7QUFDOUMsUUFBSSxDQUFDLE9BQU8sR0FBRyx5QkFBYyxJQUFJLENBQUMsT0FBTyxFQUFFO0FBQ3pDLGdCQUFVLEVBQUUsSUFBSTtBQUNoQixTQUFHLEVBQUUsSUFBSTtBQUNULFlBQU0sRUFBRSxJQUFJO0FBQ1osZUFBUyxFQUFFLElBQUk7QUFDZixlQUFTLEVBQUUsSUFBSTtLQUNoQixDQUFDLENBQUE7R0FDSDs7ZUFYVSxlQUFlOztXQWFyQixlQUFDLFNBQVMsRUFBRTtBQUNmLFVBQU0sS0FBSyxHQUFHLENBQUMsU0FBUyxJQUFJLFNBQVMsS0FBSyxJQUFJLENBQUMsUUFBUSxDQUFDO0FBQ3hELFVBQUksS0FBSyxJQUFJLElBQUksQ0FBQyxPQUFPLEtBQUssR0FBRyxFQUFFO0FBQ2pDLGVBQU8sSUFBSSxDQUFDO09BQ2I7O0FBRUQsYUFBTyxJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxTQUFTLElBQUksRUFBRSxDQUFDLENBQUE7S0FDM0M7OztTQXBCVSxlQUFlIiwiZmlsZSI6Ii9Vc2Vycy9UaGVvL0Rlc2t0b3AvTmVidWxhVGVtcC9OZWJ1bGEvZWxhc3RpY3NlYXJjaC9pbnN0YWxsZWRQbHVnaW5zL3NlbnNlL3NlcnZlci93aWxkY2FyZF9tYXRjaGVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTWluaW1hdGNoIH0gZnJvbSAnbWluaW1hdGNoJ1xuXG5leHBvcnQgY2xhc3MgV2lsZGNhcmRNYXRjaGVyIHtcbiAgY29uc3RydWN0b3Iod2lsZGNhcmRQYXR0ZXJuLCBlbXB0eVZhbCkge1xuICAgIHRoaXMuZW1wdHlWYWwgPSBlbXB0eVZhbDtcbiAgICB0aGlzLnBhdHRlcm4gPSBTdHJpbmcod2lsZGNhcmRQYXR0ZXJuIHx8ICcqJyk7XG4gICAgdGhpcy5tYXRjaGVyID0gbmV3IE1pbmltYXRjaCh0aGlzLnBhdHRlcm4sIHtcbiAgICAgIG5vZ2xvYnN0YXI6IHRydWUsXG4gICAgICBkb3Q6IHRydWUsXG4gICAgICBub2Nhc2U6IHRydWUsXG4gICAgICBtYXRjaEJhc2U6IHRydWUsXG4gICAgICBub2NvbW1lbnQ6IHRydWVcbiAgICB9KVxuICB9XG5cbiAgbWF0Y2goY2FuZGlkYXRlKSB7XG4gICAgY29uc3QgZW1wdHkgPSAhY2FuZGlkYXRlIHx8IGNhbmRpZGF0ZSA9PT0gdGhpcy5lbXB0eVZhbDtcbiAgICBpZiAoZW1wdHkgJiYgdGhpcy5wYXR0ZXJuID09PSAnKicpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cblxuICAgIHJldHVybiB0aGlzLm1hdGNoZXIubWF0Y2goY2FuZGlkYXRlIHx8ICcnKVxuICB9XG59XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/sense/server/wildcard_matcher.js"
      ],
      "names": [],
      "mappings": ";;;;;;;;;;yBAA0B,WAAW;;IAExB,eAAe;AACf,WADA,eAAe,CACd,eAAe,EAAE,QAAQ,EAAE;0BAD5B,eAAe;;AAExB,QAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;AACzB,QAAI,CAAC,OAAO,GAAG,MAAM,CAAC,eAAe,IAAI,GAAG,CAAC,CAAC;AAC9C,QAAI,CAAC,OAAO,GAAG,yBAAc,IAAI,CAAC,OAAO,EAAE;AACzC,gBAAU,EAAE,IAAI;AAChB,SAAG,EAAE,IAAI;AACT,YAAM,EAAE,IAAI;AACZ,eAAS,EAAE,IAAI;AACf,eAAS,EAAE,IAAI;KAChB,CAAC,CAAA;GACH;;eAXU,eAAe;;WAarB,eAAC,SAAS,EAAE;AACf,UAAM,KAAK,GAAG,CAAC,SAAS,IAAI,SAAS,KAAK,IAAI,CAAC,QAAQ,CAAC;AACxD,UAAI,KAAK,IAAI,IAAI,CAAC,OAAO,KAAK,GAAG,EAAE;AACjC,eAAO,IAAI,CAAC;OACb;;AAED,aAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,SAAS,IAAI,EAAE,CAAC,CAAA;KAC3C;;;SApBU,eAAe",
      "file": "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/sense/server/wildcard_matcher.js",
      "sourcesContent": [
        "import { Minimatch } from 'minimatch'\n\nexport class WildcardMatcher {\n  constructor(wildcardPattern, emptyVal) {\n    this.emptyVal = emptyVal;\n    this.pattern = String(wildcardPattern || '*');\n    this.matcher = new Minimatch(this.pattern, {\n      noglobstar: true,\n      dot: true,\n      nocase: true,\n      matchBase: true,\n      nocomment: true\n    })\n  }\n\n  match(candidate) {\n    const empty = !candidate || candidate === this.emptyVal;\n    if (empty && this.pattern === '*') {\n      return true;\n    }\n\n    return this.matcher.match(candidate || '')\n  }\n}\n"
      ]
    },
    "mtime": 1468947861000
  },
  "{\"filename\":\"/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/routes/api/v1/clusters.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "'use strict';\n\nvar Promise = require('bluebird');\nvar _ = require('lodash');\nvar root = require('requirefrom')('');\nvar getClustersStats = root('server/lib/get_clusters_stats');\nvar getClusters = root('server/lib/get_clusters');\nvar getClustersHealth = root('server/lib/get_clusters_health');\nvar Joi = require('joi');\n\nvar calculateIndices = root('server/lib/calculate_indices');\nvar getLastState = root('server/lib/get_last_state');\nvar getClusterStatus = root('server/lib/get_cluster_status');\nvar getMetrics = root('server/lib/get_metrics');\nvar getShardStats = root('server/lib/get_shard_stats');\nvar getLastRecovery = root('server/lib/get_last_recovery');\nvar calculateClusterStatus = root('server/lib/calculate_cluster_status');\nvar handleError = root('server/lib/handle_error');\n\nmodule.exports = function (server) {\n  var config = server.config();\n  var callWithRequest = server.plugins.elasticsearch.callWithRequest;\n\n  server.route({\n    method: 'POST',\n    path: '/api/marvel/v1/clusters',\n    config: {\n      validate: {\n        payload: Joi.object({\n          timeRange: Joi.object({\n            min: Joi.date().required(),\n            max: Joi.date().required()\n          }).required()\n        })\n      }\n    },\n    handler: function handler(req, reply) {\n      var start = req.payload.timeRange.min;\n      var end = req.payload.timeRange.max;\n      return calculateIndices(req, start, end).then(function (indices) {\n        return getClusters(req, indices).then(getClustersStats(req)).then(getClustersHealth(req)).then(function (clusters) {\n          return reply(_.sortBy(clusters, 'cluster_name'));\n        });\n      })['catch'](function (err) {\n        return reply(handleError(err, req));\n      });\n    }\n  });\n\n  server.route({\n    method: 'POST',\n    path: '/api/marvel/v1/clusters/{clusterUuid}',\n    config: {\n      validate: {\n        params: Joi.object({\n          clusterUuid: Joi.string().required()\n        }),\n        payload: Joi.object({\n          timeRange: Joi.object({\n            min: Joi.date().required(),\n            max: Joi.date().required()\n          }).required(),\n          metrics: Joi.array().required()\n        })\n      }\n    },\n    handler: function handler(req, reply) {\n      var start = req.payload.timeRange.min;\n      var end = req.payload.timeRange.max;\n      calculateIndices(req, start, end).then(function (indices) {\n        return getLastState(req, indices).then(function (lastState) {\n          return Promise.props({\n            clusterStatus: getClusterStatus(req, indices, lastState),\n            metrics: getMetrics(req, indices),\n            shardStats: getShardStats(req, indices, lastState),\n            shardActivity: getLastRecovery(req, indices)\n          });\n        });\n      }).then(calculateClusterStatus).then(reply)['catch'](function (err) {\n        return reply(handleError(err, req));\n      });\n    }\n  });\n\n  /*\n   * Phone Home\n   */\n  server.route({\n    method: 'GET',\n    path: '/api/marvel/v1/clusters/{clusterUuid}/info',\n    config: {\n      validate: {\n        params: Joi.object({\n          clusterUuid: Joi.string().required()\n        })\n      }\n    },\n    handler: function handler(req, reply) {\n      var params = {\n        index: config.get('marvel.index'),\n        type: 'cluster_info',\n        id: req.params.clusterUuid\n      };\n      return callWithRequest(req, 'get', params).then(function (resp) {\n        var fields = ['cluster_uuid', 'timestamp', 'cluster_name', 'version', 'license', 'cluster_stats'];\n        reply(_.pick(resp._source, fields));\n      })['catch'](function (err) {\n        return reply(handleError(err, req));\n      });\n    }\n  });\n};\n//# sourceMappingURL=data:application/json;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/routes/api/v1/clusters.js"
      ],
      "names": [],
      "mappings": "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",
      "file": "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/routes/api/v1/clusters.js",
      "sourcesContent": [
        "const Promise = require('bluebird');\nconst _ = require('lodash');\nconst root = require('requirefrom')('');\nconst getClustersStats = root('server/lib/get_clusters_stats');\nconst getClusters = root('server/lib/get_clusters');\nconst getClustersHealth = root('server/lib/get_clusters_health');\nconst Joi = require('joi');\n\nconst calculateIndices = root('server/lib/calculate_indices');\nconst getLastState = root('server/lib/get_last_state');\nconst getClusterStatus = root('server/lib/get_cluster_status');\nconst getMetrics = root('server/lib/get_metrics');\nconst getShardStats = root('server/lib/get_shard_stats');\nconst getLastRecovery = root('server/lib/get_last_recovery');\nconst calculateClusterStatus = root('server/lib/calculate_cluster_status');\nconst handleError = root('server/lib/handle_error');\n\nmodule.exports = (server) => {\n  const config = server.config();\n  const callWithRequest = server.plugins.elasticsearch.callWithRequest;\n\n  server.route({\n    method: 'POST',\n    path: '/api/marvel/v1/clusters',\n    config: {\n      validate: {\n        payload: Joi.object({\n          timeRange: Joi.object({\n            min: Joi.date().required(),\n            max: Joi.date().required()\n          }).required()\n        })\n      }\n    },\n    handler: (req, reply) => {\n      const start = req.payload.timeRange.min;\n      const end = req.payload.timeRange.max;\n      return calculateIndices(req, start, end)\n      .then(indices => {\n        return getClusters(req, indices)\n        .then(getClustersStats(req))\n        .then(getClustersHealth(req))\n        .then(clusters => reply(_.sortBy(clusters, 'cluster_name')));\n      })\n      .catch(err => reply(handleError(err, req)));\n    }\n  });\n\n  server.route({\n    method: 'POST',\n    path: '/api/marvel/v1/clusters/{clusterUuid}',\n    config: {\n      validate: {\n        params: Joi.object({\n          clusterUuid: Joi.string().required()\n        }),\n        payload: Joi.object({\n          timeRange: Joi.object({\n            min: Joi.date().required(),\n            max: Joi.date().required()\n          }).required(),\n          metrics: Joi.array().required()\n        })\n      }\n    },\n    handler: (req, reply) => {\n      const start = req.payload.timeRange.min;\n      const end = req.payload.timeRange.max;\n      calculateIndices(req, start, end)\n      .then(indices => {\n        return getLastState(req, indices)\n        .then(lastState => {\n          return Promise.props({\n            clusterStatus: getClusterStatus(req, indices, lastState),\n            metrics: getMetrics(req, indices),\n            shardStats: getShardStats(req, indices, lastState),\n            shardActivity: getLastRecovery(req, indices)\n          });\n        });\n      })\n      .then(calculateClusterStatus)\n      .then(reply)\n      .catch(err => reply(handleError(err, req)));\n    }\n  });\n\n  /*\n   * Phone Home\n   */\n  server.route({\n    method: 'GET',\n    path: '/api/marvel/v1/clusters/{clusterUuid}/info',\n    config: {\n      validate: {\n        params: Joi.object({\n          clusterUuid: Joi.string().required()\n        })\n      }\n    },\n    handler: (req, reply) => {\n      const params = {\n        index: config.get('marvel.index'),\n        type: 'cluster_info',\n        id: req.params.clusterUuid\n      };\n      return callWithRequest(req, 'get', params)\n      .then(resp => {\n        const fields = [\n          'cluster_uuid',\n          'timestamp',\n          'cluster_name',\n          'version',\n          'license',\n          'cluster_stats'\n        ];\n        reply(_.pick(resp._source, fields));\n      })\n      .catch(err => reply(handleError(err, req)));\n    }\n  });\n};\n"
      ]
    },
    "mtime": 1468947861000
  },
  "{\"filename\":\"/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/get_clusters_stats.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "'use strict';\n\nvar moment = require('moment');\nvar _ = require('lodash');\nvar Promise = require('bluebird');\nmodule.exports = function (req) {\n  var server = req.server;\n  var callWithRequest = server.plugins.elasticsearch.callWithRequest;\n  var config = server.config();\n  return function (clusters) {\n    if (!clusters) return [];\n    return Promise.map(clusters, function (cluster) {\n      var body = { size: 1, sort: [{ timestamp: 'desc' }] };\n      body.query = {\n        filtered: { filter: { term: { cluster_uuid: cluster.cluster_uuid } } }\n      };\n      var params = {\n        index: config.get('marvel.index_prefix') + '*',\n        ignore: [404],\n        type: 'cluster_stats',\n        body: body\n      };\n      return callWithRequest(req, 'search', params).then(function (resp) {\n        if (resp.hits.total) {\n          cluster.stats = _.get(resp.hits.hits[0], '_source.cluster_stats');\n        }\n        return cluster;\n      });\n    });\n  };\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9UaGVvL0Rlc2t0b3AvTmVidWxhVGVtcC9OZWJ1bGEvZWxhc3RpY3NlYXJjaC9pbnN0YWxsZWRQbHVnaW5zL21hcnZlbC9zZXJ2ZXIvbGliL2dldF9jbHVzdGVyc19zdGF0cy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLElBQU0sTUFBTSxHQUFHLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQztBQUNqQyxJQUFNLENBQUMsR0FBRyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUM7QUFDNUIsSUFBTSxPQUFPLEdBQUcsT0FBTyxDQUFDLFVBQVUsQ0FBQyxDQUFDO0FBQ3BDLE1BQU0sQ0FBQyxPQUFPLEdBQUcsVUFBQyxHQUFHLEVBQUs7QUFDeEIsTUFBTSxNQUFNLEdBQUcsR0FBRyxDQUFDLE1BQU0sQ0FBQztBQUMxQixNQUFNLGVBQWUsR0FBRyxNQUFNLENBQUMsT0FBTyxDQUFDLGFBQWEsQ0FBQyxlQUFlLENBQUM7QUFDckUsTUFBTSxNQUFNLEdBQUcsTUFBTSxDQUFDLE1BQU0sRUFBRSxDQUFDO0FBQy9CLFNBQU8sVUFBQyxRQUFRLEVBQUs7QUFDbkIsUUFBSSxDQUFDLFFBQVEsRUFBRSxPQUFPLEVBQUUsQ0FBQztBQUN6QixXQUFPLE9BQU8sQ0FBQyxHQUFHLENBQUMsUUFBUSxFQUFFLFVBQUMsT0FBTyxFQUFLO0FBQ3hDLFVBQU0sSUFBSSxHQUFHLEVBQUUsSUFBSSxFQUFFLENBQUMsRUFBRSxJQUFJLEVBQUUsQ0FBRSxFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQUUsQ0FBRSxFQUFFLENBQUM7QUFDMUQsVUFBSSxDQUFDLEtBQUssR0FBRztBQUNYLGdCQUFRLEVBQUUsRUFBRSxNQUFNLEVBQUUsRUFBRSxJQUFJLEVBQUUsRUFBRSxZQUFZLEVBQUUsT0FBTyxDQUFDLFlBQVksRUFBRSxFQUFFLEVBQUU7T0FDdkUsQ0FBQztBQUNGLFVBQU0sTUFBTSxHQUFHO0FBQ2IsYUFBSyxFQUFFLE1BQU0sQ0FBQyxHQUFHLENBQUMscUJBQXFCLENBQUMsR0FBRyxHQUFHO0FBQzlDLGNBQU0sRUFBRSxDQUFDLEdBQUcsQ0FBQztBQUNiLFlBQUksRUFBRSxlQUFlO0FBQ3JCLFlBQUksRUFBRSxJQUFJO09BQ1gsQ0FBQztBQUNGLGFBQU8sZUFBZSxDQUFDLEdBQUcsRUFBRSxRQUFRLEVBQUUsTUFBTSxDQUFDLENBQzFDLElBQUksQ0FBQyxVQUFDLElBQUksRUFBSztBQUNkLFlBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUU7QUFDbkIsaUJBQU8sQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRSx1QkFBdUIsQ0FBQyxDQUFDO1NBQ25FO0FBQ0QsZUFBTyxPQUFPLENBQUM7T0FDaEIsQ0FBQyxDQUFDO0tBQ04sQ0FBQyxDQUFDO0dBQ0osQ0FBQztDQUNILENBQUMiLCJmaWxlIjoiL1VzZXJzL1RoZW8vRGVza3RvcC9OZWJ1bGFUZW1wL05lYnVsYS9lbGFzdGljc2VhcmNoL2luc3RhbGxlZFBsdWdpbnMvbWFydmVsL3NlcnZlci9saWIvZ2V0X2NsdXN0ZXJzX3N0YXRzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgbW9tZW50ID0gcmVxdWlyZSgnbW9tZW50Jyk7XG5jb25zdCBfID0gcmVxdWlyZSgnbG9kYXNoJyk7XG5jb25zdCBQcm9taXNlID0gcmVxdWlyZSgnYmx1ZWJpcmQnKTtcbm1vZHVsZS5leHBvcnRzID0gKHJlcSkgPT4ge1xuICBjb25zdCBzZXJ2ZXIgPSByZXEuc2VydmVyO1xuICBjb25zdCBjYWxsV2l0aFJlcXVlc3QgPSBzZXJ2ZXIucGx1Z2lucy5lbGFzdGljc2VhcmNoLmNhbGxXaXRoUmVxdWVzdDtcbiAgY29uc3QgY29uZmlnID0gc2VydmVyLmNvbmZpZygpO1xuICByZXR1cm4gKGNsdXN0ZXJzKSA9PiB7XG4gICAgaWYgKCFjbHVzdGVycykgcmV0dXJuIFtdO1xuICAgIHJldHVybiBQcm9taXNlLm1hcChjbHVzdGVycywgKGNsdXN0ZXIpID0+IHtcbiAgICAgIGNvbnN0IGJvZHkgPSB7IHNpemU6IDEsIHNvcnQ6IFsgeyB0aW1lc3RhbXA6ICdkZXNjJyB9IF0gfTtcbiAgICAgIGJvZHkucXVlcnkgPSB7XG4gICAgICAgIGZpbHRlcmVkOiB7IGZpbHRlcjogeyB0ZXJtOiB7IGNsdXN0ZXJfdXVpZDogY2x1c3Rlci5jbHVzdGVyX3V1aWQgfSB9IH1cbiAgICAgIH07XG4gICAgICBjb25zdCBwYXJhbXMgPSB7XG4gICAgICAgIGluZGV4OiBjb25maWcuZ2V0KCdtYXJ2ZWwuaW5kZXhfcHJlZml4JykgKyAnKicsXG4gICAgICAgIGlnbm9yZTogWzQwNF0sXG4gICAgICAgIHR5cGU6ICdjbHVzdGVyX3N0YXRzJyxcbiAgICAgICAgYm9keTogYm9keVxuICAgICAgfTtcbiAgICAgIHJldHVybiBjYWxsV2l0aFJlcXVlc3QocmVxLCAnc2VhcmNoJywgcGFyYW1zKVxuICAgICAgICAudGhlbigocmVzcCkgPT4ge1xuICAgICAgICAgIGlmIChyZXNwLmhpdHMudG90YWwpIHtcbiAgICAgICAgICAgIGNsdXN0ZXIuc3RhdHMgPSBfLmdldChyZXNwLmhpdHMuaGl0c1swXSwgJ19zb3VyY2UuY2x1c3Rlcl9zdGF0cycpO1xuICAgICAgICAgIH1cbiAgICAgICAgICByZXR1cm4gY2x1c3RlcjtcbiAgICAgICAgfSk7XG4gICAgfSk7XG4gIH07XG59O1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/get_clusters_stats.js"
      ],
      "names": [],
      "mappings": ";;AAAA,IAAM,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AACjC,IAAM,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC5B,IAAM,OAAO,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AACpC,MAAM,CAAC,OAAO,GAAG,UAAC,GAAG,EAAK;AACxB,MAAM,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;AAC1B,MAAM,eAAe,GAAG,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,eAAe,CAAC;AACrE,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;AAC/B,SAAO,UAAC,QAAQ,EAAK;AACnB,QAAI,CAAC,QAAQ,EAAE,OAAO,EAAE,CAAC;AACzB,WAAO,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,UAAC,OAAO,EAAK;AACxC,UAAM,IAAI,GAAG,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAE,EAAE,SAAS,EAAE,MAAM,EAAE,CAAE,EAAE,CAAC;AAC1D,UAAI,CAAC,KAAK,GAAG;AACX,gBAAQ,EAAE,EAAE,MAAM,EAAE,EAAE,IAAI,EAAE,EAAE,YAAY,EAAE,OAAO,CAAC,YAAY,EAAE,EAAE,EAAE;OACvE,CAAC;AACF,UAAM,MAAM,GAAG;AACb,aAAK,EAAE,MAAM,CAAC,GAAG,CAAC,qBAAqB,CAAC,GAAG,GAAG;AAC9C,cAAM,EAAE,CAAC,GAAG,CAAC;AACb,YAAI,EAAE,eAAe;AACrB,YAAI,EAAE,IAAI;OACX,CAAC;AACF,aAAO,eAAe,CAAC,GAAG,EAAE,QAAQ,EAAE,MAAM,CAAC,CAC1C,IAAI,CAAC,UAAC,IAAI,EAAK;AACd,YAAI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;AACnB,iBAAO,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,uBAAuB,CAAC,CAAC;SACnE;AACD,eAAO,OAAO,CAAC;OAChB,CAAC,CAAC;KACN,CAAC,CAAC;GACJ,CAAC;CACH,CAAC",
      "file": "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/get_clusters_stats.js",
      "sourcesContent": [
        "const moment = require('moment');\nconst _ = require('lodash');\nconst Promise = require('bluebird');\nmodule.exports = (req) => {\n  const server = req.server;\n  const callWithRequest = server.plugins.elasticsearch.callWithRequest;\n  const config = server.config();\n  return (clusters) => {\n    if (!clusters) return [];\n    return Promise.map(clusters, (cluster) => {\n      const body = { size: 1, sort: [ { timestamp: 'desc' } ] };\n      body.query = {\n        filtered: { filter: { term: { cluster_uuid: cluster.cluster_uuid } } }\n      };\n      const params = {\n        index: config.get('marvel.index_prefix') + '*',\n        ignore: [404],\n        type: 'cluster_stats',\n        body: body\n      };\n      return callWithRequest(req, 'search', params)\n        .then((resp) => {\n          if (resp.hits.total) {\n            cluster.stats = _.get(resp.hits.hits[0], '_source.cluster_stats');\n          }\n          return cluster;\n        });\n    });\n  };\n};\n"
      ]
    },
    "mtime": 1468947861000
  },
  "{\"filename\":\"/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/get_clusters.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "'use strict';\n\nvar _ = require('lodash');\nvar Promise = require('bluebird');\nvar createQuery = require('./create_query.js');\nvar validateMarvelLicense = require('./validate_marvel_license');\nmodule.exports = function getClusters(req, indices) {\n  var callWithRequest = req.server.plugins.elasticsearch.callWithRequest;\n  var config = req.server.config();\n  // Get the params from the POST body for the request\n  var start = req.payload.timeRange.min;\n  var end = req.payload.timeRange.max;\n\n  var params = {\n    index: indices,\n    type: 'cluster_stats',\n    meta: 'get_clusters_stats',\n    ignore: [404],\n    // terms agg for the cluster_uuids\n    body: {\n      size: 0, // return no hits, just aggregation buckets\n      query: createQuery({\n        start: start,\n        end: end,\n        clusterUuid: null\n      }),\n      aggs: {\n        cluster_uuids: {\n          terms: {\n            field: 'cluster_uuid'\n          }\n        }\n      }\n    }\n  };\n  return callWithRequest(req, 'search', params).then(function (statsResp) {\n    var statsBuckets = _.get(statsResp, 'aggregations.cluster_uuids.buckets');\n    if (_.isArray(statsBuckets)) {\n\n      return Promise.map(statsBuckets, function (uuidBucket) {\n        var cluster = {\n          cluster_uuid: uuidBucket.key\n        };\n\n        var infoParams = {\n          index: config.get('marvel.index'),\n          type: 'cluster_info',\n          meta: 'get_clusters_info',\n          id: cluster.cluster_uuid\n        };\n\n        return callWithRequest(req, 'get', infoParams).then(function (infoResp) {\n          var infoDoc = infoResp._source;\n\n          cluster.cluster_name = infoDoc.cluster_name;\n          var license = infoDoc.license;\n          if (license && validateMarvelLicense(cluster.cluster_uuid, license)) {\n            cluster.license = license;\n            cluster.version = infoDoc.version;\n          }\n\n          return cluster;\n        });\n      })\n      // Only return clusters with valid licenses\n      .filter(function (cluster) {\n        return cluster.license;\n      });\n    }\n  });\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9UaGVvL0Rlc2t0b3AvTmVidWxhVGVtcC9OZWJ1bGEvZWxhc3RpY3NlYXJjaC9pbnN0YWxsZWRQbHVnaW5zL21hcnZlbC9zZXJ2ZXIvbGliL2dldF9jbHVzdGVycy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLElBQU0sQ0FBQyxHQUFHLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQztBQUM1QixJQUFNLE9BQU8sR0FBRyxPQUFPLENBQUMsVUFBVSxDQUFDLENBQUM7QUFDcEMsSUFBTSxXQUFXLEdBQUcsT0FBTyxDQUFDLG1CQUFtQixDQUFDLENBQUM7QUFDakQsSUFBTSxxQkFBcUIsR0FBRyxPQUFPLENBQUMsMkJBQTJCLENBQUMsQ0FBQztBQUNuRSxNQUFNLENBQUMsT0FBTyxHQUFHLFNBQVMsV0FBVyxDQUFDLEdBQUcsRUFBRSxPQUFPLEVBQUU7QUFDbEQsTUFBTSxlQUFlLEdBQUcsR0FBRyxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDLGVBQWUsQ0FBQztBQUN6RSxNQUFNLE1BQU0sR0FBRyxHQUFHLENBQUMsTUFBTSxDQUFDLE1BQU0sRUFBRSxDQUFDOztBQUVuQyxNQUFNLEtBQUssR0FBRyxHQUFHLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUM7QUFDeEMsTUFBTSxHQUFHLEdBQUcsR0FBRyxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDOztBQUV0QyxNQUFNLE1BQU0sR0FBRztBQUNiLFNBQUssRUFBRSxPQUFPO0FBQ2QsUUFBSSxFQUFFLGVBQWU7QUFDckIsUUFBSSxFQUFFLG9CQUFvQjtBQUMxQixVQUFNLEVBQUUsQ0FBQyxHQUFHLENBQUM7O0FBRWIsUUFBSSxFQUFFO0FBQ0osVUFBSSxFQUFFLENBQUM7QUFDUCxXQUFLLEVBQUUsV0FBVyxDQUFDO0FBQ2pCLGFBQUssRUFBTCxLQUFLO0FBQ0wsV0FBRyxFQUFILEdBQUc7QUFDSCxtQkFBVyxFQUFFLElBQUk7T0FDbEIsQ0FBQztBQUNGLFVBQUksRUFBRTtBQUNKLHFCQUFhLEVBQUU7QUFDYixlQUFLLEVBQUU7QUFDTCxpQkFBSyxFQUFFLGNBQWM7V0FDdEI7U0FDRjtPQUNGO0tBQ0Y7R0FDRixDQUFDO0FBQ0YsU0FBTyxlQUFlLENBQUMsR0FBRyxFQUFFLFFBQVEsRUFBRSxNQUFNLENBQUMsQ0FDNUMsSUFBSSxDQUFDLFVBQUEsU0FBUyxFQUFJO0FBQ2pCLFFBQU0sWUFBWSxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsU0FBUyxFQUFFLG9DQUFvQyxDQUFDLENBQUM7QUFDNUUsUUFBSSxDQUFDLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyxFQUFFOztBQUUzQixhQUFPLE9BQU8sQ0FBQyxHQUFHLENBQUMsWUFBWSxFQUFFLFVBQUMsVUFBVSxFQUFLO0FBQy9DLFlBQU0sT0FBTyxHQUFHO0FBQ2Qsc0JBQVksRUFBRSxVQUFVLENBQUMsR0FBRztTQUM3QixDQUFDOztBQUVGLFlBQU0sVUFBVSxHQUFHO0FBQ2pCLGVBQUssRUFBRSxNQUFNLENBQUMsR0FBRyxDQUFDLGNBQWMsQ0FBQztBQUNqQyxjQUFJLEVBQUUsY0FBYztBQUNwQixjQUFJLEVBQUUsbUJBQW1CO0FBQ3pCLFlBQUUsRUFBRSxPQUFPLENBQUMsWUFBWTtTQUN6QixDQUFDOztBQUVGLGVBQU8sZUFBZSxDQUFDLEdBQUcsRUFBRSxLQUFLLEVBQUUsVUFBVSxDQUFDLENBQzdDLElBQUksQ0FBQyxVQUFBLFFBQVEsRUFBSTtBQUNoQixjQUFNLE9BQU8sR0FBRyxRQUFRLENBQUMsT0FBTyxDQUFDOztBQUVqQyxpQkFBTyxDQUFDLFlBQVksR0FBRyxPQUFPLENBQUMsWUFBWSxDQUFDO0FBQzVDLGNBQU0sT0FBTyxHQUFHLE9BQU8sQ0FBQyxPQUFPLENBQUM7QUFDaEMsY0FBSSxPQUFPLElBQUkscUJBQXFCLENBQUMsT0FBTyxDQUFDLFlBQVksRUFBRSxPQUFPLENBQUMsRUFBRTtBQUNuRSxtQkFBTyxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUM7QUFDMUIsbUJBQU8sQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQztXQUNuQzs7QUFFRCxpQkFBTyxPQUFPLENBQUM7U0FDaEIsQ0FBQyxDQUFDO09BQ0osQ0FBQzs7T0FFRCxNQUFNLENBQUMsVUFBQSxPQUFPO2VBQUksT0FBTyxDQUFDLE9BQU87T0FBQSxDQUFDLENBQUM7S0FDckM7R0FDRixDQUFDLENBQUM7Q0FDSixDQUFDIiwiZmlsZSI6Ii9Vc2Vycy9UaGVvL0Rlc2t0b3AvTmVidWxhVGVtcC9OZWJ1bGEvZWxhc3RpY3NlYXJjaC9pbnN0YWxsZWRQbHVnaW5zL21hcnZlbC9zZXJ2ZXIvbGliL2dldF9jbHVzdGVycy5qcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IF8gPSByZXF1aXJlKCdsb2Rhc2gnKTtcbmNvbnN0IFByb21pc2UgPSByZXF1aXJlKCdibHVlYmlyZCcpO1xuY29uc3QgY3JlYXRlUXVlcnkgPSByZXF1aXJlKCcuL2NyZWF0ZV9xdWVyeS5qcycpO1xuY29uc3QgdmFsaWRhdGVNYXJ2ZWxMaWNlbnNlID0gcmVxdWlyZSgnLi92YWxpZGF0ZV9tYXJ2ZWxfbGljZW5zZScpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBnZXRDbHVzdGVycyhyZXEsIGluZGljZXMpIHtcbiAgY29uc3QgY2FsbFdpdGhSZXF1ZXN0ID0gcmVxLnNlcnZlci5wbHVnaW5zLmVsYXN0aWNzZWFyY2guY2FsbFdpdGhSZXF1ZXN0O1xuICBjb25zdCBjb25maWcgPSByZXEuc2VydmVyLmNvbmZpZygpO1xuICAvLyBHZXQgdGhlIHBhcmFtcyBmcm9tIHRoZSBQT1NUIGJvZHkgZm9yIHRoZSByZXF1ZXN0XG4gIGNvbnN0IHN0YXJ0ID0gcmVxLnBheWxvYWQudGltZVJhbmdlLm1pbjtcbiAgY29uc3QgZW5kID0gcmVxLnBheWxvYWQudGltZVJhbmdlLm1heDtcblxuICBjb25zdCBwYXJhbXMgPSB7XG4gICAgaW5kZXg6IGluZGljZXMsXG4gICAgdHlwZTogJ2NsdXN0ZXJfc3RhdHMnLFxuICAgIG1ldGE6ICdnZXRfY2x1c3RlcnNfc3RhdHMnLFxuICAgIGlnbm9yZTogWzQwNF0sXG4gICAgLy8gdGVybXMgYWdnIGZvciB0aGUgY2x1c3Rlcl91dWlkc1xuICAgIGJvZHk6IHtcbiAgICAgIHNpemU6IDAsIC8vIHJldHVybiBubyBoaXRzLCBqdXN0IGFnZ3JlZ2F0aW9uIGJ1Y2tldHNcbiAgICAgIHF1ZXJ5OiBjcmVhdGVRdWVyeSh7XG4gICAgICAgIHN0YXJ0LFxuICAgICAgICBlbmQsXG4gICAgICAgIGNsdXN0ZXJVdWlkOiBudWxsXG4gICAgICB9KSxcbiAgICAgIGFnZ3M6IHtcbiAgICAgICAgY2x1c3Rlcl91dWlkczoge1xuICAgICAgICAgIHRlcm1zOiB7XG4gICAgICAgICAgICBmaWVsZDogJ2NsdXN0ZXJfdXVpZCdcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH07XG4gIHJldHVybiBjYWxsV2l0aFJlcXVlc3QocmVxLCAnc2VhcmNoJywgcGFyYW1zKVxuICAudGhlbihzdGF0c1Jlc3AgPT4ge1xuICAgIGNvbnN0IHN0YXRzQnVja2V0cyA9IF8uZ2V0KHN0YXRzUmVzcCwgJ2FnZ3JlZ2F0aW9ucy5jbHVzdGVyX3V1aWRzLmJ1Y2tldHMnKTtcbiAgICBpZiAoXy5pc0FycmF5KHN0YXRzQnVja2V0cykpIHtcblxuICAgICAgcmV0dXJuIFByb21pc2UubWFwKHN0YXRzQnVja2V0cywgKHV1aWRCdWNrZXQpID0+IHtcbiAgICAgICAgY29uc3QgY2x1c3RlciA9IHtcbiAgICAgICAgICBjbHVzdGVyX3V1aWQ6IHV1aWRCdWNrZXQua2V5XG4gICAgICAgIH07XG5cbiAgICAgICAgY29uc3QgaW5mb1BhcmFtcyA9IHtcbiAgICAgICAgICBpbmRleDogY29uZmlnLmdldCgnbWFydmVsLmluZGV4JyksXG4gICAgICAgICAgdHlwZTogJ2NsdXN0ZXJfaW5mbycsXG4gICAgICAgICAgbWV0YTogJ2dldF9jbHVzdGVyc19pbmZvJyxcbiAgICAgICAgICBpZDogY2x1c3Rlci5jbHVzdGVyX3V1aWRcbiAgICAgICAgfTtcblxuICAgICAgICByZXR1cm4gY2FsbFdpdGhSZXF1ZXN0KHJlcSwgJ2dldCcsIGluZm9QYXJhbXMpXG4gICAgICAgIC50aGVuKGluZm9SZXNwID0+IHtcbiAgICAgICAgICBjb25zdCBpbmZvRG9jID0gaW5mb1Jlc3AuX3NvdXJjZTtcblxuICAgICAgICAgIGNsdXN0ZXIuY2x1c3Rlcl9uYW1lID0gaW5mb0RvYy5jbHVzdGVyX25hbWU7XG4gICAgICAgICAgY29uc3QgbGljZW5zZSA9IGluZm9Eb2MubGljZW5zZTtcbiAgICAgICAgICBpZiAobGljZW5zZSAmJiB2YWxpZGF0ZU1hcnZlbExpY2Vuc2UoY2x1c3Rlci5jbHVzdGVyX3V1aWQsIGxpY2Vuc2UpKSB7XG4gICAgICAgICAgICBjbHVzdGVyLmxpY2Vuc2UgPSBsaWNlbnNlO1xuICAgICAgICAgICAgY2x1c3Rlci52ZXJzaW9uID0gaW5mb0RvYy52ZXJzaW9uO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHJldHVybiBjbHVzdGVyO1xuICAgICAgICB9KTtcbiAgICAgIH0pXG4gICAgICAvLyBPbmx5IHJldHVybiBjbHVzdGVycyB3aXRoIHZhbGlkIGxpY2Vuc2VzXG4gICAgICAuZmlsdGVyKGNsdXN0ZXIgPT4gY2x1c3Rlci5saWNlbnNlKTtcbiAgICB9XG4gIH0pO1xufTtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/get_clusters.js"
      ],
      "names": [],
      "mappings": ";;AAAA,IAAM,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC5B,IAAM,OAAO,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AACpC,IAAM,WAAW,GAAG,OAAO,CAAC,mBAAmB,CAAC,CAAC;AACjD,IAAM,qBAAqB,GAAG,OAAO,CAAC,2BAA2B,CAAC,CAAC;AACnE,MAAM,CAAC,OAAO,GAAG,SAAS,WAAW,CAAC,GAAG,EAAE,OAAO,EAAE;AAClD,MAAM,eAAe,GAAG,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,eAAe,CAAC;AACzE,MAAM,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;;AAEnC,MAAM,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC;AACxC,MAAM,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC;;AAEtC,MAAM,MAAM,GAAG;AACb,SAAK,EAAE,OAAO;AACd,QAAI,EAAE,eAAe;AACrB,QAAI,EAAE,oBAAoB;AAC1B,UAAM,EAAE,CAAC,GAAG,CAAC;;AAEb,QAAI,EAAE;AACJ,UAAI,EAAE,CAAC;AACP,WAAK,EAAE,WAAW,CAAC;AACjB,aAAK,EAAL,KAAK;AACL,WAAG,EAAH,GAAG;AACH,mBAAW,EAAE,IAAI;OAClB,CAAC;AACF,UAAI,EAAE;AACJ,qBAAa,EAAE;AACb,eAAK,EAAE;AACL,iBAAK,EAAE,cAAc;WACtB;SACF;OACF;KACF;GACF,CAAC;AACF,SAAO,eAAe,CAAC,GAAG,EAAE,QAAQ,EAAE,MAAM,CAAC,CAC5C,IAAI,CAAC,UAAA,SAAS,EAAI;AACjB,QAAM,YAAY,GAAG,CAAC,CAAC,GAAG,CAAC,SAAS,EAAE,oCAAoC,CAAC,CAAC;AAC5E,QAAI,CAAC,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE;;AAE3B,aAAO,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,UAAC,UAAU,EAAK;AAC/C,YAAM,OAAO,GAAG;AACd,sBAAY,EAAE,UAAU,CAAC,GAAG;SAC7B,CAAC;;AAEF,YAAM,UAAU,GAAG;AACjB,eAAK,EAAE,MAAM,CAAC,GAAG,CAAC,cAAc,CAAC;AACjC,cAAI,EAAE,cAAc;AACpB,cAAI,EAAE,mBAAmB;AACzB,YAAE,EAAE,OAAO,CAAC,YAAY;SACzB,CAAC;;AAEF,eAAO,eAAe,CAAC,GAAG,EAAE,KAAK,EAAE,UAAU,CAAC,CAC7C,IAAI,CAAC,UAAA,QAAQ,EAAI;AAChB,cAAM,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC;;AAEjC,iBAAO,CAAC,YAAY,GAAG,OAAO,CAAC,YAAY,CAAC;AAC5C,cAAM,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;AAChC,cAAI,OAAO,IAAI,qBAAqB,CAAC,OAAO,CAAC,YAAY,EAAE,OAAO,CAAC,EAAE;AACnE,mBAAO,CAAC,OAAO,GAAG,OAAO,CAAC;AAC1B,mBAAO,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;WACnC;;AAED,iBAAO,OAAO,CAAC;SAChB,CAAC,CAAC;OACJ,CAAC;;OAED,MAAM,CAAC,UAAA,OAAO;eAAI,OAAO,CAAC,OAAO;OAAA,CAAC,CAAC;KACrC;GACF,CAAC,CAAC;CACJ,CAAC",
      "file": "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/get_clusters.js",
      "sourcesContent": [
        "const _ = require('lodash');\nconst Promise = require('bluebird');\nconst createQuery = require('./create_query.js');\nconst validateMarvelLicense = require('./validate_marvel_license');\nmodule.exports = function getClusters(req, indices) {\n  const callWithRequest = req.server.plugins.elasticsearch.callWithRequest;\n  const config = req.server.config();\n  // Get the params from the POST body for the request\n  const start = req.payload.timeRange.min;\n  const end = req.payload.timeRange.max;\n\n  const params = {\n    index: indices,\n    type: 'cluster_stats',\n    meta: 'get_clusters_stats',\n    ignore: [404],\n    // terms agg for the cluster_uuids\n    body: {\n      size: 0, // return no hits, just aggregation buckets\n      query: createQuery({\n        start,\n        end,\n        clusterUuid: null\n      }),\n      aggs: {\n        cluster_uuids: {\n          terms: {\n            field: 'cluster_uuid'\n          }\n        }\n      }\n    }\n  };\n  return callWithRequest(req, 'search', params)\n  .then(statsResp => {\n    const statsBuckets = _.get(statsResp, 'aggregations.cluster_uuids.buckets');\n    if (_.isArray(statsBuckets)) {\n\n      return Promise.map(statsBuckets, (uuidBucket) => {\n        const cluster = {\n          cluster_uuid: uuidBucket.key\n        };\n\n        const infoParams = {\n          index: config.get('marvel.index'),\n          type: 'cluster_info',\n          meta: 'get_clusters_info',\n          id: cluster.cluster_uuid\n        };\n\n        return callWithRequest(req, 'get', infoParams)\n        .then(infoResp => {\n          const infoDoc = infoResp._source;\n\n          cluster.cluster_name = infoDoc.cluster_name;\n          const license = infoDoc.license;\n          if (license && validateMarvelLicense(cluster.cluster_uuid, license)) {\n            cluster.license = license;\n            cluster.version = infoDoc.version;\n          }\n\n          return cluster;\n        });\n      })\n      // Only return clusters with valid licenses\n      .filter(cluster => cluster.license);\n    }\n  });\n};\n"
      ]
    },
    "mtime": 1468947861000
  },
  "{\"filename\":\"/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/create_query.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "'use strict';\n\nvar _ = require('lodash');\nvar moment = require('moment');\nmodule.exports = function (options) {\n  options = _.defaults(options, { filters: [] });\n  var clusterFilter;\n  if (options.clusterUuid) {\n    clusterFilter = { term: { cluster_uuid: options.clusterUuid } };\n  }\n  var timeRangeFilter = {\n    range: {\n      timestamp: {\n        format: 'epoch_millis'\n      }\n    }\n  };\n  if (options.start) {\n    timeRangeFilter.range.timestamp.gte = moment.utc(options.start).valueOf();\n  }\n  if (options.end) {\n    timeRangeFilter.range.timestamp.lte = moment.utc(options.end).valueOf();\n  }\n  var filters = [clusterFilter].concat(options.filters);\n  if (options.end || options.start) {\n    filters.push(timeRangeFilter);\n  }\n  return {\n    filtered: {\n      filter: {\n        bool: {\n          must: filters\n        }\n      }\n    }\n  };\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9UaGVvL0Rlc2t0b3AvTmVidWxhVGVtcC9OZWJ1bGEvZWxhc3RpY3NlYXJjaC9pbnN0YWxsZWRQbHVnaW5zL21hcnZlbC9zZXJ2ZXIvbGliL2NyZWF0ZV9xdWVyeS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLElBQUksQ0FBQyxHQUFHLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQztBQUMxQixJQUFNLE1BQU0sR0FBRyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUM7QUFDakMsTUFBTSxDQUFDLE9BQU8sR0FBRyxVQUFDLE9BQU8sRUFBSztBQUM1QixTQUFPLEdBQUcsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxPQUFPLEVBQUUsRUFBRSxPQUFPLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQztBQUMvQyxNQUFJLGFBQWEsQ0FBQztBQUNsQixNQUFJLE9BQU8sQ0FBQyxXQUFXLEVBQUU7QUFDdkIsaUJBQWEsR0FBRyxFQUFFLElBQUksRUFBRSxFQUFFLFlBQVksRUFBRSxPQUFPLENBQUMsV0FBVyxFQUFFLEVBQUUsQ0FBQztHQUNqRTtBQUNELE1BQUksZUFBZSxHQUFHO0FBQ3BCLFNBQUssRUFBRTtBQUNMLGVBQVMsRUFBRTtBQUNULGNBQU0sRUFBRSxjQUFjO09BQ3ZCO0tBQ0Y7R0FDRixDQUFDO0FBQ0YsTUFBSSxPQUFPLENBQUMsS0FBSyxFQUFFO0FBQ2pCLG1CQUFlLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FBQyxHQUFHLEdBQUcsTUFBTSxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsT0FBTyxFQUFFLENBQUM7R0FDM0U7QUFDRCxNQUFJLE9BQU8sQ0FBQyxHQUFHLEVBQUU7QUFDZixtQkFBZSxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsR0FBRyxHQUFHLE1BQU0sQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLE9BQU8sRUFBRSxDQUFDO0dBQ3pFO0FBQ0QsTUFBTSxPQUFPLEdBQUcsQ0FBQyxhQUFhLENBQUMsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0FBQ3hELE1BQUksT0FBTyxDQUFDLEdBQUcsSUFBSSxPQUFPLENBQUMsS0FBSyxFQUFFO0FBQ2hDLFdBQU8sQ0FBQyxJQUFJLENBQUMsZUFBZSxDQUFDLENBQUM7R0FDL0I7QUFDRCxTQUFPO0FBQ0wsWUFBUSxFQUFFO0FBQ1IsWUFBTSxFQUFFO0FBQ04sWUFBSSxFQUFFO0FBQ0osY0FBSSxFQUFFLE9BQU87U0FDZDtPQUNGO0tBQ0Y7R0FDRixDQUFDO0NBQ0gsQ0FBQyIsImZpbGUiOiIvVXNlcnMvVGhlby9EZXNrdG9wL05lYnVsYVRlbXAvTmVidWxhL2VsYXN0aWNzZWFyY2gvaW5zdGFsbGVkUGx1Z2lucy9tYXJ2ZWwvc2VydmVyL2xpYi9jcmVhdGVfcXVlcnkuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgXyA9IHJlcXVpcmUoJ2xvZGFzaCcpO1xuY29uc3QgbW9tZW50ID0gcmVxdWlyZSgnbW9tZW50Jyk7XG5tb2R1bGUuZXhwb3J0cyA9IChvcHRpb25zKSA9PiB7XG4gIG9wdGlvbnMgPSBfLmRlZmF1bHRzKG9wdGlvbnMsIHsgZmlsdGVyczogW10gfSk7XG4gIHZhciBjbHVzdGVyRmlsdGVyO1xuICBpZiAob3B0aW9ucy5jbHVzdGVyVXVpZCkge1xuICAgIGNsdXN0ZXJGaWx0ZXIgPSB7IHRlcm06IHsgY2x1c3Rlcl91dWlkOiBvcHRpb25zLmNsdXN0ZXJVdWlkIH0gfTtcbiAgfVxuICB2YXIgdGltZVJhbmdlRmlsdGVyID0ge1xuICAgIHJhbmdlOiB7XG4gICAgICB0aW1lc3RhbXA6IHtcbiAgICAgICAgZm9ybWF0OiAnZXBvY2hfbWlsbGlzJ1xuICAgICAgfVxuICAgIH1cbiAgfTtcbiAgaWYgKG9wdGlvbnMuc3RhcnQpIHtcbiAgICB0aW1lUmFuZ2VGaWx0ZXIucmFuZ2UudGltZXN0YW1wLmd0ZSA9IG1vbWVudC51dGMob3B0aW9ucy5zdGFydCkudmFsdWVPZigpO1xuICB9XG4gIGlmIChvcHRpb25zLmVuZCkge1xuICAgIHRpbWVSYW5nZUZpbHRlci5yYW5nZS50aW1lc3RhbXAubHRlID0gbW9tZW50LnV0YyhvcHRpb25zLmVuZCkudmFsdWVPZigpO1xuICB9XG4gIGNvbnN0IGZpbHRlcnMgPSBbY2x1c3RlckZpbHRlcl0uY29uY2F0KG9wdGlvbnMuZmlsdGVycyk7XG4gIGlmIChvcHRpb25zLmVuZCB8fCBvcHRpb25zLnN0YXJ0KSB7XG4gICAgZmlsdGVycy5wdXNoKHRpbWVSYW5nZUZpbHRlcik7XG4gIH1cbiAgcmV0dXJuIHtcbiAgICBmaWx0ZXJlZDoge1xuICAgICAgZmlsdGVyOiB7XG4gICAgICAgIGJvb2w6IHtcbiAgICAgICAgICBtdXN0OiBmaWx0ZXJzXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH07XG59O1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/create_query.js"
      ],
      "names": [],
      "mappings": ";;AAAA,IAAI,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC1B,IAAM,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AACjC,MAAM,CAAC,OAAO,GAAG,UAAC,OAAO,EAAK;AAC5B,SAAO,GAAG,CAAC,CAAC,QAAQ,CAAC,OAAO,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC,CAAC;AAC/C,MAAI,aAAa,CAAC;AAClB,MAAI,OAAO,CAAC,WAAW,EAAE;AACvB,iBAAa,GAAG,EAAE,IAAI,EAAE,EAAE,YAAY,EAAE,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC;GACjE;AACD,MAAI,eAAe,GAAG;AACpB,SAAK,EAAE;AACL,eAAS,EAAE;AACT,cAAM,EAAE,cAAc;OACvB;KACF;GACF,CAAC;AACF,MAAI,OAAO,CAAC,KAAK,EAAE;AACjB,mBAAe,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,OAAO,EAAE,CAAC;GAC3E;AACD,MAAI,OAAO,CAAC,GAAG,EAAE;AACf,mBAAe,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,CAAC;GACzE;AACD,MAAM,OAAO,GAAG,CAAC,aAAa,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;AACxD,MAAI,OAAO,CAAC,GAAG,IAAI,OAAO,CAAC,KAAK,EAAE;AAChC,WAAO,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;GAC/B;AACD,SAAO;AACL,YAAQ,EAAE;AACR,YAAM,EAAE;AACN,YAAI,EAAE;AACJ,cAAI,EAAE,OAAO;SACd;OACF;KACF;GACF,CAAC;CACH,CAAC",
      "file": "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/create_query.js",
      "sourcesContent": [
        "var _ = require('lodash');\nconst moment = require('moment');\nmodule.exports = (options) => {\n  options = _.defaults(options, { filters: [] });\n  var clusterFilter;\n  if (options.clusterUuid) {\n    clusterFilter = { term: { cluster_uuid: options.clusterUuid } };\n  }\n  var timeRangeFilter = {\n    range: {\n      timestamp: {\n        format: 'epoch_millis'\n      }\n    }\n  };\n  if (options.start) {\n    timeRangeFilter.range.timestamp.gte = moment.utc(options.start).valueOf();\n  }\n  if (options.end) {\n    timeRangeFilter.range.timestamp.lte = moment.utc(options.end).valueOf();\n  }\n  const filters = [clusterFilter].concat(options.filters);\n  if (options.end || options.start) {\n    filters.push(timeRangeFilter);\n  }\n  return {\n    filtered: {\n      filter: {\n        bool: {\n          must: filters\n        }\n      }\n    }\n  };\n};\n"
      ]
    },
    "mtime": 1468947861000
  },
  "{\"filename\":\"/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/validate_marvel_license.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "'use strict';\n\nvar crypto = require('crypto');\nfunction sha256(input) {\n  return crypto.createHash('sha256').update(input).digest('hex');\n}\nmodule.exports = function (id, license) {\n  var hash = sha256('' + license.status + license.uid + license.type + license.expiry_date_in_millis + id);\n  return hash === license.hkey;\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9UaGVvL0Rlc2t0b3AvTmVidWxhVGVtcC9OZWJ1bGEvZWxhc3RpY3NlYXJjaC9pbnN0YWxsZWRQbHVnaW5zL21hcnZlbC9zZXJ2ZXIvbGliL3ZhbGlkYXRlX21hcnZlbF9saWNlbnNlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBSSxNQUFNLEdBQUcsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0FBQy9CLFNBQVMsTUFBTSxDQUFDLEtBQUssRUFBRTtBQUNyQixTQUFPLE1BQU0sQ0FBQyxVQUFVLENBQUMsUUFBUSxDQUFDLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQztDQUNoRTtBQUNELE1BQU0sQ0FBQyxPQUFPLEdBQUcsVUFBVSxFQUFFLEVBQUUsT0FBTyxFQUFFO0FBQ3RDLE1BQUksSUFBSSxHQUFHLE1BQU0sTUFBSSxPQUFPLENBQUMsTUFBTSxHQUFHLE9BQU8sQ0FBQyxHQUFHLEdBQUcsT0FBTyxDQUFDLElBQUksR0FBRyxPQUFPLENBQUMscUJBQXFCLEdBQUcsRUFBRSxDQUFHLENBQUM7QUFDekcsU0FBTyxJQUFJLEtBQUssT0FBTyxDQUFDLElBQUksQ0FBQztDQUM5QixDQUFDIiwiZmlsZSI6Ii9Vc2Vycy9UaGVvL0Rlc2t0b3AvTmVidWxhVGVtcC9OZWJ1bGEvZWxhc3RpY3NlYXJjaC9pbnN0YWxsZWRQbHVnaW5zL21hcnZlbC9zZXJ2ZXIvbGliL3ZhbGlkYXRlX21hcnZlbF9saWNlbnNlLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGNyeXB0byA9IHJlcXVpcmUoJ2NyeXB0bycpO1xuZnVuY3Rpb24gc2hhMjU2KGlucHV0KSB7XG4gIHJldHVybiBjcnlwdG8uY3JlYXRlSGFzaCgnc2hhMjU2JykudXBkYXRlKGlucHV0KS5kaWdlc3QoJ2hleCcpO1xufVxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaWQsIGxpY2Vuc2UpIHtcbiAgbGV0IGhhc2ggPSBzaGEyNTYoYCR7bGljZW5zZS5zdGF0dXN9JHtsaWNlbnNlLnVpZH0ke2xpY2Vuc2UudHlwZX0ke2xpY2Vuc2UuZXhwaXJ5X2RhdGVfaW5fbWlsbGlzfSR7aWR9YCk7XG4gIHJldHVybiBoYXNoID09PSBsaWNlbnNlLmhrZXk7XG59O1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/validate_marvel_license.js"
      ],
      "names": [],
      "mappings": ";;AAAA,IAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC/B,SAAS,MAAM,CAAC,KAAK,EAAE;AACrB,SAAO,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;CAChE;AACD,MAAM,CAAC,OAAO,GAAG,UAAU,EAAE,EAAE,OAAO,EAAE;AACtC,MAAI,IAAI,GAAG,MAAM,MAAI,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC,GAAG,GAAG,OAAO,CAAC,IAAI,GAAG,OAAO,CAAC,qBAAqB,GAAG,EAAE,CAAG,CAAC;AACzG,SAAO,IAAI,KAAK,OAAO,CAAC,IAAI,CAAC;CAC9B,CAAC",
      "file": "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/validate_marvel_license.js",
      "sourcesContent": [
        "var crypto = require('crypto');\nfunction sha256(input) {\n  return crypto.createHash('sha256').update(input).digest('hex');\n}\nmodule.exports = function (id, license) {\n  let hash = sha256(`${license.status}${license.uid}${license.type}${license.expiry_date_in_millis}${id}`);\n  return hash === license.hkey;\n};\n"
      ]
    },
    "mtime": 1468947861000
  },
  "{\"filename\":\"/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/get_clusters_health.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [
          {
            "source": "lodash",
            "imported": [
              "get",
              "find",
              "indexBy"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "get",
                "local": "get"
              },
              {
                "kind": "named",
                "imported": "find",
                "local": "find"
              },
              {
                "kind": "named",
                "imported": "indexBy",
                "local": "indexBy"
              }
            ]
          },
          {
            "source": "moment",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "moment"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": [
        "interop-require-default"
      ]
    },
    "ignored": false,
    "code": "'use strict';\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _lodash = require('lodash');\n\nvar _moment = require('moment');\n\nvar _moment2 = _interopRequireDefault(_moment);\n\nmodule.exports = function (req) {\n  var server = req.server;\n  var callWithRequest = server.plugins.elasticsearch.callWithRequest;\n  var config = server.config();\n  return function (clusters) {\n    var bodies = [];\n    clusters.forEach(function (cluster) {\n      bodies.push({\n        index: config.get('marvel.index_prefix') + '*',\n        type: 'cluster_state'\n      });\n      bodies.push({\n        size: 1,\n        sort: {\n          'timestamp': { order: 'desc' }\n        },\n        query: {\n          filtered: {\n            filter: {\n              term: {\n                'cluster_uuid': cluster.cluster_uuid\n              }\n            }\n          }\n        }\n      });\n    });\n    if (!bodies.length) return Promise.resolve();\n    var params = {\n      index: config.get('marvel.index_prefix') + '*',\n      type: 'cluster_state',\n      body: bodies\n    };\n    return callWithRequest(req, 'msearch', params).then(function (res) {\n      res.responses.forEach(function (resp) {\n        var hit = (0, _lodash.get)(resp, 'hits.hits[0]');\n        if (resp && resp.hits && resp.hits.total !== 0) {\n          var clusterName = (0, _lodash.get)(hit, '_source.cluster_uuid');\n          var nodes = (0, _lodash.get)(hit, '_source.cluster_state.nodes');\n          var cluster = (0, _lodash.find)(clusters, { cluster_uuid: clusterName });\n          cluster.status = (0, _lodash.get)(hit, '_source.cluster_state.status');\n          cluster.state_uuid = (0, _lodash.get)(hit, '_source.cluster_state.state_uuid');\n          cluster.state_timestamp = (0, _lodash.get)(hit, '_source.timestamp');\n          cluster.nodes = (0, _lodash.indexBy)(nodes, config.get('marvel.node_resolver'));\n        }\n      });\n      return clusters;\n    });\n  };\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9UaGVvL0Rlc2t0b3AvTmVidWxhVGVtcC9OZWJ1bGEvZWxhc3RpY3NlYXJjaC9pbnN0YWxsZWRQbHVnaW5zL21hcnZlbC9zZXJ2ZXIvbGliL2dldF9jbHVzdGVyc19oZWFsdGguanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztzQkFBbUMsUUFBUTs7c0JBQ3hCLFFBQVE7Ozs7QUFFM0IsTUFBTSxDQUFDLE9BQU8sR0FBRyxVQUFVLEdBQUcsRUFBRTtBQUM5QixNQUFNLE1BQU0sR0FBRyxHQUFHLENBQUMsTUFBTSxDQUFDO0FBQzFCLE1BQU0sZUFBZSxHQUFHLE1BQU0sQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDLGVBQWUsQ0FBQztBQUNyRSxNQUFNLE1BQU0sR0FBRyxNQUFNLENBQUMsTUFBTSxFQUFFLENBQUM7QUFDL0IsU0FBTyxVQUFVLFFBQVEsRUFBRTtBQUN6QixRQUFNLE1BQU0sR0FBRyxFQUFFLENBQUM7QUFDbEIsWUFBUSxDQUFDLE9BQU8sQ0FBQyxVQUFDLE9BQU8sRUFBSztBQUM1QixZQUFNLENBQUMsSUFBSSxDQUFDO0FBQ1YsYUFBSyxFQUFFLE1BQU0sQ0FBQyxHQUFHLENBQUMscUJBQXFCLENBQUMsR0FBRyxHQUFHO0FBQzlDLFlBQUksRUFBRSxlQUFlO09BQ3RCLENBQUMsQ0FBQztBQUNILFlBQU0sQ0FBQyxJQUFJLENBQUM7QUFDVixZQUFJLEVBQUUsQ0FBQztBQUNQLFlBQUksRUFBRTtBQUNKLHFCQUFXLEVBQUUsRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFO1NBQy9CO0FBQ0QsYUFBSyxFQUFFO0FBQ0wsa0JBQVEsRUFBRTtBQUNSLGtCQUFNLEVBQUU7QUFDTixrQkFBSSxFQUFFO0FBQ0osOEJBQWMsRUFBRSxPQUFPLENBQUMsWUFBWTtlQUNyQzthQUNGO1dBQ0Y7U0FDRjtPQUNGLENBQUMsQ0FBQztLQUNKLENBQUMsQ0FBQztBQUNILFFBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxFQUFFLE9BQU8sT0FBTyxDQUFDLE9BQU8sRUFBRSxDQUFDO0FBQzdDLFFBQU0sTUFBTSxHQUFHO0FBQ2IsV0FBSyxFQUFFLE1BQU0sQ0FBQyxHQUFHLENBQUMscUJBQXFCLENBQUMsR0FBRyxHQUFHO0FBQzlDLFVBQUksRUFBRSxlQUFlO0FBQ3JCLFVBQUksRUFBRSxNQUFNO0tBQ2IsQ0FBQztBQUNGLFdBQU8sZUFBZSxDQUFDLEdBQUcsRUFBRSxTQUFTLEVBQUUsTUFBTSxDQUFDLENBQzdDLElBQUksQ0FBQyxVQUFBLEdBQUcsRUFBSTtBQUNYLFNBQUcsQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLFVBQUEsSUFBSSxFQUFJO0FBQzVCLFlBQU0sR0FBRyxHQUFHLGlCQUFJLElBQUksRUFBRSxjQUFjLENBQUMsQ0FBQztBQUN0QyxZQUFJLElBQUksSUFBSSxJQUFJLENBQUMsSUFBSSxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxLQUFLLENBQUMsRUFBRTtBQUM5QyxjQUFNLFdBQVcsR0FBRyxpQkFBSSxHQUFHLEVBQUUsc0JBQXNCLENBQUMsQ0FBQztBQUNyRCxjQUFNLEtBQUssR0FBRyxpQkFBSSxHQUFHLEVBQUUsNkJBQTZCLENBQUMsQ0FBQztBQUN0RCxjQUFNLE9BQU8sR0FBRyxrQkFBSyxRQUFRLEVBQUUsRUFBRSxZQUFZLEVBQUUsV0FBVyxFQUFFLENBQUMsQ0FBQztBQUM5RCxpQkFBTyxDQUFDLE1BQU0sR0FBRyxpQkFBSSxHQUFHLEVBQUUsOEJBQThCLENBQUMsQ0FBQztBQUMxRCxpQkFBTyxDQUFDLFVBQVUsR0FBRyxpQkFBSSxHQUFHLEVBQUUsa0NBQWtDLENBQUMsQ0FBQztBQUNsRSxpQkFBTyxDQUFDLGVBQWUsR0FBRyxpQkFBSSxHQUFHLEVBQUUsbUJBQW1CLENBQUMsQ0FBQztBQUN4RCxpQkFBTyxDQUFDLEtBQUssR0FBRyxxQkFBUSxLQUFLLEVBQUUsTUFBTSxDQUFDLEdBQUcsQ0FBQyxzQkFBc0IsQ0FBQyxDQUFDLENBQUM7U0FDcEU7T0FDRixDQUFDLENBQUM7QUFDSCxhQUFPLFFBQVEsQ0FBQztLQUNqQixDQUFDLENBQUM7R0FDSixDQUFDO0NBQ0gsQ0FBQyIsImZpbGUiOiIvVXNlcnMvVGhlby9EZXNrdG9wL05lYnVsYVRlbXAvTmVidWxhL2VsYXN0aWNzZWFyY2gvaW5zdGFsbGVkUGx1Z2lucy9tYXJ2ZWwvc2VydmVyL2xpYi9nZXRfY2x1c3RlcnNfaGVhbHRoLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0LCBmaW5kLCBpbmRleEJ5IH0gZnJvbSAnbG9kYXNoJztcbmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50JztcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAocmVxKSB7XG4gIGNvbnN0IHNlcnZlciA9IHJlcS5zZXJ2ZXI7XG4gIGNvbnN0IGNhbGxXaXRoUmVxdWVzdCA9IHNlcnZlci5wbHVnaW5zLmVsYXN0aWNzZWFyY2guY2FsbFdpdGhSZXF1ZXN0O1xuICBjb25zdCBjb25maWcgPSBzZXJ2ZXIuY29uZmlnKCk7XG4gIHJldHVybiBmdW5jdGlvbiAoY2x1c3RlcnMpIHtcbiAgICBjb25zdCBib2RpZXMgPSBbXTtcbiAgICBjbHVzdGVycy5mb3JFYWNoKChjbHVzdGVyKSA9PiB7XG4gICAgICBib2RpZXMucHVzaCh7XG4gICAgICAgIGluZGV4OiBjb25maWcuZ2V0KCdtYXJ2ZWwuaW5kZXhfcHJlZml4JykgKyAnKicsXG4gICAgICAgIHR5cGU6ICdjbHVzdGVyX3N0YXRlJ1xuICAgICAgfSk7XG4gICAgICBib2RpZXMucHVzaCh7XG4gICAgICAgIHNpemU6IDEsXG4gICAgICAgIHNvcnQ6IHtcbiAgICAgICAgICAndGltZXN0YW1wJzogeyBvcmRlcjogJ2Rlc2MnIH1cbiAgICAgICAgfSxcbiAgICAgICAgcXVlcnk6IHtcbiAgICAgICAgICBmaWx0ZXJlZDoge1xuICAgICAgICAgICAgZmlsdGVyOiB7XG4gICAgICAgICAgICAgIHRlcm06IHtcbiAgICAgICAgICAgICAgICAnY2x1c3Rlcl91dWlkJzogY2x1c3Rlci5jbHVzdGVyX3V1aWRcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSk7XG4gICAgaWYgKCFib2RpZXMubGVuZ3RoKSByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKCk7XG4gICAgY29uc3QgcGFyYW1zID0ge1xuICAgICAgaW5kZXg6IGNvbmZpZy5nZXQoJ21hcnZlbC5pbmRleF9wcmVmaXgnKSArICcqJyxcbiAgICAgIHR5cGU6ICdjbHVzdGVyX3N0YXRlJyxcbiAgICAgIGJvZHk6IGJvZGllc1xuICAgIH07XG4gICAgcmV0dXJuIGNhbGxXaXRoUmVxdWVzdChyZXEsICdtc2VhcmNoJywgcGFyYW1zKVxuICAgIC50aGVuKHJlcyA9PiB7XG4gICAgICByZXMucmVzcG9uc2VzLmZvckVhY2gocmVzcCA9PiB7XG4gICAgICAgIGNvbnN0IGhpdCA9IGdldChyZXNwLCAnaGl0cy5oaXRzWzBdJyk7XG4gICAgICAgIGlmIChyZXNwICYmIHJlc3AuaGl0cyAmJiByZXNwLmhpdHMudG90YWwgIT09IDApIHtcbiAgICAgICAgICBjb25zdCBjbHVzdGVyTmFtZSA9IGdldChoaXQsICdfc291cmNlLmNsdXN0ZXJfdXVpZCcpO1xuICAgICAgICAgIGNvbnN0IG5vZGVzID0gZ2V0KGhpdCwgJ19zb3VyY2UuY2x1c3Rlcl9zdGF0ZS5ub2RlcycpO1xuICAgICAgICAgIGNvbnN0IGNsdXN0ZXIgPSBmaW5kKGNsdXN0ZXJzLCB7IGNsdXN0ZXJfdXVpZDogY2x1c3Rlck5hbWUgfSk7XG4gICAgICAgICAgY2x1c3Rlci5zdGF0dXMgPSBnZXQoaGl0LCAnX3NvdXJjZS5jbHVzdGVyX3N0YXRlLnN0YXR1cycpO1xuICAgICAgICAgIGNsdXN0ZXIuc3RhdGVfdXVpZCA9IGdldChoaXQsICdfc291cmNlLmNsdXN0ZXJfc3RhdGUuc3RhdGVfdXVpZCcpO1xuICAgICAgICAgIGNsdXN0ZXIuc3RhdGVfdGltZXN0YW1wID0gZ2V0KGhpdCwgJ19zb3VyY2UudGltZXN0YW1wJyk7XG4gICAgICAgICAgY2x1c3Rlci5ub2RlcyA9IGluZGV4Qnkobm9kZXMsIGNvbmZpZy5nZXQoJ21hcnZlbC5ub2RlX3Jlc29sdmVyJykpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIHJldHVybiBjbHVzdGVycztcbiAgICB9KTtcbiAgfTtcbn07XG5cblxuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/get_clusters_health.js"
      ],
      "names": [],
      "mappings": ";;;;sBAAmC,QAAQ;;sBACxB,QAAQ;;;;AAE3B,MAAM,CAAC,OAAO,GAAG,UAAU,GAAG,EAAE;AAC9B,MAAM,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;AAC1B,MAAM,eAAe,GAAG,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,eAAe,CAAC;AACrE,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;AAC/B,SAAO,UAAU,QAAQ,EAAE;AACzB,QAAM,MAAM,GAAG,EAAE,CAAC;AAClB,YAAQ,CAAC,OAAO,CAAC,UAAC,OAAO,EAAK;AAC5B,YAAM,CAAC,IAAI,CAAC;AACV,aAAK,EAAE,MAAM,CAAC,GAAG,CAAC,qBAAqB,CAAC,GAAG,GAAG;AAC9C,YAAI,EAAE,eAAe;OACtB,CAAC,CAAC;AACH,YAAM,CAAC,IAAI,CAAC;AACV,YAAI,EAAE,CAAC;AACP,YAAI,EAAE;AACJ,qBAAW,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE;SAC/B;AACD,aAAK,EAAE;AACL,kBAAQ,EAAE;AACR,kBAAM,EAAE;AACN,kBAAI,EAAE;AACJ,8BAAc,EAAE,OAAO,CAAC,YAAY;eACrC;aACF;WACF;SACF;OACF,CAAC,CAAC;KACJ,CAAC,CAAC;AACH,QAAI,CAAC,MAAM,CAAC,MAAM,EAAE,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;AAC7C,QAAM,MAAM,GAAG;AACb,WAAK,EAAE,MAAM,CAAC,GAAG,CAAC,qBAAqB,CAAC,GAAG,GAAG;AAC9C,UAAI,EAAE,eAAe;AACrB,UAAI,EAAE,MAAM;KACb,CAAC;AACF,WAAO,eAAe,CAAC,GAAG,EAAE,SAAS,EAAE,MAAM,CAAC,CAC7C,IAAI,CAAC,UAAA,GAAG,EAAI;AACX,SAAG,CAAC,SAAS,CAAC,OAAO,CAAC,UAAA,IAAI,EAAI;AAC5B,YAAM,GAAG,GAAG,iBAAI,IAAI,EAAE,cAAc,CAAC,CAAC;AACtC,YAAI,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,KAAK,CAAC,EAAE;AAC9C,cAAM,WAAW,GAAG,iBAAI,GAAG,EAAE,sBAAsB,CAAC,CAAC;AACrD,cAAM,KAAK,GAAG,iBAAI,GAAG,EAAE,6BAA6B,CAAC,CAAC;AACtD,cAAM,OAAO,GAAG,kBAAK,QAAQ,EAAE,EAAE,YAAY,EAAE,WAAW,EAAE,CAAC,CAAC;AAC9D,iBAAO,CAAC,MAAM,GAAG,iBAAI,GAAG,EAAE,8BAA8B,CAAC,CAAC;AAC1D,iBAAO,CAAC,UAAU,GAAG,iBAAI,GAAG,EAAE,kCAAkC,CAAC,CAAC;AAClE,iBAAO,CAAC,eAAe,GAAG,iBAAI,GAAG,EAAE,mBAAmB,CAAC,CAAC;AACxD,iBAAO,CAAC,KAAK,GAAG,qBAAQ,KAAK,EAAE,MAAM,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC,CAAC;SACpE;OACF,CAAC,CAAC;AACH,aAAO,QAAQ,CAAC;KACjB,CAAC,CAAC;GACJ,CAAC;CACH,CAAC",
      "file": "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/get_clusters_health.js",
      "sourcesContent": [
        "import { get, find, indexBy } from 'lodash';\nimport moment from 'moment';\n\nmodule.exports = function (req) {\n  const server = req.server;\n  const callWithRequest = server.plugins.elasticsearch.callWithRequest;\n  const config = server.config();\n  return function (clusters) {\n    const bodies = [];\n    clusters.forEach((cluster) => {\n      bodies.push({\n        index: config.get('marvel.index_prefix') + '*',\n        type: 'cluster_state'\n      });\n      bodies.push({\n        size: 1,\n        sort: {\n          'timestamp': { order: 'desc' }\n        },\n        query: {\n          filtered: {\n            filter: {\n              term: {\n                'cluster_uuid': cluster.cluster_uuid\n              }\n            }\n          }\n        }\n      });\n    });\n    if (!bodies.length) return Promise.resolve();\n    const params = {\n      index: config.get('marvel.index_prefix') + '*',\n      type: 'cluster_state',\n      body: bodies\n    };\n    return callWithRequest(req, 'msearch', params)\n    .then(res => {\n      res.responses.forEach(resp => {\n        const hit = get(resp, 'hits.hits[0]');\n        if (resp && resp.hits && resp.hits.total !== 0) {\n          const clusterName = get(hit, '_source.cluster_uuid');\n          const nodes = get(hit, '_source.cluster_state.nodes');\n          const cluster = find(clusters, { cluster_uuid: clusterName });\n          cluster.status = get(hit, '_source.cluster_state.status');\n          cluster.state_uuid = get(hit, '_source.cluster_state.state_uuid');\n          cluster.state_timestamp = get(hit, '_source.timestamp');\n          cluster.nodes = indexBy(nodes, config.get('marvel.node_resolver'));\n        }\n      });\n      return clusters;\n    });\n  };\n};\n\n\n"
      ]
    },
    "mtime": 1468947861000
  },
  "{\"filename\":\"/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/calculate_indices.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "'use strict';\n\nvar _ = require('lodash');\nvar Promise = require('bluebird');\nvar moment = require('moment');\nmodule.exports = function (req, start, end) {\n  var server = req.server;\n  var config = server.config();\n  var pattern = config.get('marvel.index_prefix') + '*';\n  var callWithRequest = server.plugins.elasticsearch.callWithRequest;\n  var options = {\n    index: pattern,\n    level: 'indices',\n    ignoreUnavailable: true,\n    body: {\n      fields: ['timestamp'],\n      index_constraints: {\n        timestamp: {\n          max_value: { gte: moment.utc(start).toISOString() },\n          min_value: { lte: moment.utc(end).toISOString() }\n        }\n      }\n    }\n  };\n  return callWithRequest(req, 'fieldStats', options).then(function (resp) {\n    var indices = _.map(resp.indices, function (info, index) {\n      return index;\n    });\n    if (indices.length === 0) return ['.kibana-devnull'];\n    return indices.filter(function (index) {\n      return index !== config.get('marvel.index');\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9UaGVvL0Rlc2t0b3AvTmVidWxhVGVtcC9OZWJ1bGEvZWxhc3RpY3NlYXJjaC9pbnN0YWxsZWRQbHVnaW5zL21hcnZlbC9zZXJ2ZXIvbGliL2NhbGN1bGF0ZV9pbmRpY2VzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBSSxDQUFDLEdBQUcsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0FBQzFCLElBQUksT0FBTyxHQUFHLE9BQU8sQ0FBQyxVQUFVLENBQUMsQ0FBQztBQUNsQyxJQUFJLE1BQU0sR0FBRyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUM7QUFDL0IsTUFBTSxDQUFDLE9BQU8sR0FBRyxVQUFVLEdBQUcsRUFBRSxLQUFLLEVBQUUsR0FBRyxFQUFFO0FBQzFDLE1BQUksTUFBTSxHQUFHLEdBQUcsQ0FBQyxNQUFNLENBQUM7QUFDeEIsTUFBSSxNQUFNLEdBQUcsTUFBTSxDQUFDLE1BQU0sRUFBRSxDQUFDO0FBQzdCLE1BQUksT0FBTyxHQUFHLE1BQU0sQ0FBQyxHQUFHLENBQUMscUJBQXFCLENBQUMsR0FBRyxHQUFHLENBQUM7QUFDdEQsTUFBSSxlQUFlLEdBQUcsTUFBTSxDQUFDLE9BQU8sQ0FBQyxhQUFhLENBQUMsZUFBZSxDQUFDO0FBQ25FLE1BQUksT0FBTyxHQUFHO0FBQ1osU0FBSyxFQUFFLE9BQU87QUFDZCxTQUFLLEVBQUUsU0FBUztBQUNoQixxQkFBaUIsRUFBRSxJQUFJO0FBQ3ZCLFFBQUksRUFBRTtBQUNKLFlBQU0sRUFBRSxDQUFDLFdBQVcsQ0FBQztBQUNyQix1QkFBaUIsRUFBRTtBQUNqQixpQkFBUyxFQUFFO0FBQ1QsbUJBQVMsRUFBRSxFQUFFLEdBQUcsRUFBRSxNQUFNLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDLFdBQVcsRUFBRSxFQUFFO0FBQ25ELG1CQUFTLEVBQUUsRUFBRSxHQUFHLEVBQUUsTUFBTSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxXQUFXLEVBQUUsRUFBRTtTQUNsRDtPQUNGO0tBQ0Y7R0FDRixDQUFDO0FBQ0YsU0FBTyxlQUFlLENBQUMsR0FBRyxFQUFFLFlBQVksRUFBRSxPQUFPLENBQUMsQ0FDL0MsSUFBSSxDQUFDLFVBQVUsSUFBSSxFQUFFO0FBQ3BCLFFBQUksT0FBTyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRSxVQUFVLElBQUksRUFBRSxLQUFLLEVBQUU7QUFDdkQsYUFBTyxLQUFLLENBQUM7S0FDZCxDQUFDLENBQUM7QUFDSCxRQUFJLE9BQU8sQ0FBQyxNQUFNLEtBQUssQ0FBQyxFQUFFLE9BQU8sQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO0FBQ3JELFdBQU8sT0FBTyxDQUFDLE1BQU0sQ0FBQyxVQUFDLEtBQUs7YUFBSyxLQUFLLEtBQUssTUFBTSxDQUFDLEdBQUcsQ0FBQyxjQUFjLENBQUM7S0FBQSxDQUFDLENBQUM7R0FDeEUsQ0FBQyxDQUFDO0NBQ04sQ0FBQyIsImZpbGUiOiIvVXNlcnMvVGhlby9EZXNrdG9wL05lYnVsYVRlbXAvTmVidWxhL2VsYXN0aWNzZWFyY2gvaW5zdGFsbGVkUGx1Z2lucy9tYXJ2ZWwvc2VydmVyL2xpYi9jYWxjdWxhdGVfaW5kaWNlcy5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBfID0gcmVxdWlyZSgnbG9kYXNoJyk7XG52YXIgUHJvbWlzZSA9IHJlcXVpcmUoJ2JsdWViaXJkJyk7XG52YXIgbW9tZW50ID0gcmVxdWlyZSgnbW9tZW50Jyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChyZXEsIHN0YXJ0LCBlbmQpIHtcbiAgdmFyIHNlcnZlciA9IHJlcS5zZXJ2ZXI7XG4gIHZhciBjb25maWcgPSBzZXJ2ZXIuY29uZmlnKCk7XG4gIHZhciBwYXR0ZXJuID0gY29uZmlnLmdldCgnbWFydmVsLmluZGV4X3ByZWZpeCcpICsgJyonO1xuICB2YXIgY2FsbFdpdGhSZXF1ZXN0ID0gc2VydmVyLnBsdWdpbnMuZWxhc3RpY3NlYXJjaC5jYWxsV2l0aFJlcXVlc3Q7XG4gIHZhciBvcHRpb25zID0ge1xuICAgIGluZGV4OiBwYXR0ZXJuLFxuICAgIGxldmVsOiAnaW5kaWNlcycsXG4gICAgaWdub3JlVW5hdmFpbGFibGU6IHRydWUsXG4gICAgYm9keToge1xuICAgICAgZmllbGRzOiBbJ3RpbWVzdGFtcCddLFxuICAgICAgaW5kZXhfY29uc3RyYWludHM6IHtcbiAgICAgICAgdGltZXN0YW1wOiB7XG4gICAgICAgICAgbWF4X3ZhbHVlOiB7IGd0ZTogbW9tZW50LnV0YyhzdGFydCkudG9JU09TdHJpbmcoKSB9LFxuICAgICAgICAgIG1pbl92YWx1ZTogeyBsdGU6IG1vbWVudC51dGMoZW5kKS50b0lTT1N0cmluZygpIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfTtcbiAgcmV0dXJuIGNhbGxXaXRoUmVxdWVzdChyZXEsICdmaWVsZFN0YXRzJywgb3B0aW9ucylcbiAgICAudGhlbihmdW5jdGlvbiAocmVzcCkge1xuICAgICAgdmFyIGluZGljZXMgPSBfLm1hcChyZXNwLmluZGljZXMsIGZ1bmN0aW9uIChpbmZvLCBpbmRleCkge1xuICAgICAgICByZXR1cm4gaW5kZXg7XG4gICAgICB9KTtcbiAgICAgIGlmIChpbmRpY2VzLmxlbmd0aCA9PT0gMCkgcmV0dXJuIFsnLmtpYmFuYS1kZXZudWxsJ107XG4gICAgICByZXR1cm4gaW5kaWNlcy5maWx0ZXIoKGluZGV4KSA9PiBpbmRleCAhPT0gY29uZmlnLmdldCgnbWFydmVsLmluZGV4JykpO1xuICAgIH0pO1xufTtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/calculate_indices.js"
      ],
      "names": [],
      "mappings": ";;AAAA,IAAI,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC1B,IAAI,OAAO,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AAClC,IAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC/B,MAAM,CAAC,OAAO,GAAG,UAAU,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;AAC1C,MAAI,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;AACxB,MAAI,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;AAC7B,MAAI,OAAO,GAAG,MAAM,CAAC,GAAG,CAAC,qBAAqB,CAAC,GAAG,GAAG,CAAC;AACtD,MAAI,eAAe,GAAG,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,eAAe,CAAC;AACnE,MAAI,OAAO,GAAG;AACZ,SAAK,EAAE,OAAO;AACd,SAAK,EAAE,SAAS;AAChB,qBAAiB,EAAE,IAAI;AACvB,QAAI,EAAE;AACJ,YAAM,EAAE,CAAC,WAAW,CAAC;AACrB,uBAAiB,EAAE;AACjB,iBAAS,EAAE;AACT,mBAAS,EAAE,EAAE,GAAG,EAAE,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,WAAW,EAAE,EAAE;AACnD,mBAAS,EAAE,EAAE,GAAG,EAAE,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,WAAW,EAAE,EAAE;SAClD;OACF;KACF;GACF,CAAC;AACF,SAAO,eAAe,CAAC,GAAG,EAAE,YAAY,EAAE,OAAO,CAAC,CAC/C,IAAI,CAAC,UAAU,IAAI,EAAE;AACpB,QAAI,OAAO,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,UAAU,IAAI,EAAE,KAAK,EAAE;AACvD,aAAO,KAAK,CAAC;KACd,CAAC,CAAC;AACH,QAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE,OAAO,CAAC,iBAAiB,CAAC,CAAC;AACrD,WAAO,OAAO,CAAC,MAAM,CAAC,UAAC,KAAK;aAAK,KAAK,KAAK,MAAM,CAAC,GAAG,CAAC,cAAc,CAAC;KAAA,CAAC,CAAC;GACxE,CAAC,CAAC;CACN,CAAC",
      "file": "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/calculate_indices.js",
      "sourcesContent": [
        "var _ = require('lodash');\nvar Promise = require('bluebird');\nvar moment = require('moment');\nmodule.exports = function (req, start, end) {\n  var server = req.server;\n  var config = server.config();\n  var pattern = config.get('marvel.index_prefix') + '*';\n  var callWithRequest = server.plugins.elasticsearch.callWithRequest;\n  var options = {\n    index: pattern,\n    level: 'indices',\n    ignoreUnavailable: true,\n    body: {\n      fields: ['timestamp'],\n      index_constraints: {\n        timestamp: {\n          max_value: { gte: moment.utc(start).toISOString() },\n          min_value: { lte: moment.utc(end).toISOString() }\n        }\n      }\n    }\n  };\n  return callWithRequest(req, 'fieldStats', options)\n    .then(function (resp) {\n      var indices = _.map(resp.indices, function (info, index) {\n        return index;\n      });\n      if (indices.length === 0) return ['.kibana-devnull'];\n      return indices.filter((index) => index !== config.get('marvel.index'));\n    });\n};\n"
      ]
    },
    "mtime": 1468947861000
  },
  "{\"filename\":\"/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/get_last_state.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "'use strict';\n\nvar _ = require('lodash');\nvar createQuery = require('./create_query.js');\n\nmodule.exports = function (req, indices) {\n  var callWithRequest = req.server.plugins.elasticsearch.callWithRequest;\n  var start = req.payload.timeRange.min;\n  var end = req.payload.timeRange.max;\n  var clusterUuid = req.params.clusterUuid;\n  var config = req.server.config();\n  var resolver = config.get('marvel.node_resolver');\n\n  var params = {\n    index: indices,\n    type: 'cluster_state',\n    ignore: [404],\n    body: {\n      size: 1,\n      sort: { timestamp: { order: 'desc' } },\n      query: createQuery({ end: end, clusterUuid: clusterUuid })\n    }\n  };\n\n  return callWithRequest(req, 'search', params).then(function (resp) {\n    var total = _.get(resp, 'hits.total', 0);\n    if (!total) return;\n    var lastState = _.get(resp, 'hits.hits[0]._source');\n    var nodes = _.get(lastState, 'cluster_state.nodes');\n    if (nodes) {\n      // re-key the nodes objects to use resolver\n      lastState.cluster_state.nodes = _.indexBy(nodes, function (node) {\n        return node[resolver];\n      });\n    }\n    return lastState;\n  });\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9UaGVvL0Rlc2t0b3AvTmVidWxhVGVtcC9OZWJ1bGEvZWxhc3RpY3NlYXJjaC9pbnN0YWxsZWRQbHVnaW5zL21hcnZlbC9zZXJ2ZXIvbGliL2dldF9sYXN0X3N0YXRlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBTSxDQUFDLEdBQUcsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0FBQzVCLElBQU0sV0FBVyxHQUFHLE9BQU8sQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDOztBQUVqRCxNQUFNLENBQUMsT0FBTyxHQUFHLFVBQUMsR0FBRyxFQUFFLE9BQU8sRUFBSztBQUNqQyxNQUFNLGVBQWUsR0FBRyxHQUFHLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxhQUFhLENBQUMsZUFBZSxDQUFDO0FBQ3pFLE1BQU0sS0FBSyxHQUFHLEdBQUcsQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQztBQUN4QyxNQUFNLEdBQUcsR0FBRyxHQUFHLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUM7QUFDdEMsTUFBTSxXQUFXLEdBQUcsR0FBRyxDQUFDLE1BQU0sQ0FBQyxXQUFXLENBQUM7QUFDM0MsTUFBTSxNQUFNLEdBQUcsR0FBRyxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsQ0FBQztBQUNuQyxNQUFNLFFBQVEsR0FBRyxNQUFNLENBQUMsR0FBRyxDQUFDLHNCQUFzQixDQUFDLENBQUM7O0FBRXBELE1BQU0sTUFBTSxHQUFHO0FBQ2IsU0FBSyxFQUFFLE9BQU87QUFDZCxRQUFJLEVBQUUsZUFBZTtBQUNyQixVQUFNLEVBQUUsQ0FBQyxHQUFHLENBQUM7QUFDYixRQUFJLEVBQUU7QUFDSixVQUFJLEVBQUUsQ0FBQztBQUNQLFVBQUksRUFBRSxFQUFFLFNBQVMsRUFBRSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsRUFBRTtBQUN0QyxXQUFLLEVBQUUsV0FBVyxDQUFDLEVBQUUsR0FBRyxFQUFILEdBQUcsRUFBRSxXQUFXLEVBQVgsV0FBVyxFQUFFLENBQUM7S0FDekM7R0FDRixDQUFDOztBQUVGLFNBQU8sZUFBZSxDQUFDLEdBQUcsRUFBRSxRQUFRLEVBQUUsTUFBTSxDQUFDLENBQzVDLElBQUksQ0FBQyxVQUFBLElBQUksRUFBSTtBQUNaLFFBQU0sS0FBSyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsSUFBSSxFQUFFLFlBQVksRUFBRSxDQUFDLENBQUMsQ0FBQztBQUMzQyxRQUFJLENBQUMsS0FBSyxFQUFFLE9BQU87QUFDbkIsUUFBTSxTQUFTLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxJQUFJLEVBQUUsc0JBQXNCLENBQUMsQ0FBQztBQUN0RCxRQUFNLEtBQUssR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLFNBQVMsRUFBRSxxQkFBcUIsQ0FBQyxDQUFDO0FBQ3RELFFBQUksS0FBSyxFQUFFOztBQUVULGVBQVMsQ0FBQyxhQUFhLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQyxPQUFPLENBQUMsS0FBSyxFQUFFLFVBQUEsSUFBSTtlQUFJLElBQUksQ0FBQyxRQUFRLENBQUM7T0FBQSxDQUFDLENBQUM7S0FDMUU7QUFDRCxXQUFPLFNBQVMsQ0FBQztHQUNsQixDQUFDLENBQUM7Q0FDSixDQUFDIiwiZmlsZSI6Ii9Vc2Vycy9UaGVvL0Rlc2t0b3AvTmVidWxhVGVtcC9OZWJ1bGEvZWxhc3RpY3NlYXJjaC9pbnN0YWxsZWRQbHVnaW5zL21hcnZlbC9zZXJ2ZXIvbGliL2dldF9sYXN0X3N0YXRlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgXyA9IHJlcXVpcmUoJ2xvZGFzaCcpO1xuY29uc3QgY3JlYXRlUXVlcnkgPSByZXF1aXJlKCcuL2NyZWF0ZV9xdWVyeS5qcycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IChyZXEsIGluZGljZXMpID0+IHtcbiAgY29uc3QgY2FsbFdpdGhSZXF1ZXN0ID0gcmVxLnNlcnZlci5wbHVnaW5zLmVsYXN0aWNzZWFyY2guY2FsbFdpdGhSZXF1ZXN0O1xuICBjb25zdCBzdGFydCA9IHJlcS5wYXlsb2FkLnRpbWVSYW5nZS5taW47XG4gIGNvbnN0IGVuZCA9IHJlcS5wYXlsb2FkLnRpbWVSYW5nZS5tYXg7XG4gIGNvbnN0IGNsdXN0ZXJVdWlkID0gcmVxLnBhcmFtcy5jbHVzdGVyVXVpZDtcbiAgY29uc3QgY29uZmlnID0gcmVxLnNlcnZlci5jb25maWcoKTtcbiAgY29uc3QgcmVzb2x2ZXIgPSBjb25maWcuZ2V0KCdtYXJ2ZWwubm9kZV9yZXNvbHZlcicpO1xuXG4gIGNvbnN0IHBhcmFtcyA9IHtcbiAgICBpbmRleDogaW5kaWNlcyxcbiAgICB0eXBlOiAnY2x1c3Rlcl9zdGF0ZScsXG4gICAgaWdub3JlOiBbNDA0XSxcbiAgICBib2R5OiB7XG4gICAgICBzaXplOiAxLFxuICAgICAgc29ydDogeyB0aW1lc3RhbXA6IHsgb3JkZXI6ICdkZXNjJyB9IH0sXG4gICAgICBxdWVyeTogY3JlYXRlUXVlcnkoeyBlbmQsIGNsdXN0ZXJVdWlkIH0pXG4gICAgfVxuICB9O1xuXG4gIHJldHVybiBjYWxsV2l0aFJlcXVlc3QocmVxLCAnc2VhcmNoJywgcGFyYW1zKVxuICAudGhlbihyZXNwID0+IHtcbiAgICBjb25zdCB0b3RhbCA9IF8uZ2V0KHJlc3AsICdoaXRzLnRvdGFsJywgMCk7XG4gICAgaWYgKCF0b3RhbCkgcmV0dXJuO1xuICAgIGNvbnN0IGxhc3RTdGF0ZSA9IF8uZ2V0KHJlc3AsICdoaXRzLmhpdHNbMF0uX3NvdXJjZScpO1xuICAgIGNvbnN0IG5vZGVzID0gXy5nZXQobGFzdFN0YXRlLCAnY2x1c3Rlcl9zdGF0ZS5ub2RlcycpO1xuICAgIGlmIChub2Rlcykge1xuICAgICAgLy8gcmUta2V5IHRoZSBub2RlcyBvYmplY3RzIHRvIHVzZSByZXNvbHZlclxuICAgICAgbGFzdFN0YXRlLmNsdXN0ZXJfc3RhdGUubm9kZXMgPSBfLmluZGV4Qnkobm9kZXMsIG5vZGUgPT4gbm9kZVtyZXNvbHZlcl0pO1xuICAgIH1cbiAgICByZXR1cm4gbGFzdFN0YXRlO1xuICB9KTtcbn07XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/get_last_state.js"
      ],
      "names": [],
      "mappings": ";;AAAA,IAAM,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC5B,IAAM,WAAW,GAAG,OAAO,CAAC,mBAAmB,CAAC,CAAC;;AAEjD,MAAM,CAAC,OAAO,GAAG,UAAC,GAAG,EAAE,OAAO,EAAK;AACjC,MAAM,eAAe,GAAG,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,eAAe,CAAC;AACzE,MAAM,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC;AACxC,MAAM,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC;AACtC,MAAM,WAAW,GAAG,GAAG,CAAC,MAAM,CAAC,WAAW,CAAC;AAC3C,MAAM,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;AACnC,MAAM,QAAQ,GAAG,MAAM,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;;AAEpD,MAAM,MAAM,GAAG;AACb,SAAK,EAAE,OAAO;AACd,QAAI,EAAE,eAAe;AACrB,UAAM,EAAE,CAAC,GAAG,CAAC;AACb,QAAI,EAAE;AACJ,UAAI,EAAE,CAAC;AACP,UAAI,EAAE,EAAE,SAAS,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,EAAE;AACtC,WAAK,EAAE,WAAW,CAAC,EAAE,GAAG,EAAH,GAAG,EAAE,WAAW,EAAX,WAAW,EAAE,CAAC;KACzC;GACF,CAAC;;AAEF,SAAO,eAAe,CAAC,GAAG,EAAE,QAAQ,EAAE,MAAM,CAAC,CAC5C,IAAI,CAAC,UAAA,IAAI,EAAI;AACZ,QAAM,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC,CAAC;AAC3C,QAAI,CAAC,KAAK,EAAE,OAAO;AACnB,QAAM,SAAS,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,sBAAsB,CAAC,CAAC;AACtD,QAAM,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,SAAS,EAAE,qBAAqB,CAAC,CAAC;AACtD,QAAI,KAAK,EAAE;;AAET,eAAS,CAAC,aAAa,CAAC,KAAK,GAAG,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,UAAA,IAAI;eAAI,IAAI,CAAC,QAAQ,CAAC;OAAA,CAAC,CAAC;KAC1E;AACD,WAAO,SAAS,CAAC;GAClB,CAAC,CAAC;CACJ,CAAC",
      "file": "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/get_last_state.js",
      "sourcesContent": [
        "const _ = require('lodash');\nconst createQuery = require('./create_query.js');\n\nmodule.exports = (req, indices) => {\n  const callWithRequest = req.server.plugins.elasticsearch.callWithRequest;\n  const start = req.payload.timeRange.min;\n  const end = req.payload.timeRange.max;\n  const clusterUuid = req.params.clusterUuid;\n  const config = req.server.config();\n  const resolver = config.get('marvel.node_resolver');\n\n  const params = {\n    index: indices,\n    type: 'cluster_state',\n    ignore: [404],\n    body: {\n      size: 1,\n      sort: { timestamp: { order: 'desc' } },\n      query: createQuery({ end, clusterUuid })\n    }\n  };\n\n  return callWithRequest(req, 'search', params)\n  .then(resp => {\n    const total = _.get(resp, 'hits.total', 0);\n    if (!total) return;\n    const lastState = _.get(resp, 'hits.hits[0]._source');\n    const nodes = _.get(lastState, 'cluster_state.nodes');\n    if (nodes) {\n      // re-key the nodes objects to use resolver\n      lastState.cluster_state.nodes = _.indexBy(nodes, node => node[resolver]);\n    }\n    return lastState;\n  });\n};\n"
      ]
    },
    "mtime": 1468947861000
  },
  "{\"filename\":\"/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/get_cluster_status.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "'use strict';\n\nvar _ = require('lodash');\nvar createQuery = require('./create_query.js');\nvar moment = require('moment');\n\nmodule.exports = function (req, indices, lastState) {\n  // Alias callWithRequest so we don't have to use this long ugly string\n  var callWithRequest = req.server.plugins.elasticsearch.callWithRequest;\n\n  // Get the params from the POST body for the request\n  var start = req.payload.timeRange.min;\n  var end = req.payload.timeRange.max;\n  var clusterUuid = req.params.clusterUuid;\n\n  // Build up the Elasticsearch request\n  var params = {\n    index: indices,\n    ignore: [404],\n    type: 'cluster_stats',\n    body: {\n      size: 1,\n      sort: { timestamp: { order: 'desc' } },\n      query: createQuery({ end: end, clusterUuid: clusterUuid })\n    }\n  };\n\n  // Send the request to Elasticsearch with authentication headers. This will handle\n  // 401 from the Sheild plugin and send them back to the browser\n  return callWithRequest(req, 'search', params).then(function (resp) {\n    var clusterStatus = { status: _.get(lastState, 'cluster_state.status') };\n    var total = _.get(resp, 'hits.total', 0);\n\n    if (total) {\n      (function () {\n        var source = _.get(resp, 'hits.hits[0]._source');\n        var get = function get(path) {\n          return _.get(source, path);\n        };\n        clusterStatus.nodesCount = get('cluster_stats.nodes.count.total');\n        clusterStatus.indicesCount = get('cluster_stats.indices.count');\n        clusterStatus.totalShards = get('cluster_stats.indices.shards.total');\n        clusterStatus.documentCount = get('cluster_stats.indices.docs.count');\n        clusterStatus.dataSize = get('cluster_stats.indices.store.size_in_bytes');\n        clusterStatus.upTime = get('cluster_stats.nodes.jvm.max_uptime_in_millis');\n        clusterStatus.version = get('cluster_stats.nodes.versions');\n        clusterStatus.memUsed = get('cluster_stats.nodes.jvm.mem.heap_used_in_bytes');\n        clusterStatus.memMax = get('cluster_stats.nodes.jvm.mem.heap_max_in_bytes');\n      })();\n    }\n\n    clusterStatus = _.defaults(clusterStatus, {\n      status: 'unknown',\n      nodesCount: 0,\n      indicesCount: 0,\n      totalShards: 0,\n      documentCount: 0,\n      dataSize: 0,\n      upTime: 0,\n      version: null,\n      memUsed: 0,\n      memMax: 0\n    });\n\n    return clusterStatus;\n  });\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9UaGVvL0Rlc2t0b3AvTmVidWxhVGVtcC9OZWJ1bGEvZWxhc3RpY3NlYXJjaC9pbnN0YWxsZWRQbHVnaW5zL21hcnZlbC9zZXJ2ZXIvbGliL2dldF9jbHVzdGVyX3N0YXR1cy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLElBQU0sQ0FBQyxHQUFHLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQztBQUM1QixJQUFNLFdBQVcsR0FBRyxPQUFPLENBQUMsbUJBQW1CLENBQUMsQ0FBQztBQUNqRCxJQUFNLE1BQU0sR0FBRyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUM7O0FBRWpDLE1BQU0sQ0FBQyxPQUFPLEdBQUcsVUFBQyxHQUFHLEVBQUUsT0FBTyxFQUFFLFNBQVMsRUFBSzs7QUFFNUMsTUFBTSxlQUFlLEdBQUcsR0FBRyxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDLGVBQWUsQ0FBQzs7O0FBR3pFLE1BQU0sS0FBSyxHQUFHLEdBQUcsQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQztBQUN4QyxNQUFNLEdBQUcsR0FBRyxHQUFHLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUM7QUFDdEMsTUFBTSxXQUFXLEdBQUcsR0FBRyxDQUFDLE1BQU0sQ0FBQyxXQUFXLENBQUM7OztBQUczQyxNQUFNLE1BQU0sR0FBRztBQUNiLFNBQUssRUFBRSxPQUFPO0FBQ2QsVUFBTSxFQUFFLENBQUMsR0FBRyxDQUFDO0FBQ2IsUUFBSSxFQUFFLGVBQWU7QUFDckIsUUFBSSxFQUFFO0FBQ0osVUFBSSxFQUFFLENBQUM7QUFDUCxVQUFJLEVBQUUsRUFBRSxTQUFTLEVBQUUsRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLEVBQUU7QUFDdEMsV0FBSyxFQUFFLFdBQVcsQ0FBQyxFQUFFLEdBQUcsRUFBSCxHQUFHLEVBQUUsV0FBVyxFQUFYLFdBQVcsRUFBRSxDQUFDO0tBQ3pDO0dBQ0YsQ0FBQzs7OztBQUlGLFNBQU8sZUFBZSxDQUFDLEdBQUcsRUFBRSxRQUFRLEVBQUUsTUFBTSxDQUFDLENBQzVDLElBQUksQ0FBQyxVQUFDLElBQUksRUFBSztBQUNkLFFBQUksYUFBYSxHQUFHLEVBQUUsTUFBTSxFQUFFLENBQUMsQ0FBQyxHQUFHLENBQUMsU0FBUyxFQUFFLHNCQUFzQixDQUFDLEVBQUUsQ0FBQztBQUN6RSxRQUFNLEtBQUssR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLElBQUksRUFBRSxZQUFZLEVBQUUsQ0FBQyxDQUFDLENBQUM7O0FBRTNDLFFBQUksS0FBSyxFQUFFOztBQUNULFlBQU0sTUFBTSxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsSUFBSSxFQUFFLHNCQUFzQixDQUFDLENBQUM7QUFDbkQsWUFBTSxHQUFHLEdBQUcsU0FBTixHQUFHLENBQUksSUFBSTtpQkFBSyxDQUFDLENBQUMsR0FBRyxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUM7U0FBQSxDQUFDO0FBQzFDLHFCQUFhLENBQUMsVUFBVSxHQUFHLEdBQUcsQ0FBQyxpQ0FBaUMsQ0FBQyxDQUFDO0FBQ2xFLHFCQUFhLENBQUMsWUFBWSxHQUFHLEdBQUcsQ0FBQyw2QkFBNkIsQ0FBQyxDQUFDO0FBQ2hFLHFCQUFhLENBQUMsV0FBVyxHQUFHLEdBQUcsQ0FBQyxvQ0FBb0MsQ0FBQyxDQUFDO0FBQ3RFLHFCQUFhLENBQUMsYUFBYSxHQUFHLEdBQUcsQ0FBQyxrQ0FBa0MsQ0FBQyxDQUFDO0FBQ3RFLHFCQUFhLENBQUMsUUFBUSxHQUFHLEdBQUcsQ0FBQywyQ0FBMkMsQ0FBQyxDQUFDO0FBQzFFLHFCQUFhLENBQUMsTUFBTSxHQUFHLEdBQUcsQ0FBQyw4Q0FBOEMsQ0FBQyxDQUFDO0FBQzNFLHFCQUFhLENBQUMsT0FBTyxHQUFHLEdBQUcsQ0FBQyw4QkFBOEIsQ0FBQyxDQUFDO0FBQzVELHFCQUFhLENBQUMsT0FBTyxHQUFHLEdBQUcsQ0FBQyxnREFBZ0QsQ0FBQyxDQUFDO0FBQzlFLHFCQUFhLENBQUMsTUFBTSxHQUFHLEdBQUcsQ0FBQywrQ0FBK0MsQ0FBQyxDQUFDOztLQUM3RTs7QUFFRCxpQkFBYSxHQUFHLENBQUMsQ0FBQyxRQUFRLENBQUMsYUFBYSxFQUFFO0FBQ3hDLFlBQU0sRUFBRSxTQUFTO0FBQ2pCLGdCQUFVLEVBQUUsQ0FBQztBQUNiLGtCQUFZLEVBQUUsQ0FBQztBQUNmLGlCQUFXLEVBQUUsQ0FBQztBQUNkLG1CQUFhLEVBQUUsQ0FBQztBQUNoQixjQUFRLEVBQUUsQ0FBQztBQUNYLFlBQU0sRUFBRSxDQUFDO0FBQ1QsYUFBTyxFQUFFLElBQUk7QUFDYixhQUFPLEVBQUUsQ0FBQztBQUNWLFlBQU0sRUFBRSxDQUFDO0tBQ1YsQ0FBQyxDQUFDOztBQUVILFdBQU8sYUFBYSxDQUFDO0dBQ3RCLENBQUMsQ0FBQztDQUNKLENBQUMiLCJmaWxlIjoiL1VzZXJzL1RoZW8vRGVza3RvcC9OZWJ1bGFUZW1wL05lYnVsYS9lbGFzdGljc2VhcmNoL2luc3RhbGxlZFBsdWdpbnMvbWFydmVsL3NlcnZlci9saWIvZ2V0X2NsdXN0ZXJfc3RhdHVzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgXyA9IHJlcXVpcmUoJ2xvZGFzaCcpO1xuY29uc3QgY3JlYXRlUXVlcnkgPSByZXF1aXJlKCcuL2NyZWF0ZV9xdWVyeS5qcycpO1xuY29uc3QgbW9tZW50ID0gcmVxdWlyZSgnbW9tZW50Jyk7XG5cbm1vZHVsZS5leHBvcnRzID0gKHJlcSwgaW5kaWNlcywgbGFzdFN0YXRlKSA9PiB7XG4gIC8vIEFsaWFzIGNhbGxXaXRoUmVxdWVzdCBzbyB3ZSBkb24ndCBoYXZlIHRvIHVzZSB0aGlzIGxvbmcgdWdseSBzdHJpbmdcbiAgY29uc3QgY2FsbFdpdGhSZXF1ZXN0ID0gcmVxLnNlcnZlci5wbHVnaW5zLmVsYXN0aWNzZWFyY2guY2FsbFdpdGhSZXF1ZXN0O1xuXG4gIC8vIEdldCB0aGUgcGFyYW1zIGZyb20gdGhlIFBPU1QgYm9keSBmb3IgdGhlIHJlcXVlc3RcbiAgY29uc3Qgc3RhcnQgPSByZXEucGF5bG9hZC50aW1lUmFuZ2UubWluO1xuICBjb25zdCBlbmQgPSByZXEucGF5bG9hZC50aW1lUmFuZ2UubWF4O1xuICBjb25zdCBjbHVzdGVyVXVpZCA9IHJlcS5wYXJhbXMuY2x1c3RlclV1aWQ7XG5cbiAgLy8gQnVpbGQgdXAgdGhlIEVsYXN0aWNzZWFyY2ggcmVxdWVzdFxuICBjb25zdCBwYXJhbXMgPSB7XG4gICAgaW5kZXg6IGluZGljZXMsXG4gICAgaWdub3JlOiBbNDA0XSxcbiAgICB0eXBlOiAnY2x1c3Rlcl9zdGF0cycsXG4gICAgYm9keToge1xuICAgICAgc2l6ZTogMSxcbiAgICAgIHNvcnQ6IHsgdGltZXN0YW1wOiB7IG9yZGVyOiAnZGVzYycgfSB9LFxuICAgICAgcXVlcnk6IGNyZWF0ZVF1ZXJ5KHsgZW5kLCBjbHVzdGVyVXVpZCB9KVxuICAgIH1cbiAgfTtcblxuICAvLyBTZW5kIHRoZSByZXF1ZXN0IHRvIEVsYXN0aWNzZWFyY2ggd2l0aCBhdXRoZW50aWNhdGlvbiBoZWFkZXJzLiBUaGlzIHdpbGwgaGFuZGxlXG4gIC8vIDQwMSBmcm9tIHRoZSBTaGVpbGQgcGx1Z2luIGFuZCBzZW5kIHRoZW0gYmFjayB0byB0aGUgYnJvd3NlclxuICByZXR1cm4gY2FsbFdpdGhSZXF1ZXN0KHJlcSwgJ3NlYXJjaCcsIHBhcmFtcylcbiAgLnRoZW4oKHJlc3ApID0+IHtcbiAgICBsZXQgY2x1c3RlclN0YXR1cyA9IHsgc3RhdHVzOiBfLmdldChsYXN0U3RhdGUsICdjbHVzdGVyX3N0YXRlLnN0YXR1cycpIH07XG4gICAgY29uc3QgdG90YWwgPSBfLmdldChyZXNwLCAnaGl0cy50b3RhbCcsIDApO1xuXG4gICAgaWYgKHRvdGFsKSB7XG4gICAgICBjb25zdCBzb3VyY2UgPSBfLmdldChyZXNwLCAnaGl0cy5oaXRzWzBdLl9zb3VyY2UnKTtcbiAgICAgIGNvbnN0IGdldCA9IChwYXRoKSA9PiBfLmdldChzb3VyY2UsIHBhdGgpO1xuICAgICAgY2x1c3RlclN0YXR1cy5ub2Rlc0NvdW50ID0gZ2V0KCdjbHVzdGVyX3N0YXRzLm5vZGVzLmNvdW50LnRvdGFsJyk7XG4gICAgICBjbHVzdGVyU3RhdHVzLmluZGljZXNDb3VudCA9IGdldCgnY2x1c3Rlcl9zdGF0cy5pbmRpY2VzLmNvdW50Jyk7XG4gICAgICBjbHVzdGVyU3RhdHVzLnRvdGFsU2hhcmRzID0gZ2V0KCdjbHVzdGVyX3N0YXRzLmluZGljZXMuc2hhcmRzLnRvdGFsJyk7XG4gICAgICBjbHVzdGVyU3RhdHVzLmRvY3VtZW50Q291bnQgPSBnZXQoJ2NsdXN0ZXJfc3RhdHMuaW5kaWNlcy5kb2NzLmNvdW50Jyk7XG4gICAgICBjbHVzdGVyU3RhdHVzLmRhdGFTaXplID0gZ2V0KCdjbHVzdGVyX3N0YXRzLmluZGljZXMuc3RvcmUuc2l6ZV9pbl9ieXRlcycpO1xuICAgICAgY2x1c3RlclN0YXR1cy51cFRpbWUgPSBnZXQoJ2NsdXN0ZXJfc3RhdHMubm9kZXMuanZtLm1heF91cHRpbWVfaW5fbWlsbGlzJyk7XG4gICAgICBjbHVzdGVyU3RhdHVzLnZlcnNpb24gPSBnZXQoJ2NsdXN0ZXJfc3RhdHMubm9kZXMudmVyc2lvbnMnKTtcbiAgICAgIGNsdXN0ZXJTdGF0dXMubWVtVXNlZCA9IGdldCgnY2x1c3Rlcl9zdGF0cy5ub2Rlcy5qdm0ubWVtLmhlYXBfdXNlZF9pbl9ieXRlcycpO1xuICAgICAgY2x1c3RlclN0YXR1cy5tZW1NYXggPSBnZXQoJ2NsdXN0ZXJfc3RhdHMubm9kZXMuanZtLm1lbS5oZWFwX21heF9pbl9ieXRlcycpO1xuICAgIH1cblxuICAgIGNsdXN0ZXJTdGF0dXMgPSBfLmRlZmF1bHRzKGNsdXN0ZXJTdGF0dXMsIHtcbiAgICAgIHN0YXR1czogJ3Vua25vd24nLFxuICAgICAgbm9kZXNDb3VudDogMCxcbiAgICAgIGluZGljZXNDb3VudDogMCxcbiAgICAgIHRvdGFsU2hhcmRzOiAwLFxuICAgICAgZG9jdW1lbnRDb3VudDogMCxcbiAgICAgIGRhdGFTaXplOiAwLFxuICAgICAgdXBUaW1lOiAwLFxuICAgICAgdmVyc2lvbjogbnVsbCxcbiAgICAgIG1lbVVzZWQ6IDAsXG4gICAgICBtZW1NYXg6IDBcbiAgICB9KTtcblxuICAgIHJldHVybiBjbHVzdGVyU3RhdHVzO1xuICB9KTtcbn07XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/get_cluster_status.js"
      ],
      "names": [],
      "mappings": ";;AAAA,IAAM,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC5B,IAAM,WAAW,GAAG,OAAO,CAAC,mBAAmB,CAAC,CAAC;AACjD,IAAM,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;;AAEjC,MAAM,CAAC,OAAO,GAAG,UAAC,GAAG,EAAE,OAAO,EAAE,SAAS,EAAK;;AAE5C,MAAM,eAAe,GAAG,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,eAAe,CAAC;;;AAGzE,MAAM,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC;AACxC,MAAM,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC;AACtC,MAAM,WAAW,GAAG,GAAG,CAAC,MAAM,CAAC,WAAW,CAAC;;;AAG3C,MAAM,MAAM,GAAG;AACb,SAAK,EAAE,OAAO;AACd,UAAM,EAAE,CAAC,GAAG,CAAC;AACb,QAAI,EAAE,eAAe;AACrB,QAAI,EAAE;AACJ,UAAI,EAAE,CAAC;AACP,UAAI,EAAE,EAAE,SAAS,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,EAAE;AACtC,WAAK,EAAE,WAAW,CAAC,EAAE,GAAG,EAAH,GAAG,EAAE,WAAW,EAAX,WAAW,EAAE,CAAC;KACzC;GACF,CAAC;;;;AAIF,SAAO,eAAe,CAAC,GAAG,EAAE,QAAQ,EAAE,MAAM,CAAC,CAC5C,IAAI,CAAC,UAAC,IAAI,EAAK;AACd,QAAI,aAAa,GAAG,EAAE,MAAM,EAAE,CAAC,CAAC,GAAG,CAAC,SAAS,EAAE,sBAAsB,CAAC,EAAE,CAAC;AACzE,QAAM,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC,CAAC;;AAE3C,QAAI,KAAK,EAAE;;AACT,YAAM,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,sBAAsB,CAAC,CAAC;AACnD,YAAM,GAAG,GAAG,SAAN,GAAG,CAAI,IAAI;iBAAK,CAAC,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC;SAAA,CAAC;AAC1C,qBAAa,CAAC,UAAU,GAAG,GAAG,CAAC,iCAAiC,CAAC,CAAC;AAClE,qBAAa,CAAC,YAAY,GAAG,GAAG,CAAC,6BAA6B,CAAC,CAAC;AAChE,qBAAa,CAAC,WAAW,GAAG,GAAG,CAAC,oCAAoC,CAAC,CAAC;AACtE,qBAAa,CAAC,aAAa,GAAG,GAAG,CAAC,kCAAkC,CAAC,CAAC;AACtE,qBAAa,CAAC,QAAQ,GAAG,GAAG,CAAC,2CAA2C,CAAC,CAAC;AAC1E,qBAAa,CAAC,MAAM,GAAG,GAAG,CAAC,8CAA8C,CAAC,CAAC;AAC3E,qBAAa,CAAC,OAAO,GAAG,GAAG,CAAC,8BAA8B,CAAC,CAAC;AAC5D,qBAAa,CAAC,OAAO,GAAG,GAAG,CAAC,gDAAgD,CAAC,CAAC;AAC9E,qBAAa,CAAC,MAAM,GAAG,GAAG,CAAC,+CAA+C,CAAC,CAAC;;KAC7E;;AAED,iBAAa,GAAG,CAAC,CAAC,QAAQ,CAAC,aAAa,EAAE;AACxC,YAAM,EAAE,SAAS;AACjB,gBAAU,EAAE,CAAC;AACb,kBAAY,EAAE,CAAC;AACf,iBAAW,EAAE,CAAC;AACd,mBAAa,EAAE,CAAC;AAChB,cAAQ,EAAE,CAAC;AACX,YAAM,EAAE,CAAC;AACT,aAAO,EAAE,IAAI;AACb,aAAO,EAAE,CAAC;AACV,YAAM,EAAE,CAAC;KACV,CAAC,CAAC;;AAEH,WAAO,aAAa,CAAC;GACtB,CAAC,CAAC;CACJ,CAAC",
      "file": "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/get_cluster_status.js",
      "sourcesContent": [
        "const _ = require('lodash');\nconst createQuery = require('./create_query.js');\nconst moment = require('moment');\n\nmodule.exports = (req, indices, lastState) => {\n  // Alias callWithRequest so we don't have to use this long ugly string\n  const callWithRequest = req.server.plugins.elasticsearch.callWithRequest;\n\n  // Get the params from the POST body for the request\n  const start = req.payload.timeRange.min;\n  const end = req.payload.timeRange.max;\n  const clusterUuid = req.params.clusterUuid;\n\n  // Build up the Elasticsearch request\n  const params = {\n    index: indices,\n    ignore: [404],\n    type: 'cluster_stats',\n    body: {\n      size: 1,\n      sort: { timestamp: { order: 'desc' } },\n      query: createQuery({ end, clusterUuid })\n    }\n  };\n\n  // Send the request to Elasticsearch with authentication headers. This will handle\n  // 401 from the Sheild plugin and send them back to the browser\n  return callWithRequest(req, 'search', params)\n  .then((resp) => {\n    let clusterStatus = { status: _.get(lastState, 'cluster_state.status') };\n    const total = _.get(resp, 'hits.total', 0);\n\n    if (total) {\n      const source = _.get(resp, 'hits.hits[0]._source');\n      const get = (path) => _.get(source, path);\n      clusterStatus.nodesCount = get('cluster_stats.nodes.count.total');\n      clusterStatus.indicesCount = get('cluster_stats.indices.count');\n      clusterStatus.totalShards = get('cluster_stats.indices.shards.total');\n      clusterStatus.documentCount = get('cluster_stats.indices.docs.count');\n      clusterStatus.dataSize = get('cluster_stats.indices.store.size_in_bytes');\n      clusterStatus.upTime = get('cluster_stats.nodes.jvm.max_uptime_in_millis');\n      clusterStatus.version = get('cluster_stats.nodes.versions');\n      clusterStatus.memUsed = get('cluster_stats.nodes.jvm.mem.heap_used_in_bytes');\n      clusterStatus.memMax = get('cluster_stats.nodes.jvm.mem.heap_max_in_bytes');\n    }\n\n    clusterStatus = _.defaults(clusterStatus, {\n      status: 'unknown',\n      nodesCount: 0,\n      indicesCount: 0,\n      totalShards: 0,\n      documentCount: 0,\n      dataSize: 0,\n      upTime: 0,\n      version: null,\n      memUsed: 0,\n      memMax: 0\n    });\n\n    return clusterStatus;\n  });\n};\n"
      ]
    },
    "mtime": 1468947861000
  },
  "{\"filename\":\"/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/get_metrics.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "'use strict';\n\nvar Promise = require('bluebird');\nvar getSeries = require('./get_series');\nmodule.exports = function (req, indices) {\n  var filters = arguments.length <= 2 || arguments[2] === undefined ? [] : arguments[2];\n\n  var metrics = req.payload.metrics || [];\n  return Promise.map(metrics, function (metricName) {\n    return getSeries(req, indices, metricName, filters);\n  }).then(function (rows) {\n    var data = {};\n    metrics.forEach(function (key, index) {\n      data[key] = rows[index];\n    });\n    return data;\n  });\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9UaGVvL0Rlc2t0b3AvTmVidWxhVGVtcC9OZWJ1bGEvZWxhc3RpY3NlYXJjaC9pbnN0YWxsZWRQbHVnaW5zL21hcnZlbC9zZXJ2ZXIvbGliL2dldF9tZXRyaWNzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBTSxPQUFPLEdBQUcsT0FBTyxDQUFDLFVBQVUsQ0FBQyxDQUFDO0FBQ3BDLElBQU0sU0FBUyxHQUFHLE9BQU8sQ0FBQyxjQUFjLENBQUMsQ0FBQztBQUMxQyxNQUFNLENBQUMsT0FBTyxHQUFHLFVBQUMsR0FBRyxFQUFFLE9BQU8sRUFBbUI7TUFBakIsT0FBTyx5REFBRyxFQUFFOztBQUMxQyxNQUFNLE9BQU8sR0FBRyxHQUFHLENBQUMsT0FBTyxDQUFDLE9BQU8sSUFBSSxFQUFFLENBQUM7QUFDMUMsU0FBTyxPQUFPLENBQUMsR0FBRyxDQUFDLE9BQU8sRUFBRSxVQUFDLFVBQVUsRUFBSztBQUMxQyxXQUFPLFNBQVMsQ0FBQyxHQUFHLEVBQUUsT0FBTyxFQUFFLFVBQVUsRUFBRSxPQUFPLENBQUMsQ0FBQztHQUNyRCxDQUFDLENBQ0QsSUFBSSxDQUFDLFVBQVUsSUFBSSxFQUFFO0FBQ3BCLFFBQU0sSUFBSSxHQUFHLEVBQUUsQ0FBQztBQUNoQixXQUFPLENBQUMsT0FBTyxDQUFDLFVBQVUsR0FBRyxFQUFFLEtBQUssRUFBRTtBQUNwQyxVQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0tBQ3pCLENBQUMsQ0FBQztBQUNILFdBQU8sSUFBSSxDQUFDO0dBQ2IsQ0FBQyxDQUFDO0NBQ0osQ0FBQyIsImZpbGUiOiIvVXNlcnMvVGhlby9EZXNrdG9wL05lYnVsYVRlbXAvTmVidWxhL2VsYXN0aWNzZWFyY2gvaW5zdGFsbGVkUGx1Z2lucy9tYXJ2ZWwvc2VydmVyL2xpYi9nZXRfbWV0cmljcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFByb21pc2UgPSByZXF1aXJlKCdibHVlYmlyZCcpO1xuY29uc3QgZ2V0U2VyaWVzID0gcmVxdWlyZSgnLi9nZXRfc2VyaWVzJyk7XG5tb2R1bGUuZXhwb3J0cyA9IChyZXEsIGluZGljZXMsIGZpbHRlcnMgPSBbXSkgPT4ge1xuICBjb25zdCBtZXRyaWNzID0gcmVxLnBheWxvYWQubWV0cmljcyB8fCBbXTtcbiAgcmV0dXJuIFByb21pc2UubWFwKG1ldHJpY3MsIChtZXRyaWNOYW1lKSA9PiB7XG4gICAgcmV0dXJuIGdldFNlcmllcyhyZXEsIGluZGljZXMsIG1ldHJpY05hbWUsIGZpbHRlcnMpO1xuICB9KVxuICAudGhlbihmdW5jdGlvbiAocm93cykge1xuICAgIGNvbnN0IGRhdGEgPSB7fTtcbiAgICBtZXRyaWNzLmZvckVhY2goZnVuY3Rpb24gKGtleSwgaW5kZXgpIHtcbiAgICAgIGRhdGFba2V5XSA9IHJvd3NbaW5kZXhdO1xuICAgIH0pO1xuICAgIHJldHVybiBkYXRhO1xuICB9KTtcbn07XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/get_metrics.js"
      ],
      "names": [],
      "mappings": ";;AAAA,IAAM,OAAO,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AACpC,IAAM,SAAS,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC;AAC1C,MAAM,CAAC,OAAO,GAAG,UAAC,GAAG,EAAE,OAAO,EAAmB;MAAjB,OAAO,yDAAG,EAAE;;AAC1C,MAAM,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC,OAAO,IAAI,EAAE,CAAC;AAC1C,SAAO,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,UAAC,UAAU,EAAK;AAC1C,WAAO,SAAS,CAAC,GAAG,EAAE,OAAO,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC;GACrD,CAAC,CACD,IAAI,CAAC,UAAU,IAAI,EAAE;AACpB,QAAM,IAAI,GAAG,EAAE,CAAC;AAChB,WAAO,CAAC,OAAO,CAAC,UAAU,GAAG,EAAE,KAAK,EAAE;AACpC,UAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;KACzB,CAAC,CAAC;AACH,WAAO,IAAI,CAAC;GACb,CAAC,CAAC;CACJ,CAAC",
      "file": "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/get_metrics.js",
      "sourcesContent": [
        "const Promise = require('bluebird');\nconst getSeries = require('./get_series');\nmodule.exports = (req, indices, filters = []) => {\n  const metrics = req.payload.metrics || [];\n  return Promise.map(metrics, (metricName) => {\n    return getSeries(req, indices, metricName, filters);\n  })\n  .then(function (rows) {\n    const data = {};\n    metrics.forEach(function (key, index) {\n      data[key] = rows[index];\n    });\n    return data;\n  });\n};\n"
      ]
    },
    "mtime": 1468947861000
  },
  "{\"filename\":\"/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/get_series.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "'use strict';\n\nvar _ = require('lodash');\nvar moment = require('moment');\nvar root = require('requirefrom')('');\nvar metrics = root('public/lib/metrics');\nvar createQuery = require('./create_query.js');\nvar calcAuto = require('./calculate_auto');\nvar filterPartialBuckets = require('./filter_partial_buckets');\nvar pickMetricFields = require('./pick_metric_fields');\n\nmodule.exports = function (req, indices, metricName, filters) {\n  var config = req.server.config();\n  var callWithRequest = req.server.plugins.elasticsearch.callWithRequest;\n  var metric = metrics[metricName];\n  var start = req.payload.timeRange.min;\n  var end = req.payload.timeRange.max;\n  var clusterUuid = req.params.clusterUuid;\n  var id = req.params.id;\n  var minIntervalSeconds = config.get('marvel.min_interval_seconds');\n\n  var params = {\n    index: indices,\n    searchType: 'count',\n    ignoreUnavailable: true,\n    ignore: [404],\n    body: {\n      query: createQuery({ start: start, end: end, clusterUuid: clusterUuid, filters: filters }),\n      aggs: {}\n    }\n  };\n  var min = moment.utc(start).valueOf();\n  var max = moment.utc(end).valueOf();\n  var duration = moment.duration(max - min, 'ms');\n  var bucketSize = Math.max(minIntervalSeconds, calcAuto.near(100, duration).asSeconds());\n  var aggs = {\n    check: {\n      date_histogram: {\n        field: 'timestamp',\n        min_doc_count: 0,\n        interval: bucketSize + 's',\n        extended_bounds: { min: min, max: max }\n      },\n      aggs: { metric: {} },\n      meta: {\n        timefilterMin: min,\n        timefilterMax: max,\n        bucketSize: bucketSize\n      }\n    }\n  };\n  aggs.check.aggs.metric[metric.metricAgg] = {\n    field: metric.field\n  };\n  if (metric.derivative) {\n    aggs.check.aggs.metric_deriv = {\n      derivative: { buckets_path: 'metric', gap_policy: 'skip' }\n    };\n  }\n  if (metric.aggs) {\n    _.assign(aggs.check.aggs, metric.aggs);\n  }\n  params.body.aggs = aggs;\n\n  return callWithRequest(req, 'search', params).then(function (resp) {\n    if (!resp.aggregations) {\n      return {\n        metric: pickMetricFields(metric),\n        data: []\n      };\n    }\n    var aggCheck = resp.aggregations.check;\n    var bucketSize = aggCheck.meta.bucketSize;\n    var defaultCalculation = function defaultCalculation(bucket) {\n      var key = metric.derivative ? 'metric_deriv' : 'metric';\n      var value = bucket[key] && bucket[key].value || 0;\n      // We need to convert metric_deriv from the bucket size to seconds if\n      // the units are per second\n      if (metric.units === '/s') {\n        value = value / bucketSize;\n        if (value < 0) {\n          value = 0;\n        }\n      }\n      return value;\n    };\n    var calculation = metric && metric.calculation || defaultCalculation;\n    var buckets = aggCheck.buckets;\n    var boundsMin = moment.utc(aggCheck.meta.timefilterMin);\n    var boundsMax = moment.utc(aggCheck.meta.timefilterMax);\n    var data = _.chain(buckets).filter(filterPartialBuckets(boundsMin, boundsMax, bucketSize)).map(function (bucket) {\n      return {\n        x: bucket.key,\n        y: calculation(bucket) // Why are one of these null?\n      };\n    }).value();\n    return {\n      metric: pickMetricFields(metric),\n      data: data\n    };\n  });\n};\n//# sourceMappingURL=data:application/json;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/get_series.js"
      ],
      "names": [],
      "mappings": "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",
      "file": "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/get_series.js",
      "sourcesContent": [
        "const _ = require('lodash');\nconst moment = require('moment');\nconst root = require('requirefrom')('');\nconst metrics = root('public/lib/metrics');\nconst createQuery = require('./create_query.js');\nconst calcAuto = require('./calculate_auto');\nconst filterPartialBuckets = require('./filter_partial_buckets');\nconst pickMetricFields = require('./pick_metric_fields');\n\nmodule.exports = (req, indices, metricName, filters) => {\n  const config = req.server.config();\n  const callWithRequest = req.server.plugins.elasticsearch.callWithRequest;\n  const metric = metrics[metricName];\n  const start = req.payload.timeRange.min;\n  const end = req.payload.timeRange.max;\n  const clusterUuid = req.params.clusterUuid;\n  const id = req.params.id;\n  const minIntervalSeconds = config.get('marvel.min_interval_seconds');\n\n  const params = {\n    index: indices,\n    searchType: 'count',\n    ignoreUnavailable: true,\n    ignore: [404],\n    body: {\n      query: createQuery({ start, end, clusterUuid, filters }),\n      aggs: {}\n    }\n  };\n  const min = moment.utc(start).valueOf();\n  const max = moment.utc(end).valueOf();\n  const duration = moment.duration(max - min, 'ms');\n  const bucketSize = Math.max(minIntervalSeconds, calcAuto.near(100, duration).asSeconds());\n  const aggs = {\n    check: {\n      date_histogram: {\n        field: 'timestamp',\n        min_doc_count: 0,\n        interval: bucketSize + 's',\n        extended_bounds: { min, max }\n      },\n      aggs: { metric: { } },\n      meta: {\n        timefilterMin: min,\n        timefilterMax: max,\n        bucketSize: bucketSize\n      }\n    }\n  };\n  aggs.check.aggs.metric[metric.metricAgg] = {\n    field: metric.field\n  };\n  if (metric.derivative) {\n    aggs.check.aggs.metric_deriv = {\n      derivative: { buckets_path: 'metric', gap_policy: 'skip' }\n    };\n  }\n  if (metric.aggs) {\n    _.assign(aggs.check.aggs, metric.aggs);\n  }\n  params.body.aggs = aggs;\n\n  return callWithRequest(req, 'search', params)\n  .then(function (resp) {\n    if (!resp.aggregations)  {\n      return {\n        metric: pickMetricFields(metric),\n        data: []\n      };\n    }\n    const aggCheck = resp.aggregations.check;\n    const bucketSize = aggCheck.meta.bucketSize;\n    const defaultCalculation = (bucket) => {\n      const key = (metric.derivative) ? 'metric_deriv' : 'metric';\n      let value =  bucket[key] && bucket[key].value || 0;\n      // We need to convert metric_deriv from the bucket size to seconds if\n      // the units are per second\n      if (metric.units === '/s') {\n        value = value / bucketSize;\n        if (value < 0) {\n          value = 0;\n        }\n      }\n      return value;\n    };\n    const calculation = metric && metric.calculation || defaultCalculation;\n    const buckets = aggCheck.buckets;\n    const boundsMin = moment.utc(aggCheck.meta.timefilterMin);\n    const boundsMax = moment.utc(aggCheck.meta.timefilterMax);\n    const data = _.chain(buckets)\n    .filter(filterPartialBuckets(boundsMin, boundsMax, bucketSize))\n    .map((bucket) => {\n      return {\n        x: bucket.key,\n        y: calculation(bucket) // Why are one of these null?\n      };\n    })\n    .value();\n    return {\n      metric: pickMetricFields(metric),\n      data: data\n    };\n  });\n};\n"
      ]
    },
    "mtime": 1468947861000
  },
  "{\"filename\":\"/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/public/lib/metrics.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "'use strict';\n\nvar formatLargeFloat = '0,0.[00]';\nvar formatSmallFloat = '0.[00]';\nvar formatLargeBytes = '0,0.0b';\nvar formatSmallBytes = '0.0b';\nvar formatLargeAbbreviated = '0,0.[0]a';\n\nmodule.exports = {\n  'cluster_index_request_rate': {\n    active: true,\n    field: 'indices_stats._all.primaries.indexing.index_total',\n    label: 'Indexing Rate',\n    description: 'The per index rate at which documents are being indexed.',\n    format: formatLargeFloat,\n    metricAgg: 'max',\n    units: '/s',\n    defaults: { warning: '>1000', critical: '>5000', interval: '1m', periods: 1 },\n    type: 'index',\n    derivative: true\n  },\n  'cluster_search_request_rate': {\n    active: true,\n    field: 'indices_stats._all.total.search.query_total',\n    label: 'Search Rate',\n    description: 'The cluster wide rate at which search reqeusts are being executed.',\n    format: formatLargeFloat,\n    metricAgg: 'max',\n    units: '/s',\n    defaults: { warning: '>100', critical: '>5000', interval: '1m', periods: 1 },\n    type: 'cluster',\n    derivative: true\n  },\n  'cluster_index_latency': {\n    active: true,\n    field: 'indices_stats._all.primaries.indexing.index_total',\n    label: 'Indexing Latency',\n    description: 'The average indexing latency across the entire cluster.',\n    format: formatLargeFloat,\n    metricAgg: 'sum',\n    aggs: {\n      index_time_in_millis: {\n        max: { field: 'indices_stats._all.primaries.indexing.index_time_in_millis' }\n      },\n      index_total: {\n        max: { field: 'indices_stats._all.primaries.indexing.index_total' }\n      },\n      index_time_in_millis_deriv: {\n        derivative: { buckets_path: 'index_time_in_millis', gap_policy: 'skip' }\n      },\n      index_total_deriv: {\n        derivative: { buckets_path: 'index_total', gap_policy: 'skip' }\n      }\n    },\n    units: 'ms',\n    defaults: { warning: '>100', critical: '>200', interval: '1m', periods: 1 },\n    type: 'cluster',\n    derivitave: false,\n    calculation: function calculation(last) {\n      var required = last && last.index_time_in_millis_deriv && last.index_total_deriv && last.index_total_deriv.value && last.index_time_in_millis_deriv.value;\n      if (required) {\n        return last.index_time_in_millis_deriv.value / last.index_total_deriv.value;\n      }\n\n      return 0;\n    }\n  },\n  'cluster_query_latency': {\n    active: true,\n    field: 'indices_stats._all.total.search.query_total',\n    label: 'Search Latency',\n    description: 'The average search latency across the entire cluster.',\n    format: formatLargeFloat,\n    metricAgg: 'sum',\n    aggs: {\n      query_time_in_millis: {\n        max: { field: 'indices_stats._all.total.search.query_time_in_millis' }\n      },\n      query_total: {\n        max: { field: 'indices_stats._all.total.search.query_total' }\n      },\n      query_time_in_millis_deriv: {\n        derivative: { buckets_path: 'query_time_in_millis', gap_policy: 'skip' }\n      },\n      query_total_deriv: {\n        derivative: { buckets_path: 'query_total', gap_policy: 'skip' }\n      }\n    },\n    units: 'ms',\n    defaults: { warning: '>100', critical: '>200', interval: '1m', periods: 1 },\n    type: 'cluster',\n    derivitave: false,\n    calculation: function calculation(last) {\n      var required = last && last.query_time_in_millis_deriv && last.query_total_deriv && last.query_total_deriv.value && last.query_time_in_millis_deriv.value;\n      if (required) {\n        return last.query_time_in_millis_deriv.value / last.query_total_deriv.value;\n      }\n\n      return 0;\n    }\n  },\n  'node_index_latency': {\n    active: true,\n    field: 'node_stats.indices.indexing.index_total',\n    label: 'Indexing Latency',\n    description: 'The average indexing latency',\n    format: formatLargeFloat,\n    metricAgg: 'sum',\n    aggs: {\n      index_time_in_millis: {\n        max: { field: 'node_stats.indices.indexing.index_time_in_millis' }\n      },\n      index_total: {\n        max: { field: 'node_stats.indices.indexing.index_total' }\n      },\n      index_time_in_millis_deriv: {\n        derivative: { buckets_path: 'index_time_in_millis', gap_policy: 'skip' }\n      },\n      index_total_deriv: {\n        derivative: { buckets_path: 'index_total', gap_policy: 'skip' }\n      }\n    },\n    units: 'ms',\n    defaults: { warning: '>100', critical: '>200', interval: '1m', periods: 1 },\n    type: 'node',\n    derivitave: false,\n    calculation: function calculation(last) {\n      var required = last && last.index_time_in_millis_deriv && last.index_total_deriv && last.index_total_deriv.value && last.index_time_in_millis_deriv.value;\n      if (required) {\n        return last.index_time_in_millis_deriv.value / last.index_total_deriv.value;\n      }\n\n      return 0;\n    }\n  },\n  'node_query_latency': {\n    active: true,\n    field: 'node_stats.indices.search.query_total',\n    label: 'Search Latency',\n    description: 'The average search latency',\n    format: formatLargeFloat,\n    metricAgg: 'sum',\n    aggs: {\n      query_time_in_millis: {\n        max: { field: 'node_stats.indices.search.query_time_in_millis' }\n      },\n      query_total: {\n        max: { field: 'node_stats.indices.search.query_total' }\n      },\n      query_time_in_millis_deriv: {\n        derivative: { buckets_path: 'query_time_in_millis', gap_policy: 'skip' }\n      },\n      query_total_deriv: {\n        derivative: { buckets_path: 'query_total', gap_policy: 'skip' }\n      }\n    },\n    units: 'ms',\n    defaults: { warning: '>100', critical: '>200', interval: '1m', periods: 1 },\n    type: 'node',\n    derivitave: false,\n    calculation: function calculation(last) {\n      var required = last && last.query_time_in_millis_deriv && last.query_total_deriv && last.query_total_deriv.value && last.query_time_in_millis_deriv.value;\n      if (required) {\n        return last.query_time_in_millis_deriv.value / last.query_total_deriv.value;\n      }\n\n      return 0;\n    }\n  },\n  'index_request_rate': {\n    active: true,\n    field: 'index_stats.primaries.indexing.index_total',\n    label: 'Indexing Rate',\n    description: 'The per index rate at which documents are being indexed.',\n    format: formatLargeFloat,\n    metricAgg: 'max',\n    units: '/s',\n    defaults: { warning: '>1000', critical: '>5000', interval: '1m', periods: 1 },\n    type: 'index',\n    derivative: true\n  },\n  'search_request_rate': {\n    active: true,\n    field: 'index_stats.total.search.query_total',\n    label: 'Search Rate',\n    description: 'The cluster wide rate at which search reqeusts are being executed.',\n    format: formatLargeFloat,\n    metricAgg: 'max',\n    units: '/s',\n    defaults: { warning: '>100', critical: '>5000', interval: '1m', periods: 1 },\n    type: 'cluster',\n    derivative: true\n  },\n  'index_latency': {\n    active: true,\n    field: 'index_stats.primaries.indexing.index_total',\n    label: 'Indexing Latency',\n    description: 'The average indexing latency across the entire cluster.',\n    format: formatLargeFloat,\n    metricAgg: 'sum',\n    aggs: {\n      index_time_in_millis: {\n        max: { field: 'index_stats.primaries.indexing.index_time_in_millis' }\n      },\n      index_total: {\n        max: { field: 'index_stats.primaries.indexing.index_total' }\n      },\n      index_time_in_millis_deriv: {\n        derivative: { buckets_path: 'index_time_in_millis', gap_policy: 'skip' }\n      },\n      index_total_deriv: {\n        derivative: { buckets_path: 'index_total', gap_policy: 'skip' }\n      }\n    },\n    units: 'ms',\n    defaults: { warning: '>100', critical: '>200', interval: '1m', periods: 1 },\n    type: 'cluster',\n    derivitave: false,\n    calculation: function calculation(last) {\n      var required = last && last.index_time_in_millis_deriv && last.index_total_deriv && last.index_total_deriv.value && last.index_time_in_millis_deriv.value;\n      if (required) {\n        return last.index_time_in_millis_deriv.value / last.index_total_deriv.value;\n      }\n\n      return 0;\n    }\n  },\n  'query_latency': {\n    active: true,\n    field: 'index_stats.total.search.query_total',\n    label: 'Search Latency',\n    description: 'The average search latency across the entire cluster.',\n    format: formatLargeFloat,\n    metricAgg: 'sum',\n    aggs: {\n      query_time_in_millis: {\n        max: { field: 'index_stats.total.search.query_time_in_millis' }\n      },\n      query_total: {\n        max: { field: 'index_stats.total.search.query_total' }\n      },\n      query_time_in_millis_deriv: {\n        derivative: { buckets_path: 'query_time_in_millis', gap_policy: 'skip' }\n      },\n      query_total_deriv: {\n        derivative: { buckets_path: 'query_total', gap_policy: 'skip' }\n      }\n    },\n    units: 'ms',\n    defaults: { warning: '>100', critical: '>200', interval: '1m', periods: 1 },\n    type: 'cluster',\n    derivitave: false,\n    calculation: function calculation(last) {\n      var required = last && last.query_time_in_millis_deriv && last.query_total_deriv && last.query_total_deriv.value && last.query_time_in_millis_deriv.value;\n      if (required) {\n        return last.query_time_in_millis_deriv.value / last.query_total_deriv.value;\n      }\n\n      return 0;\n    }\n  },\n  'node_cpu_utilization': {\n    active: true,\n    field: 'node_stats.process.cpu.percent',\n    label: 'CPU Utilization',\n    description: 'The percentage of CPU usage.',\n    format: formatLargeFloat,\n    metricAgg: 'avg',\n    units: '%',\n    defaults: { warning: '>70', critical: '>90', interval: '1m', periods: 1 },\n    type: 'node',\n    derivative: false\n  },\n  'node_segment_count': {\n    active: true,\n    field: 'node_stats.indices.segments.count',\n    label: 'Segment Count',\n    description: 'The average segment count.',\n    format: formatLargeFloat,\n    metricAgg: 'avg',\n    units: '',\n    defaults: { warning: '>70', critical: '>90', interval: '1m', periods: 1 },\n    type: 'node',\n    derivative: false\n  },\n  'node_jvm_mem_percent': {\n    active: true,\n    field: 'node_stats.jvm.mem.heap_used_percent',\n    label: 'JVM Heap Usage',\n    description: 'The amound of heap used by the JVM',\n    format: formatLargeFloat,\n    metricAgg: 'avg',\n    units: '%',\n    defaults: { warning: '>7', critical: '>9', interval: '1m', periods: 1 },\n    type: 'node',\n    derivative: false\n  },\n  'node_load_average': {\n    active: true,\n    field: 'node_stats.os.load_average',\n    label: 'System Load Average',\n    description: 'The amount of load used for the last 1 minute.',\n    format: formatLargeFloat,\n    metricAgg: 'avg',\n    units: '',\n    defaults: { warning: '>2', critical: '>4', interval: '1m', periods: 1 },\n    type: 'node',\n    derivative: false\n  },\n  'node_free_space': {\n    active: true,\n    field: 'node_stats.fs.total.available_in_bytes',\n    label: 'Disk Free Space',\n    description: 'The free disk space available on the node',\n    format: formatSmallBytes,\n    metricAgg: 'max',\n    units: '',\n    defaults: { warning: '>2', critical: '>4', interval: '1m', periods: 1 },\n    type: 'node',\n    derivative: false\n  },\n  'index_throttle_time': {\n    active: true,\n    field: 'index_stats.primaries.indexing.throttle_time_in_millis',\n    label: 'Indexing Throttle Time',\n    description: 'The amount of load used for the last 1 minute.',\n    format: formatLargeFloat,\n    metricAgg: 'max',\n    units: 'ms',\n    defaults: { warning: '>0', critical: '>0', interval: '1m', periods: 1 },\n    type: 'index',\n    derivative: true\n  },\n  'index_shard_query_rate': {\n    active: false,\n    field: 'index_stats.total.search.query_total',\n    label: 'Index Shard Search Rate',\n    description: 'Total number of requests (GET /_search)across an index (and across all relevant shards for that index) / <time range>',\n    format: formatSmallFloat,\n    metricAgg: 'max',\n    units: '',\n    defaults: { warning: '>0', critical: '>0', interval: '1m', periods: 1 },\n    type: 'index',\n    derivative: true\n  },\n  'index_document_count': {\n    active: false,\n    field: 'index_stats.primaries.docs.count',\n    label: 'Document Count',\n    description: 'Total number of documents (in primary shards) for an index',\n    format: formatLargeAbbreviated,\n    metricAgg: 'max',\n    units: '',\n    defaults: { warning: '>0', critical: '>0', interval: '1m', periods: 1 },\n    type: 'index',\n    derivative: false\n  },\n  'index_search_request_rate': {\n    active: true,\n    field: 'index_stats.total.search.query_total',\n    label: 'Search Rate',\n    description: 'The per index rate at which search reqeusts are being executed.',\n    format: formatLargeFloat,\n    metricAgg: 'max',\n    units: '/s',\n    defaults: { warning: '>100', critical: '>5000', interval: '1m', periods: 1 },\n    type: 'index',\n    derivative: true\n  },\n  'index_merge_rate': {\n    active: true,\n    field: 'index_stats.total.merges.total_size_in_bytes',\n    label: 'Indexing Rate',\n    description: 'The per index rate at which segements are being merged.',\n    format: formatLargeFloat,\n    metricAgg: 'max',\n    units: '/s',\n    defaults: { warning: '>1000', critical: '>5000', interval: '1m', periods: 1 },\n    type: 'index',\n    derivative: true\n  },\n  'index_size': {\n    active: true,\n    field: 'index_stats.total.store.size_in_bytes',\n    label: 'Index Size',\n    description: 'The size of the index.',\n    format: formatLargeBytes,\n    metricAgg: 'avg',\n    units: '',\n    defaults: { warning: '>1000', critical: '>5000', interval: '1m', periods: 1 },\n    type: 'index',\n    derivative: false\n  },\n  'index_lucene_memory': {\n    active: true,\n    field: 'index_stats.total.segments.memory_in_bytes',\n    label: 'Lucene Memory',\n    description: 'The amount of memory used by Lucene.',\n    format: formatLargeBytes,\n    metricAgg: 'avg',\n    units: '',\n    defaults: { warning: '>1000', critical: '>5000', interval: '1m', periods: 1 },\n    type: 'index',\n    derivative: false\n  },\n  'index_fielddata': {\n    active: true,\n    field: 'index_stats.total.fielddata.memory_size_in_bytes',\n    label: 'Field Data Size',\n    description: 'The amount of memory used by field data.',\n    format: formatLargeBytes,\n    metricAgg: 'avg',\n    units: '',\n    defaults: { warning: '>1000', critical: '>5000', interval: '1m', periods: 1 },\n    type: 'index',\n    derivative: false\n  },\n  'index_refresh_time': {\n    active: true,\n    field: 'total.refresh.total_time_in_millis',\n    label: 'Total Refresh Time',\n    description: 'The the amount of time a refresh takes',\n    format: formatLargeFloat,\n    metricAgg: 'max',\n    units: '',\n    defaults: { warning: '>1000', critical: '>5000', interval: '1m', periods: 1 },\n    type: 'index',\n    derivative: true\n  }\n};\n//# sourceMappingURL=data:application/json;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/public/lib/metrics.js"
      ],
      "names": [],
      "mappings": "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",
      "file": "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/public/lib/metrics.js",
      "sourcesContent": [
        "const formatLargeFloat = '0,0.[00]';\nconst formatSmallFloat = '0.[00]';\nconst formatLargeBytes = '0,0.0b';\nconst formatSmallBytes = '0.0b';\nconst formatLargeAbbreviated = '0,0.[0]a';\n\nmodule.exports = {\n  'cluster_index_request_rate': {\n    active: true,\n    field: 'indices_stats._all.primaries.indexing.index_total',\n    label: 'Indexing Rate',\n    description: 'The per index rate at which documents are being indexed.',\n    format: formatLargeFloat,\n    metricAgg: 'max',\n    units: '/s',\n    defaults: { warning: '>1000', critical: '>5000', interval: '1m', periods: 1 },\n    type: 'index',\n    derivative: true\n  },\n  'cluster_search_request_rate': {\n    active: true,\n    field: 'indices_stats._all.total.search.query_total',\n    label: 'Search Rate',\n    description: 'The cluster wide rate at which search reqeusts are being executed.',\n    format: formatLargeFloat,\n    metricAgg: 'max',\n    units: '/s',\n    defaults: { warning: '>100', critical: '>5000', interval: '1m', periods: 1 },\n    type: 'cluster',\n    derivative: true\n  },\n  'cluster_index_latency': {\n    active: true,\n    field: 'indices_stats._all.primaries.indexing.index_total',\n    label: 'Indexing Latency',\n    description: 'The average indexing latency across the entire cluster.',\n    format: formatLargeFloat,\n    metricAgg: 'sum',\n    aggs: {\n      index_time_in_millis: {\n        max: { field: 'indices_stats._all.primaries.indexing.index_time_in_millis' }\n      },\n      index_total: {\n        max: { field: 'indices_stats._all.primaries.indexing.index_total' }\n      },\n      index_time_in_millis_deriv: {\n        derivative: { buckets_path: 'index_time_in_millis', gap_policy: 'skip' }\n      },\n      index_total_deriv: {\n        derivative: { buckets_path: 'index_total', gap_policy: 'skip' }\n      }\n    },\n    units: 'ms',\n    defaults: { warning: '>100', critical: '>200', interval: '1m', periods: 1 },\n    type: 'cluster',\n    derivitave: false,\n    calculation: function (last) {\n      var required = last &&\n          last.index_time_in_millis_deriv &&\n          last.index_total_deriv &&\n          last.index_total_deriv.value &&\n          last.index_time_in_millis_deriv.value;\n      if (required) {\n        return last.index_time_in_millis_deriv.value / last.index_total_deriv.value;\n      }\n\n      return 0;\n    }\n  },\n  'cluster_query_latency': {\n    active: true,\n    field: 'indices_stats._all.total.search.query_total',\n    label: 'Search Latency',\n    description: 'The average search latency across the entire cluster.',\n    format: formatLargeFloat,\n    metricAgg: 'sum',\n    aggs: {\n      query_time_in_millis: {\n        max: { field: 'indices_stats._all.total.search.query_time_in_millis' }\n      },\n      query_total: {\n        max: { field: 'indices_stats._all.total.search.query_total' }\n      },\n      query_time_in_millis_deriv: {\n        derivative: { buckets_path: 'query_time_in_millis', gap_policy: 'skip' }\n      },\n      query_total_deriv: {\n        derivative: { buckets_path: 'query_total', gap_policy: 'skip' }\n      }\n    },\n    units: 'ms',\n    defaults: { warning: '>100', critical: '>200', interval: '1m', periods: 1 },\n    type: 'cluster',\n    derivitave: false,\n    calculation: function (last) {\n      var required = last &&\n          last.query_time_in_millis_deriv &&\n          last.query_total_deriv &&\n          last.query_total_deriv.value &&\n          last.query_time_in_millis_deriv.value;\n      if (required) {\n        return last.query_time_in_millis_deriv.value / last.query_total_deriv.value;\n      }\n\n      return 0;\n    }\n  },\n  'node_index_latency': {\n    active: true,\n    field: 'node_stats.indices.indexing.index_total',\n    label: 'Indexing Latency',\n    description: 'The average indexing latency',\n    format: formatLargeFloat,\n    metricAgg: 'sum',\n    aggs: {\n      index_time_in_millis: {\n        max: { field: 'node_stats.indices.indexing.index_time_in_millis' }\n      },\n      index_total: {\n        max: { field: 'node_stats.indices.indexing.index_total' }\n      },\n      index_time_in_millis_deriv: {\n        derivative: { buckets_path: 'index_time_in_millis', gap_policy: 'skip' }\n      },\n      index_total_deriv: {\n        derivative: { buckets_path: 'index_total', gap_policy: 'skip' }\n      }\n    },\n    units: 'ms',\n    defaults: { warning: '>100', critical: '>200', interval: '1m', periods: 1 },\n    type: 'node',\n    derivitave: false,\n    calculation: function (last) {\n      var required = last &&\n          last.index_time_in_millis_deriv &&\n          last.index_total_deriv &&\n          last.index_total_deriv.value &&\n          last.index_time_in_millis_deriv.value;\n      if (required) {\n        return last.index_time_in_millis_deriv.value / last.index_total_deriv.value;\n      }\n\n      return 0;\n    }\n  },\n  'node_query_latency': {\n    active: true,\n    field: 'node_stats.indices.search.query_total',\n    label: 'Search Latency',\n    description: 'The average search latency',\n    format: formatLargeFloat,\n    metricAgg: 'sum',\n    aggs: {\n      query_time_in_millis: {\n        max: { field: 'node_stats.indices.search.query_time_in_millis' }\n      },\n      query_total: {\n        max: { field: 'node_stats.indices.search.query_total' }\n      },\n      query_time_in_millis_deriv: {\n        derivative: { buckets_path: 'query_time_in_millis', gap_policy: 'skip' }\n      },\n      query_total_deriv: {\n        derivative: { buckets_path: 'query_total', gap_policy: 'skip' }\n      }\n    },\n    units: 'ms',\n    defaults: { warning: '>100', critical: '>200', interval: '1m', periods: 1 },\n    type: 'node',\n    derivitave: false,\n    calculation: function (last) {\n      var required = last &&\n          last.query_time_in_millis_deriv &&\n          last.query_total_deriv &&\n          last.query_total_deriv.value &&\n          last.query_time_in_millis_deriv.value;\n      if (required) {\n        return last.query_time_in_millis_deriv.value / last.query_total_deriv.value;\n      }\n\n      return 0;\n    }\n  },\n  'index_request_rate': {\n    active: true,\n    field: 'index_stats.primaries.indexing.index_total',\n    label: 'Indexing Rate',\n    description: 'The per index rate at which documents are being indexed.',\n    format: formatLargeFloat,\n    metricAgg: 'max',\n    units: '/s',\n    defaults: { warning: '>1000', critical: '>5000', interval: '1m', periods: 1 },\n    type: 'index',\n    derivative: true\n  },\n  'search_request_rate': {\n    active: true,\n    field: 'index_stats.total.search.query_total',\n    label: 'Search Rate',\n    description: 'The cluster wide rate at which search reqeusts are being executed.',\n    format: formatLargeFloat,\n    metricAgg: 'max',\n    units: '/s',\n    defaults: { warning: '>100', critical: '>5000', interval: '1m', periods: 1 },\n    type: 'cluster',\n    derivative: true\n  },\n  'index_latency': {\n    active: true,\n    field: 'index_stats.primaries.indexing.index_total',\n    label: 'Indexing Latency',\n    description: 'The average indexing latency across the entire cluster.',\n    format: formatLargeFloat,\n    metricAgg: 'sum',\n    aggs: {\n      index_time_in_millis: {\n        max: { field: 'index_stats.primaries.indexing.index_time_in_millis' }\n      },\n      index_total: {\n        max: { field: 'index_stats.primaries.indexing.index_total' }\n      },\n      index_time_in_millis_deriv: {\n        derivative: { buckets_path: 'index_time_in_millis', gap_policy: 'skip' }\n      },\n      index_total_deriv: {\n        derivative: { buckets_path: 'index_total', gap_policy: 'skip' }\n      }\n    },\n    units: 'ms',\n    defaults: { warning: '>100', critical: '>200', interval: '1m', periods: 1 },\n    type: 'cluster',\n    derivitave: false,\n    calculation: function (last) {\n      var required = last &&\n          last.index_time_in_millis_deriv &&\n          last.index_total_deriv &&\n          last.index_total_deriv.value &&\n          last.index_time_in_millis_deriv.value;\n      if (required) {\n        return last.index_time_in_millis_deriv.value / last.index_total_deriv.value;\n      }\n\n      return 0;\n    }\n  },\n  'query_latency': {\n    active: true,\n    field: 'index_stats.total.search.query_total',\n    label: 'Search Latency',\n    description: 'The average search latency across the entire cluster.',\n    format: formatLargeFloat,\n    metricAgg: 'sum',\n    aggs: {\n      query_time_in_millis: {\n        max: { field: 'index_stats.total.search.query_time_in_millis' }\n      },\n      query_total: {\n        max: { field: 'index_stats.total.search.query_total' }\n      },\n      query_time_in_millis_deriv: {\n        derivative: { buckets_path: 'query_time_in_millis', gap_policy: 'skip' }\n      },\n      query_total_deriv: {\n        derivative: { buckets_path: 'query_total', gap_policy: 'skip' }\n      }\n    },\n    units: 'ms',\n    defaults: { warning: '>100', critical: '>200', interval: '1m', periods: 1 },\n    type: 'cluster',\n    derivitave: false,\n    calculation: function (last) {\n      var required = last &&\n          last.query_time_in_millis_deriv &&\n          last.query_total_deriv &&\n          last.query_total_deriv.value &&\n          last.query_time_in_millis_deriv.value;\n      if (required) {\n        return last.query_time_in_millis_deriv.value / last.query_total_deriv.value;\n      }\n\n      return 0;\n    }\n  },\n  'node_cpu_utilization': {\n    active: true,\n    field: 'node_stats.process.cpu.percent',\n    label: 'CPU Utilization',\n    description: 'The percentage of CPU usage.',\n    format: formatLargeFloat,\n    metricAgg: 'avg',\n    units: '%',\n    defaults: { warning: '>70', critical: '>90', interval: '1m', periods: 1 },\n    type: 'node',\n    derivative: false\n  },\n  'node_segment_count': {\n    active: true,\n    field: 'node_stats.indices.segments.count',\n    label: 'Segment Count',\n    description: 'The average segment count.',\n    format: formatLargeFloat,\n    metricAgg: 'avg',\n    units: '',\n    defaults: { warning: '>70', critical: '>90', interval: '1m', periods: 1 },\n    type: 'node',\n    derivative: false\n  },\n  'node_jvm_mem_percent': {\n    active: true,\n    field: 'node_stats.jvm.mem.heap_used_percent',\n    label: 'JVM Heap Usage',\n    description: 'The amound of heap used by the JVM',\n    format: formatLargeFloat,\n    metricAgg: 'avg',\n    units: '%',\n    defaults: { warning: '>7', critical: '>9', interval: '1m', periods: 1  },\n    type: 'node',\n    derivative: false\n  },\n  'node_load_average': {\n    active: true,\n    field: 'node_stats.os.load_average',\n    label: 'System Load Average',\n    description: 'The amount of load used for the last 1 minute.',\n    format: formatLargeFloat,\n    metricAgg: 'avg',\n    units: '',\n    defaults: { warning: '>2', critical: '>4', interval: '1m', periods: 1 },\n    type: 'node',\n    derivative: false\n  },\n  'node_free_space': {\n    active: true,\n    field: 'node_stats.fs.total.available_in_bytes',\n    label: 'Disk Free Space',\n    description: 'The free disk space available on the node',\n    format: formatSmallBytes,\n    metricAgg: 'max',\n    units: '',\n    defaults: { warning: '>2', critical: '>4', interval: '1m', periods: 1 },\n    type: 'node',\n    derivative: false\n  },\n  'index_throttle_time': {\n    active: true,\n    field: 'index_stats.primaries.indexing.throttle_time_in_millis',\n    label: 'Indexing Throttle Time',\n    description: 'The amount of load used for the last 1 minute.',\n    format: formatLargeFloat,\n    metricAgg: 'max',\n    units: 'ms',\n    defaults: { warning: '>0', critical: '>0', interval: '1m', periods: 1 },\n    type: 'index',\n    derivative: true\n  },\n  'index_shard_query_rate': {\n    active: false,\n    field: 'index_stats.total.search.query_total',\n    label: 'Index Shard Search Rate',\n    description: 'Total number of requests (GET /_search)across an index (and across all relevant shards for that index) / <time range>',\n    format: formatSmallFloat,\n    metricAgg: 'max',\n    units: '',\n    defaults: { warning: '>0', critical: '>0', interval: '1m', periods: 1 },\n    type: 'index',\n    derivative: true\n  },\n  'index_document_count': {\n    active: false,\n    field: 'index_stats.primaries.docs.count',\n    label: 'Document Count',\n    description: 'Total number of documents (in primary shards) for an index',\n    format: formatLargeAbbreviated,\n    metricAgg: 'max',\n    units: '',\n    defaults: { warning: '>0', critical: '>0', interval: '1m', periods: 1 },\n    type: 'index',\n    derivative: false\n  },\n  'index_search_request_rate': {\n    active: true,\n    field: 'index_stats.total.search.query_total',\n    label: 'Search Rate',\n    description: 'The per index rate at which search reqeusts are being executed.',\n    format: formatLargeFloat,\n    metricAgg: 'max',\n    units: '/s',\n    defaults: { warning: '>100', critical: '>5000', interval: '1m', periods: 1 },\n    type: 'index',\n    derivative: true\n  },\n  'index_merge_rate': {\n    active: true,\n    field: 'index_stats.total.merges.total_size_in_bytes',\n    label: 'Indexing Rate',\n    description: 'The per index rate at which segements are being merged.',\n    format: formatLargeFloat,\n    metricAgg: 'max',\n    units: '/s',\n    defaults: { warning: '>1000', critical: '>5000', interval: '1m', periods: 1 },\n    type: 'index',\n    derivative: true\n  },\n  'index_size': {\n    active: true,\n    field: 'index_stats.total.store.size_in_bytes',\n    label: 'Index Size',\n    description: 'The size of the index.',\n    format: formatLargeBytes,\n    metricAgg: 'avg',\n    units: '',\n    defaults: { warning: '>1000', critical: '>5000', interval: '1m', periods: 1 },\n    type: 'index',\n    derivative: false\n  },\n  'index_lucene_memory': {\n    active: true,\n    field: 'index_stats.total.segments.memory_in_bytes',\n    label: 'Lucene Memory',\n    description: 'The amount of memory used by Lucene.',\n    format: formatLargeBytes,\n    metricAgg: 'avg',\n    units: '',\n    defaults: { warning: '>1000', critical: '>5000', interval: '1m', periods: 1 },\n    type: 'index',\n    derivative: false\n  },\n  'index_fielddata': {\n    active: true,\n    field: 'index_stats.total.fielddata.memory_size_in_bytes',\n    label: 'Field Data Size',\n    description: 'The amount of memory used by field data.',\n    format: formatLargeBytes,\n    metricAgg: 'avg',\n    units: '',\n    defaults: { warning: '>1000', critical: '>5000', interval: '1m', periods: 1 },\n    type: 'index',\n    derivative: false\n  },\n  'index_refresh_time': {\n    active: true,\n    field: 'total.refresh.total_time_in_millis',\n    label: 'Total Refresh Time',\n    description: 'The the amount of time a refresh takes',\n    format: formatLargeFloat,\n    metricAgg: 'max',\n    units: '',\n    defaults: { warning: '>1000', critical: '>5000', interval: '1m', periods: 1 },\n    type: 'index',\n    derivative: true\n  }\n};\n"
      ]
    },
    "mtime": 1468947861000
  },
  "{\"filename\":\"/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/calculate_auto.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "'use strict';\n\nvar moment = require('moment');\nvar d = moment.duration;\n\nvar roundingRules = [[d(500, 'ms'), d(100, 'ms')], [d(5, 'second'), d(1, 'second')], [d(7.5, 'second'), d(5, 'second')], [d(15, 'second'), d(10, 'second')], [d(45, 'second'), d(30, 'second')], [d(3, 'minute'), d(1, 'minute')], [d(9, 'minute'), d(5, 'minute')], [d(20, 'minute'), d(10, 'minute')], [d(45, 'minute'), d(30, 'minute')], [d(2, 'hour'), d(1, 'hour')], [d(6, 'hour'), d(3, 'hour')], [d(24, 'hour'), d(12, 'hour')], [d(1, 'week'), d(1, 'd')], [d(3, 'week'), d(1, 'week')], [d(1, 'year'), d(1, 'month')], [Infinity, d(1, 'year')]];\n\nvar revRoundingRules = roundingRules.slice(0).reverse();\n\nfunction find(rules, check, last) {\n  function pick(buckets, duration) {\n    var target = duration / buckets;\n    var lastResp;\n\n    for (var i = 0; i < rules.length; i++) {\n      var rule = rules[i];\n      var resp = check(rule[0], rule[1], target);\n\n      if (resp == null) {\n        if (!last) continue;\n        if (lastResp) return lastResp;\n        break;\n      }\n\n      if (!last) return resp;\n      lastResp = resp;\n    }\n\n    // fallback to just a number of milliseconds, ensure ms is >= 1\n    var ms = Math.max(Math.floor(target), 1);\n    return moment.duration(ms, 'ms');\n  }\n\n  return function (buckets, duration) {\n    var interval = pick(buckets, duration);\n    if (interval) return moment.duration(interval._data);\n  };\n}\n\nmodule.exports = {\n  near: find(revRoundingRules, function near(bound, interval, target) {\n    if (bound > target) return interval;\n  }, true),\n\n  lessThan: find(revRoundingRules, function (bound, interval, target) {\n    if (interval < target) return interval;\n  }),\n\n  atLeast: find(revRoundingRules, function atLeast(bound, interval, target) {\n    if (interval <= target) return interval;\n  })\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9UaGVvL0Rlc2t0b3AvTmVidWxhVGVtcC9OZWJ1bGEvZWxhc3RpY3NlYXJjaC9pbnN0YWxsZWRQbHVnaW5zL21hcnZlbC9zZXJ2ZXIvbGliL2NhbGN1bGF0ZV9hdXRvLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBSSxNQUFNLEdBQUcsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0FBQy9CLElBQUksQ0FBQyxHQUFHLE1BQU0sQ0FBQyxRQUFRLENBQUM7O0FBRXhCLElBQUksYUFBYSxHQUFHLENBQ2xCLENBQUUsQ0FBQyxDQUFDLEdBQUcsRUFBRSxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsR0FBRyxFQUFFLElBQUksQ0FBQyxDQUFFLEVBQzlCLENBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLFFBQVEsQ0FBQyxDQUFFLEVBQ2xDLENBQUUsQ0FBQyxDQUFDLEdBQUcsRUFBRSxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLFFBQVEsQ0FBQyxDQUFFLEVBQ3BDLENBQUUsQ0FBQyxDQUFDLEVBQUUsRUFBRSxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxFQUFFLFFBQVEsQ0FBQyxDQUFFLEVBQ3BDLENBQUUsQ0FBQyxDQUFDLEVBQUUsRUFBRSxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxFQUFFLFFBQVEsQ0FBQyxDQUFFLEVBQ3BDLENBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLFFBQVEsQ0FBQyxDQUFFLEVBQ2xDLENBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLFFBQVEsQ0FBQyxDQUFFLEVBQ2xDLENBQUUsQ0FBQyxDQUFDLEVBQUUsRUFBRSxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxFQUFFLFFB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VUFBUSxFQUFFLElBQUksQ0FBQyxnQkFBZ0IsRUFBRSxVQUFVLEtBQUssRUFBRSxRQUFRLEVBQUUsTUFBTSxFQUFFO0FBQ2xFLFFBQUksUUFBUSxHQUFHLE1BQU0sRUFBRSxPQUFPLFFBQVEsQ0FBQztHQUN4QyxDQUFDOztBQUVGLFNBQU8sRUFBRSxJQUFJLENBQUMsZ0JBQWdCLEVBQUUsU0FBUyxPQUFPLENBQUMsS0FBSyxFQUFFLFFBQVEsRUFBRSxNQUFNLEVBQUU7QUFDeEUsUUFBSSxRQUFRLElBQUksTUFBTSxFQUFFLE9BQU8sUUFBUSxDQUFDO0dBQ3pDLENBQUM7Q0FDSCxDQUFDIiwiZmlsZSI6Ii9Vc2Vycy9UaGVvL0Rlc2t0b3AvTmVidWxhVGVtcC9OZWJ1bGEvZWxhc3RpY3NlYXJjaC9pbnN0YWxsZWRQbHVnaW5zL21hcnZlbC9zZXJ2ZXIvbGliL2NhbGN1bGF0ZV9hdXRvLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIG1vbWVudCA9IHJlcXVpcmUoJ21vbWVudCcpO1xudmFyIGQgPSBtb21lbnQuZHVyYXRpb247XG5cbnZhciByb3VuZGluZ1J1bGVzID0gW1xuICBbIGQoNTAwLCAnbXMnKSwgZCgxMDAsICdtcycpIF0sXG4gIFsgZCg1LCAnc2Vjb25kJyksIGQoMSwgJ3NlY29uZCcpIF0sXG4gIFsgZCg3LjUsICdzZWNvbmQnKSwgZCg1LCAnc2Vjb25kJykgXSxcbiAgWyBkKDE1LCAnc2Vjb25kJyksIGQoMTAsICdzZWNvbmQnKSBdLFxuICBbIGQoNDUsICdzZWNvbmQnKSwgZCgzMCwgJ3NlY29uZCcpIF0sXG4gIFsgZCgzLCAnbWludXRlJyksIGQoMSwgJ21pbnV0ZScpIF0sXG4gIFsgZCg5LCAnbWludXRlJyksIGQoNSwgJ21pbnV0ZScpIF0sXG4gIFsgZCgyMCwgJ21pbnV0ZScpLCBkKDEwLCAnbWludXRlJykgXSxcbiAgWyBkKDQ1LCAnbWludXRlJyksIGQoMzAsICdtaW51dGUnKSBdLFxuICBbIGQoMiwgJ2hvdXInKSwgZCgxLCAnaG91cicpIF0sXG4gIFsgZCg2LCAnaG91cicpLCBkKDMsICdob3VyJykgXSxcbiAgWyBkKDI0LCAnaG91cicpLCBkKDEyLCAnaG91cicpIF0sXG4gIFsgZCgxLCAnd2VlaycpLCBkKDEsICdkJykgXSxcbiAgWyBkKDMsICd3ZWVrJyksIGQoMSwgJ3dlZWsnKSBdLFxuICBbIGQoMSwgJ3llYXInKSwgZCgxLCAnbW9udGgnKSBdLFxuICBbIEluZmluaXR5LCBkKDEsICd5ZWFyJykgXVxuXTtcblxudmFyIHJldlJvdW5kaW5nUnVsZXMgPSByb3VuZGluZ1J1bGVzLnNsaWNlKDApLnJldmVyc2UoKTtcblxuZnVuY3Rpb24gZmluZChydWxlcywgY2hlY2ssIGxhc3QpIHtcbiAgZnVuY3Rpb24gcGljayhidWNrZXRzLCBkdXJhdGlvbikge1xuICAgIHZhciB0YXJnZXQgPSBkdXJhdGlvbiAvIGJ1Y2tldHM7XG4gICAgdmFyIGxhc3RSZXNwO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBydWxlcy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIHJ1bGUgPSBydWxlc1tpXTtcbiAgICAgIHZhciByZXNwID0gY2hlY2socnVsZVswXSwgcnVsZVsxXSwgdGFyZ2V0KTtcblxuICAgICAgaWYgKHJlc3AgPT0gbnVsbCkge1xuICAgICAgICBpZiAoIWxhc3QpIGNvbnRpbnVlO1xuICAgICAgICBpZiAobGFzdFJlc3ApIHJldHVybiBsYXN0UmVzcDtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG5cbiAgICAgIGlmICghbGFzdCkgcmV0dXJuIHJlc3A7XG4gICAgICBsYXN0UmVzcCA9IHJlc3A7XG4gICAgfVxuXG4gICAgLy8gZmFsbGJhY2sgdG8ganVzdCBhIG51bWJlciBvZiBtaWxsaXNlY29uZHMsIGVuc3VyZSBtcyBpcyA+PSAxXG4gICAgdmFyIG1zID0gTWF0aC5tYXgoTWF0aC5mbG9vcih0YXJnZXQpLCAxKTtcbiAgICByZXR1cm4gbW9tZW50LmR1cmF0aW9uKG1zLCAnbXMnKTtcbiAgfVxuXG4gIHJldHVybiBmdW5jdGlvbiAoYnVja2V0cywgZHVyYXRpb24pIHtcbiAgICB2YXIgaW50ZXJ2YWwgPSBwaWNrKGJ1Y2tldHMsIGR1cmF0aW9uKTtcbiAgICBpZiAoaW50ZXJ2YWwpIHJldHVybiBtb21lbnQuZHVyYXRpb24oaW50ZXJ2YWwuX2RhdGEpO1xuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgbmVhcjogZmluZChyZXZSb3VuZGluZ1J1bGVzLCBmdW5jdGlvbiBuZWFyKGJvdW5kLCBpbnRlcnZhbCwgdGFyZ2V0KSB7XG4gICAgaWYgKGJvdW5kID4gdGFyZ2V0KSByZXR1cm4gaW50ZXJ2YWw7XG4gIH0sIHRydWUpLFxuXG4gIGxlc3NUaGFuOiBmaW5kKHJldlJvdW5kaW5nUnVsZXMsIGZ1bmN0aW9uIChib3VuZCwgaW50ZXJ2YWwsIHRhcmdldCkge1xuICAgIGlmIChpbnRlcnZhbCA8IHRhcmdldCkgcmV0dXJuIGludGVydmFsO1xuICB9KSxcblxuICBhdExlYXN0OiBmaW5kKHJldlJvdW5kaW5nUnVsZXMsIGZ1bmN0aW9uIGF0TGVhc3QoYm91bmQsIGludGVydmFsLCB0YXJnZXQpIHtcbiAgICBpZiAoaW50ZXJ2YWwgPD0gdGFyZ2V0KSByZXR1cm4gaW50ZXJ2YWw7XG4gIH0pLFxufTtcblxuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/calculate_auto.js"
      ],
      "names": [],
      "mappings": "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",
      "file": "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/calculate_auto.js",
      "sourcesContent": [
        "var moment = require('moment');\nvar d = moment.duration;\n\nvar roundingRules = [\n  [ d(500, 'ms'), d(100, 'ms') ],\n  [ d(5, 'second'), d(1, 'second') ],\n  [ d(7.5, 'second'), d(5, 'second') ],\n  [ d(15, 'second'), d(10, 'second') ],\n  [ d(45, 'second'), d(30, 'second') ],\n  [ d(3, 'minute'), d(1, 'minute') ],\n  [ d(9, 'minute'), d(5, 'minute') ],\n  [ d(20, 'minute'), d(10, 'minute') ],\n  [ d(45, 'minute'), d(30, 'minute') ],\n  [ d(2, 'hour'), d(1, 'hour') ],\n  [ d(6, 'hour'), d(3, 'hour') ],\n  [ d(24, 'hour'), d(12, 'hour') ],\n  [ d(1, 'week'), d(1, 'd') ],\n  [ d(3, 'week'), d(1, 'week') ],\n  [ d(1, 'year'), d(1, 'month') ],\n  [ Infinity, d(1, 'year') ]\n];\n\nvar revRoundingRules = roundingRules.slice(0).reverse();\n\nfunction find(rules, check, last) {\n  function pick(buckets, duration) {\n    var target = duration / buckets;\n    var lastResp;\n\n    for (var i = 0; i < rules.length; i++) {\n      var rule = rules[i];\n      var resp = check(rule[0], rule[1], target);\n\n      if (resp == null) {\n        if (!last) continue;\n        if (lastResp) return lastResp;\n        break;\n      }\n\n      if (!last) return resp;\n      lastResp = resp;\n    }\n\n    // fallback to just a number of milliseconds, ensure ms is >= 1\n    var ms = Math.max(Math.floor(target), 1);\n    return moment.duration(ms, 'ms');\n  }\n\n  return function (buckets, duration) {\n    var interval = pick(buckets, duration);\n    if (interval) return moment.duration(interval._data);\n  };\n}\n\nmodule.exports = {\n  near: find(revRoundingRules, function near(bound, interval, target) {\n    if (bound > target) return interval;\n  }, true),\n\n  lessThan: find(revRoundingRules, function (bound, interval, target) {\n    if (interval < target) return interval;\n  }),\n\n  atLeast: find(revRoundingRules, function atLeast(bound, interval, target) {\n    if (interval <= target) return interval;\n  }),\n};\n\n"
      ]
    },
    "mtime": 1468947861000
  },
  "{\"filename\":\"/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/filter_partial_buckets.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "'use strict';\n\nvar moment = require('moment');\n\n/* calling .subtract or .add on a moment object mutates the object\n * so this function shortcuts creating a fresh object */\nfunction getTime(bucket) {\n  return moment.utc(bucket.key);\n}\n\n/* find the milliseconds of difference between 2 moment objects */\nfunction getDelta(t1, t2) {\n  return moment.duration(t1 - t2).asMilliseconds();\n}\n\nmodule.exports = function filterPartialBuckets(min, max, bucketSize) {\n  var options = arguments.length <= 3 || arguments[3] === undefined ? {} : arguments[3];\n\n  return function (bucket) {\n    var bucketTime = getTime(bucket);\n    // timestamp is too late to be complete\n    if (getDelta(max, bucketTime.add(bucketSize, 'seconds')) < 0) {\n      return false;\n    }\n\n    /* Table listing metrics don't need to filter the beginning of data for\n     * partial buckets. They just boil down the data into max/min/last/slope\n     * numbers instead of graphing it. So table listing data buckets pass\n    * ignoreEarly */\n    if (options.ignoreEarly !== true) {\n      // timestamp is too early to be complete\n      if (getDelta(bucketTime.subtract(bucketSize, 'seconds'), min) < 0) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9UaGVvL0Rlc2t0b3AvTmVidWxhVGVtcC9OZWJ1bGEvZWxhc3RpY3NlYXJjaC9pbnN0YWxsZWRQbHVnaW5zL21hcnZlbC9zZXJ2ZXIvbGliL2ZpbHRlcl9wYXJ0aWFsX2J1Y2tldHMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFNLE1BQU0sR0FBRyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUM7Ozs7QUFJakMsU0FBUyxPQUFPLENBQUMsTUFBTSxFQUFFO0FBQ3ZCLFNBQU8sTUFBTSxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUM7Q0FDL0I7OztBQUdELFNBQVMsUUFBUSxDQUFDLEVBQUUsRUFBRSxFQUFFLEVBQUU7QUFDeEIsU0FBTyxNQUFNLENBQUMsUUFBUSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQyxjQUFjLEVBQUUsQ0FBQztDQUNsRDs7QUFFRCxNQUFNLENBQUMsT0FBTyxHQUFHLFNBQVMsb0JBQW9CLENBQUMsR0FBRyxFQUFFLEdBQUcsRUFBRSxVQUFVLEVBQWdCO01BQWQsT0FBTyx5REFBRyxFQUFFOztBQUMvRSxTQUFPLFVBQUMsTUFBTSxFQUFLO0FBQ2pCLFFBQU0sVUFBVSxHQUFHLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQzs7QUFFbkMsUUFBSSxRQUFRLENBQUMsR0FBRyxFQUFFLFVBQVUsQ0FBQyxHQUFHLENBQUMsVUFBVSxFQUFFLFNBQVMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxFQUFFO0FBQzVELGFBQU8sS0FBSyxDQUFDO0tBQ2Q7Ozs7OztBQU1ELFFBQUksT0FBTyxDQUFDLFdBQVcsS0FBSyxJQUFJLEVBQUU7O0FBRWhDLFVBQUksUUFBUSxDQUFDLFVBQVUsQ0FBQyxRQUFRLENBQUMsVUFBVSxFQUFFLFNBQVMsQ0FBQyxFQUFFLEdBQUcsQ0FBQyxHQUFHLENBQUMsRUFBRTtBQUNqRSxlQUFPLEtBQUssQ0FBQztPQUNkO0tBQ0Y7O0FBRUQsV0FBTyxJQUFJLENBQUM7R0FDYixDQUFDO0NBQ0gsQ0FBQyIsImZpbGUiOiIvVXNlcnMvVGhlby9EZXNrdG9wL05lYnVsYVRlbXAvTmVidWxhL2VsYXN0aWNzZWFyY2gvaW5zdGFsbGVkUGx1Z2lucy9tYXJ2ZWwvc2VydmVyL2xpYi9maWx0ZXJfcGFydGlhbF9idWNrZXRzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgbW9tZW50ID0gcmVxdWlyZSgnbW9tZW50Jyk7XG5cbi8qIGNhbGxpbmcgLnN1YnRyYWN0IG9yIC5hZGQgb24gYSBtb21lbnQgb2JqZWN0IG11dGF0ZXMgdGhlIG9iamVjdFxuICogc28gdGhpcyBmdW5jdGlvbiBzaG9ydGN1dHMgY3JlYXRpbmcgYSBmcmVzaCBvYmplY3QgKi9cbmZ1bmN0aW9uIGdldFRpbWUoYnVja2V0KSB7XG4gIHJldHVybiBtb21lbnQudXRjKGJ1Y2tldC5rZXkpO1xufVxuXG4vKiBmaW5kIHRoZSBtaWxsaXNlY29uZHMgb2YgZGlmZmVyZW5jZSBiZXR3ZWVuIDIgbW9tZW50IG9iamVjdHMgKi9cbmZ1bmN0aW9uIGdldERlbHRhKHQxLCB0Mikge1xuICByZXR1cm4gbW9tZW50LmR1cmF0aW9uKHQxIC0gdDIpLmFzTWlsbGlzZWNvbmRzKCk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gZmlsdGVyUGFydGlhbEJ1Y2tldHMobWluLCBtYXgsIGJ1Y2tldFNpemUsIG9wdGlvbnMgPSB7fSkge1xuICByZXR1cm4gKGJ1Y2tldCkgPT4ge1xuICAgIGNvbnN0IGJ1Y2tldFRpbWUgPSBnZXRUaW1lKGJ1Y2tldCk7XG4gICAgLy8gdGltZXN0YW1wIGlzIHRvbyBsYXRlIHRvIGJlIGNvbXBsZXRlXG4gICAgaWYgKGdldERlbHRhKG1heCwgYnVja2V0VGltZS5hZGQoYnVja2V0U2l6ZSwgJ3NlY29uZHMnKSkgPCAwKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgLyogVGFibGUgbGlzdGluZyBtZXRyaWNzIGRvbid0IG5lZWQgdG8gZmlsdGVyIHRoZSBiZWdpbm5pbmcgb2YgZGF0YSBmb3JcbiAgICAgKiBwYXJ0aWFsIGJ1Y2tldHMuIFRoZXkganVzdCBib2lsIGRvd24gdGhlIGRhdGEgaW50byBtYXgvbWluL2xhc3Qvc2xvcGVcbiAgICAgKiBudW1iZXJzIGluc3RlYWQgb2YgZ3JhcGhpbmcgaXQuIFNvIHRhYmxlIGxpc3RpbmcgZGF0YSBidWNrZXRzIHBhc3NcbiAgICAqIGlnbm9yZUVhcmx5ICovXG4gICAgaWYgKG9wdGlvbnMuaWdub3JlRWFybHkgIT09IHRydWUpIHtcbiAgICAgIC8vIHRpbWVzdGFtcCBpcyB0b28gZWFybHkgdG8gYmUgY29tcGxldGVcbiAgICAgIGlmIChnZXREZWx0YShidWNrZXRUaW1lLnN1YnRyYWN0KGJ1Y2tldFNpemUsICdzZWNvbmRzJyksIG1pbikgPCAwKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gdHJ1ZTtcbiAgfTtcbn07XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/filter_partial_buckets.js"
      ],
      "names": [],
      "mappings": ";;AAAA,IAAM,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;;;;AAIjC,SAAS,OAAO,CAAC,MAAM,EAAE;AACvB,SAAO,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;CAC/B;;;AAGD,SAAS,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE;AACxB,SAAO,MAAM,CAAC,QAAQ,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,cAAc,EAAE,CAAC;CAClD;;AAED,MAAM,CAAC,OAAO,GAAG,SAAS,oBAAoB,CAAC,GAAG,EAAE,GAAG,EAAE,UAAU,EAAgB;MAAd,OAAO,yDAAG,EAAE;;AAC/E,SAAO,UAAC,MAAM,EAAK;AACjB,QAAM,UAAU,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;;AAEnC,QAAI,QAAQ,CAAC,GAAG,EAAE,UAAU,CAAC,GAAG,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC,GAAG,CAAC,EAAE;AAC5D,aAAO,KAAK,CAAC;KACd;;;;;;AAMD,QAAI,OAAO,CAAC,WAAW,KAAK,IAAI,EAAE;;AAEhC,UAAI,QAAQ,CAAC,UAAU,CAAC,QAAQ,CAAC,UAAU,EAAE,SAAS,CAAC,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE;AACjE,eAAO,KAAK,CAAC;OACd;KACF;;AAED,WAAO,IAAI,CAAC;GACb,CAAC;CACH,CAAC",
      "file": "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/filter_partial_buckets.js",
      "sourcesContent": [
        "const moment = require('moment');\n\n/* calling .subtract or .add on a moment object mutates the object\n * so this function shortcuts creating a fresh object */\nfunction getTime(bucket) {\n  return moment.utc(bucket.key);\n}\n\n/* find the milliseconds of difference between 2 moment objects */\nfunction getDelta(t1, t2) {\n  return moment.duration(t1 - t2).asMilliseconds();\n}\n\nmodule.exports = function filterPartialBuckets(min, max, bucketSize, options = {}) {\n  return (bucket) => {\n    const bucketTime = getTime(bucket);\n    // timestamp is too late to be complete\n    if (getDelta(max, bucketTime.add(bucketSize, 'seconds')) < 0) {\n      return false;\n    }\n\n    /* Table listing metrics don't need to filter the beginning of data for\n     * partial buckets. They just boil down the data into max/min/last/slope\n     * numbers instead of graphing it. So table listing data buckets pass\n    * ignoreEarly */\n    if (options.ignoreEarly !== true) {\n      // timestamp is too early to be complete\n      if (getDelta(bucketTime.subtract(bucketSize, 'seconds'), min) < 0) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n};\n"
      ]
    },
    "mtime": 1468947861000
  },
  "{\"filename\":\"/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/pick_metric_fields.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "'use strict';\n\nvar _ = require('lodash');\nmodule.exports = function (metric) {\n  var fields = ['field', 'label', 'description', 'units', 'format'];\n  return _.pick(metric, fields);\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9UaGVvL0Rlc2t0b3AvTmVidWxhVGVtcC9OZWJ1bGEvZWxhc3RpY3NlYXJjaC9pbnN0YWxsZWRQbHVnaW5zL21hcnZlbC9zZXJ2ZXIvbGliL3BpY2tfbWV0cmljX2ZpZWxkcy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLElBQU0sQ0FBQyxHQUFHLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQztBQUM1QixNQUFNLENBQUMsT0FBTyxHQUFHLFVBQUMsTUFBTSxFQUFLO0FBQzNCLE1BQU0sTUFBTSxHQUFHLENBQ2IsT0FBTyxFQUNQLE9BQU8sRUFDUCxhQUFhLEVBQ2IsT0FBTyxFQUNQLFFBQVEsQ0FDVCxDQUFDO0FBQ0YsU0FBTyxDQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxNQUFNLENBQUMsQ0FBQztDQUMvQixDQUFDIiwiZmlsZSI6Ii9Vc2Vycy9UaGVvL0Rlc2t0b3AvTmVidWxhVGVtcC9OZWJ1bGEvZWxhc3RpY3NlYXJjaC9pbnN0YWxsZWRQbHVnaW5zL21hcnZlbC9zZXJ2ZXIvbGliL3BpY2tfbWV0cmljX2ZpZWxkcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IF8gPSByZXF1aXJlKCdsb2Rhc2gnKTtcbm1vZHVsZS5leHBvcnRzID0gKG1ldHJpYykgPT4ge1xuICBjb25zdCBmaWVsZHMgPSBbXG4gICAgJ2ZpZWxkJyxcbiAgICAnbGFiZWwnLFxuICAgICdkZXNjcmlwdGlvbicsXG4gICAgJ3VuaXRzJyxcbiAgICAnZm9ybWF0J1xuICBdO1xuICByZXR1cm4gXy5waWNrKG1ldHJpYywgZmllbGRzKTtcbn07XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/pick_metric_fields.js"
      ],
      "names": [],
      "mappings": ";;AAAA,IAAM,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC5B,MAAM,CAAC,OAAO,GAAG,UAAC,MAAM,EAAK;AAC3B,MAAM,MAAM,GAAG,CACb,OAAO,EACP,OAAO,EACP,aAAa,EACb,OAAO,EACP,QAAQ,CACT,CAAC;AACF,SAAO,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;CAC/B,CAAC",
      "file": "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/pick_metric_fields.js",
      "sourcesContent": [
        "const _ = require('lodash');\nmodule.exports = (metric) => {\n  const fields = [\n    'field',\n    'label',\n    'description',\n    'units',\n    'format'\n  ];\n  return _.pick(metric, fields);\n};\n"
      ]
    },
    "mtime": 1468947861000
  },
  "{\"filename\":\"/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/get_shard_stats.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "'use strict';\n\nvar _ = require('lodash');\nvar createQuery = require('./create_query');\nvar root = require('requirefrom')('');\nvar calculateNodeType = root('server/lib/calculate_node_type');\nvar nodeAggVals = root('server/lib/node_agg_vals');\n\nmodule.exports = function (req, indices, lastState) {\n  var config = req.server.config();\n  var nodeResolver = config.get('marvel.node_resolver');\n  var callWithRequest = req.server.plugins.elasticsearch.callWithRequest;\n  var start = req.payload.timeRange.min;\n  var end = req.payload.timeRange.max;\n  var clusterUuid = req.params.clusterUuid;\n  var aggSize = 10;\n  var params = {\n    index: indices,\n    type: 'shards',\n    ignore: [404],\n    searchType: 'count',\n    body: {\n      sort: { timestamp: { order: 'desc' } },\n      query: createQuery({\n        clusterUuid: clusterUuid,\n        filters: [{ term: { state_uuid: _.get(lastState, 'cluster_state.state_uuid') } }]\n      }),\n      aggs: {\n        indices: {\n          terms: {\n            field: 'shard.index',\n            size: config.get('marvel.max_bucket_size')\n          },\n          aggs: {\n            states: {\n              terms: { field: 'shard.state', size: aggSize },\n              aggs: { primary: { terms: { field: 'shard.primary', size: aggSize } } }\n            }\n          }\n        },\n        nodes: {\n          terms: {\n            field: 'source_node.' + nodeResolver,\n            size: config.get('marvel.max_bucket_size')\n          },\n          aggs: {\n            index_count: { cardinality: { field: 'shard.index' } },\n            node_names: {\n              terms: { field: 'source_node.name', size: aggSize },\n              aggs: { max_timestamp: { max: { field: 'timestamp' } } }\n            },\n            node_transport_address: {\n              terms: { field: 'source_node.transport_address', size: aggSize },\n              aggs: { max_timestamp: { max: { field: 'timestamp' } } }\n            },\n            node_data_attributes: { terms: { field: 'source_node.attributes.data', size: aggSize } },\n            node_master_attributes: { terms: { field: 'source_node.attributes.master', size: aggSize } },\n            // for doing a join on the cluster state to determine if node is current master\n            node_ids: { terms: { field: 'source_node.uuid', size: aggSize } }\n          }\n        }\n      }\n    }\n  };\n\n  return callWithRequest(req, 'search', params).then(function (resp) {\n    var data = {\n      nodes: {},\n      totals: {\n        primary: 0, replica: 0, unassigned: { replica: 0, primary: 0 }\n      }\n    };\n\n    function createNewMetric() {\n      return {\n        status: 'green',\n        primary: 0,\n        replica: 0,\n        unassigned: {\n          replica: 0,\n          primary: 0\n        }\n      };\n    };\n\n    function setStats(bucket, metric, ident) {\n      var states = _.filter(bucket.states.buckets, ident);\n      states.forEach(function (state) {\n        metric.primary = state.primary.buckets.reduce(function (acc, state) {\n          if (state.key) acc += state.doc_count;\n          return acc;\n        }, metric.primary);\n        metric.replica = state.primary.buckets.reduce(function (acc, state) {\n          if (!state.key) acc += state.doc_count;\n          return acc;\n        }, metric.replica);\n      });\n    }\n\n    function processIndexShards(bucket) {\n      var metric = createNewMetric();\n      setStats(bucket, metric, { key: 'STARTED' });\n      setStats(bucket, metric.unassigned, function (bucket) {\n        return bucket.key !== 'STARTED' && bucket.key !== 'RELOCATING';\n      });\n      data.totals.primary += metric.primary;\n      data.totals.replica += metric.replica;\n      data.totals.unassigned.primary += metric.unassigned.primary;\n      data.totals.unassigned.replica += metric.unassigned.replica;\n      if (metric.unassigned.replica) metric.status = 'yellow';\n      if (metric.unassigned.primary) metric.status = 'red';\n      data[bucket.key] = metric;\n    };\n\n    // Mutate \"data\" with a nodes object having a field for every node\n    function processNodeShards(bucket) {\n      data.nodes[bucket.key] = {\n        shardCount: bucket.doc_count,\n        indexCount: bucket.index_count.value,\n        name: nodeAggVals.getLatestAggKey(bucket.node_names.buckets),\n        transport_address: nodeAggVals.getLatestAggKey(bucket.node_transport_address.buckets),\n        node_ids: bucket.node_ids.buckets.map(function (bucket) {\n          return bucket.key;\n        }),\n        attributes: {\n          data: nodeAggVals.getNodeAttribute(bucket.node_data_attributes.buckets),\n          master: nodeAggVals.getNodeAttribute(bucket.node_master_attributes.buckets)\n        }\n      };\n      data.nodes[bucket.key].resolver = data.nodes[bucket.key][nodeResolver];\n    }\n\n    if (resp && resp.hits && resp.hits.total !== 0) {\n      resp.aggregations.indices.buckets.forEach(processIndexShards);\n      resp.aggregations.nodes.buckets.forEach(processNodeShards);\n    }\n\n    _.forEach(data.nodes, function (node) {\n      node.type = calculateNodeType(node, lastState.cluster_state);\n    });\n\n    return data;\n  });\n};\n//# sourceMappingURL=data:application/json;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/get_shard_stats.js"
      ],
      "names": [],
      "mappings": ";;AAAA,IAAM,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC5B,IAAM,WAAW,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAAC;AAC9C,IAAM,IAAI,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC;AACxC,IAAM,iBAAiB,GAAG,IAAI,CAAC,gCAAgC,CAAC,CAAC;AACjE,IAAM,WAAW,GAAG,IAAI,CAAC,0BAA0B,CAAC,CAAC;;AAErD,MAAM,CAAC,OAAO,GAAG,UAAC,GAAG,EAAE,OAAO,EAAE,SAAS,EAAK;AAC5C,MAAM,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;AACnC,MAAM,YAAY,GAAG,MAAM,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;AACxD,MAAM,eAAe,GAAG,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,eAAe,CAAC;AACzE,MAAM,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC;AACxC,MAAM,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC;AACtC,MAAM,WAAW,GAAG,GAAG,CAAC,MAAM,CAAC,WAAW,CAAC;AAC3C,MAAM,OAAO,GAAG,EAAE,CAAC;AACnB,MAAM,MAAM,GAAG;AACb,SAAK,EAAE,OAAO;AACd,QAAI,EAAE,QAAQ;AACd,UAAM,EAAE,CAAC,GAAG,CAAC;AACb,cAAU,EAAE,OAAO;AACnB,QAAI,EAAE;AACJ,UAAI,EAAE,EAAE,SAAS,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,EAAE;AACtC,WAAK,EAAE,WAAW,CAAC;AACjB,mBAAW,EAAE,WAAW;AACxB,eAAO,EAAE,CAAE,EAAE,IAAI,EAAE,EAAE,UAAU,EAAE,CAAC,CAAC,GAAG,CAAC,SAAS,EAAE,0BAA0B,CAAC,EAAE,EAAE,CAAE;OACpF,CAAC;AACF,UAAI,EAAE;AACJ,eAAO,EAAE;AACP,eAAK,EAAE;AACL,iBAAK,EAAE,aAAa;AACpB,gBAAI,EAAE,MAAM,CAAC,GAAG,CAAC,wBAAwB,CAAC;WAC3C;AACD,cAAI,EAAE;AACJ,kBAAM,EAAE;AACN,mBAAK,EAAE,EAAE,KAAK,EAAE,aAAa,EAAE,IAAI,EAAE,OAAO,EAAE;AAC9C,kBAAI,EAAE,EAAE,OAAO,EAAE,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,eAAe,EAAE,IAAI,EAAE,OAAO,EAAE,EAAE,EAAE;aACxE;WACF;SACF;AACD,aAAK,EAAE;AACL,eAAK,EAAE;AACL,iBAAK,mBAAiB,YAAY,AAAE;AACpC,gBAAI,EAAE,MAAM,CAAC,GAAG,CAAC,wBAAwB,CAAC;WAC3C;AACD,cAAI,EAAE;AACJ,uBAAW,EAAE,EAAE,WAAW,EAAE,EAAE,KAAK,EAAE,aAAa,EAAE,EAAE;AACtD,sBAAU,EAAE;AACV,mBAAK,EAAE,EAAE,KAAK,EAAE,kBAAkB,EAAE,IAAI,EAAE,OAAO,EAAE;AACnD,kBAAI,EAAE,EAAE,aAAa,EAAE,EAAE,GAAG,EAAE,EAAE,KAAK,EAAE,WAAW,EAAE,EAAE,EAAE;aACzD;AACD,kCAAsB,EAAE;AACtB,mBAAK,EAAE,EAAE,KAAK,EAAE,+BAA+B,EAAE,IAAI,EAAE,OAAO,EAAE;AAChE,kBAAI,EAAE,EAAE,aAAa,EAAE,EAAE,GAAG,EAAE,EAAE,KAAK,EAAE,WAAW,EAAE,EAAE,EAAE;aACzD;AACD,gCAAoB,EAAE,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,6BAA6B,EAAE,IAAI,EAAE,OAAO,EAAE,EAAE;AACxF,kCAAsB,EAAE,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,+BAA+B,EAAE,IAAI,EAAE,OAAO,EAAE,EAAE;;AAE5F,oBAAQ,EAAE,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,kBAAkB,EAAE,IAAI,EAAE,OAAO,EAAE,EAAE;WAClE;SACF;OACF;KACF;GACF,CAAC;;AAEF,SAAO,eAAe,CAAC,GAAG,EAAE,QAAQ,EAAE,MAAM,CAAC,CAC5C,IAAI,CAAC,UAAC,IAAI,EAAK;AACd,QAAM,IAAI,GAAG;AACX,WAAK,EAAE,EAAE;AACT,YAAM,EAAE;AACN,eAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,UAAU,EAAE,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE;OAC/D;KACF,CAAC;;AAEF,aAAS,eAAe,GAAG;AACzB,aAAO;AACL,cAAM,EAAE,OAAO;AACf,eAAO,EAAE,CAAC;AACV,eAAO,EAAE,CAAC;AACV,kBAAU,EAAE;AACV,iBAAO,EAAE,CAAC;AACV,iBAAO,EAAE,CAAC;SACX;OACF,CAAC;KACH,CAAC;;AAEF,aAAS,QAAQ,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE;AACvC,UAAM,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;AACtD,YAAM,CAAC,OAAO,CAAC,UAAC,KAAK,EAAK;AACxB,cAAM,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,UAAC,GAAG,EAAE,KAAK,EAAK;AAC5D,cAAI,KAAK,CAAC,GAAG,EAAE,GAAG,IAAI,KAAK,CAAC,SAAS,CAAC;AACtC,iBAAO,GAAG,CAAC;SACZ,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC;AACnB,cAAM,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,UAAC,GAAG,EAAE,KAAK,EAAK;AAC5D,cAAI,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,IAAI,KAAK,CAAC,SAAS,CAAC;AACvC,iBAAO,GAAG,CAAC;SACZ,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC;OACpB,CAAC,CAAC;KACJ;;AAED,aAAS,kBAAkB,CAAC,MAAM,EAAE;AAClC,UAAM,MAAM,GAAG,eAAe,EAAE,CAAC;AACjC,cAAQ,CAAC,MAAM,EAAE,MAAM,EAAE,EAAE,GAAG,EAAE,SAAS,EAAE,CAAC,CAAC;AAC7C,cAAQ,CAAC,MAAM,EAAE,MAAM,CAAC,UAAU,EAAE,UAAC,MAAM;eAAK,MAAM,CAAC,GAAG,KAAK,SAAS,IAAI,MAAM,CAAC,GAAG,KAAK,YAAY;OAAA,CAAC,CAAC;AACzG,UAAI,CAAC,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC,OAAO,CAAC;AACtC,UAAI,CAAC,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC,OAAO,CAAC;AACtC,UAAI,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO,IAAI,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC;AAC5D,UAAI,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO,IAAI,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC;AAC5D,UAAI,MAAM,CAAC,UAAU,CAAC,OAAO,EAAE,MAAM,CAAC,MAAM,GAAG,QAAQ,CAAC;AACxD,UAAI,MAAM,CAAC,UAAU,CAAC,OAAO,EAAE,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC;AACrD,UAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC;KAC3B,CAAC;;;AAGF,aAAS,iBAAiB,CAAC,MAAM,EAAE;AACjC,UAAI,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG;AACvB,kBAAU,EAAE,MAAM,CAAC,SAAS;AAC5B,kBAAU,EAAE,MAAM,CAAC,WAAW,CAAC,KAAK;AACpC,YAAI,EAAE,WAAW,CAAC,eAAe,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC;AAC5D,yBAAiB,EAAE,WAAW,CAAC,eAAe,CAAC,MAAM,CAAC,sBAAsB,CAAC,OAAO,CAAC;AACrF,gBAAQ,EAAE,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,UAAA,MAAM;iBAAI,MAAM,CAAC,GAAG;SAAA,CAAC;AAC3D,kBAAU,EAAE;AACV,cAAI,EAAE,WAAW,CAAC,gBAAgB,CAAC,MAAM,CAAC,oBAAoB,CAAC,OAAO,CAAC;AACvE,gBAAM,EAAE,WAAW,CAAC,gBAAgB,CAAC,MAAM,CAAC,sBAAsB,CAAC,OAAO,CAAC;SAC5E;OACF,CAAC;AACF,UAAI,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,YAAY,CAAC,CAAC;KACxE;;AAED,QAAI,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,KAAK,CAAC,EAAE;AAC9C,UAAI,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC;AAC9D,UAAI,CAAC,YAAY,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC;KAC5D;;AAED,KAAC,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,EAAE,UAAA,IAAI,EAAI;AAC5B,UAAI,CAAC,IAAI,GAAG,iBAAiB,CAAC,IAAI,EAAE,SAAS,CAAC,aAAa,CAAC,CAAC;KAC9D,CAAC,CAAC;;AAEH,WAAO,IAAI,CAAC;GAEb,CAAC,CAAC;CACJ,CAAC",
      "file": "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/get_shard_stats.js",
      "sourcesContent": [
        "const _ = require('lodash');\nconst createQuery = require('./create_query');\nconst root = require('requirefrom')('');\nconst calculateNodeType = root('server/lib/calculate_node_type');\nconst nodeAggVals = root('server/lib/node_agg_vals');\n\nmodule.exports = (req, indices, lastState) => {\n  const config = req.server.config();\n  const nodeResolver = config.get('marvel.node_resolver');\n  const callWithRequest = req.server.plugins.elasticsearch.callWithRequest;\n  const start = req.payload.timeRange.min;\n  const end = req.payload.timeRange.max;\n  const clusterUuid = req.params.clusterUuid;\n  const aggSize = 10;\n  const params = {\n    index: indices,\n    type: 'shards',\n    ignore: [404],\n    searchType: 'count',\n    body: {\n      sort: { timestamp: { order: 'desc' } },\n      query: createQuery({\n        clusterUuid: clusterUuid,\n        filters: [ { term: { state_uuid: _.get(lastState, 'cluster_state.state_uuid') } } ]\n      }),\n      aggs: {\n        indices: {\n          terms: {\n            field: 'shard.index',\n            size: config.get('marvel.max_bucket_size')\n          },\n          aggs: {\n            states: {\n              terms: { field: 'shard.state', size: aggSize },\n              aggs: { primary: { terms: { field: 'shard.primary', size: aggSize } } }\n            }\n          }\n        },\n        nodes: {\n          terms: {\n            field: `source_node.${nodeResolver}`,\n            size: config.get('marvel.max_bucket_size')\n          },\n          aggs: {\n            index_count: { cardinality: { field: 'shard.index' } },\n            node_names: {\n              terms: { field: 'source_node.name', size: aggSize },\n              aggs: { max_timestamp: { max: { field: 'timestamp' } } }\n            },\n            node_transport_address: {\n              terms: { field: 'source_node.transport_address', size: aggSize },\n              aggs: { max_timestamp: { max: { field: 'timestamp' } } }\n            },\n            node_data_attributes: { terms: { field: 'source_node.attributes.data', size: aggSize } },\n            node_master_attributes: { terms: { field: 'source_node.attributes.master', size: aggSize } },\n            // for doing a join on the cluster state to determine if node is current master\n            node_ids: { terms: { field: 'source_node.uuid', size: aggSize } }\n          },\n        }\n      }\n    }\n  };\n\n  return callWithRequest(req, 'search', params)\n  .then((resp) => {\n    const data = {\n      nodes: {},\n      totals: {\n        primary: 0, replica: 0, unassigned: { replica: 0, primary: 0 }\n      }\n    };\n\n    function createNewMetric() {\n      return {\n        status: 'green',\n        primary: 0,\n        replica: 0,\n        unassigned: {\n          replica: 0,\n          primary: 0\n        }\n      };\n    };\n\n    function setStats(bucket, metric, ident) {\n      const states = _.filter(bucket.states.buckets, ident);\n      states.forEach((state) => {\n        metric.primary = state.primary.buckets.reduce((acc, state) => {\n          if (state.key) acc += state.doc_count;\n          return acc;\n        }, metric.primary);\n        metric.replica = state.primary.buckets.reduce((acc, state) => {\n          if (!state.key) acc += state.doc_count;\n          return acc;\n        }, metric.replica);\n      });\n    }\n\n    function processIndexShards(bucket) {\n      const metric = createNewMetric();\n      setStats(bucket, metric, { key: 'STARTED' });\n      setStats(bucket, metric.unassigned, (bucket) => bucket.key !== 'STARTED' && bucket.key !== 'RELOCATING');\n      data.totals.primary += metric.primary;\n      data.totals.replica += metric.replica;\n      data.totals.unassigned.primary += metric.unassigned.primary;\n      data.totals.unassigned.replica += metric.unassigned.replica;\n      if (metric.unassigned.replica) metric.status = 'yellow';\n      if (metric.unassigned.primary) metric.status = 'red';\n      data[bucket.key] = metric;\n    };\n\n    // Mutate \"data\" with a nodes object having a field for every node\n    function processNodeShards(bucket) {\n      data.nodes[bucket.key] = {\n        shardCount: bucket.doc_count,\n        indexCount: bucket.index_count.value,\n        name: nodeAggVals.getLatestAggKey(bucket.node_names.buckets),\n        transport_address: nodeAggVals.getLatestAggKey(bucket.node_transport_address.buckets),\n        node_ids: bucket.node_ids.buckets.map(bucket => bucket.key),\n        attributes: {\n          data: nodeAggVals.getNodeAttribute(bucket.node_data_attributes.buckets),\n          master: nodeAggVals.getNodeAttribute(bucket.node_master_attributes.buckets)\n        }\n      };\n      data.nodes[bucket.key].resolver = data.nodes[bucket.key][nodeResolver];\n    }\n\n    if (resp && resp.hits && resp.hits.total !== 0) {\n      resp.aggregations.indices.buckets.forEach(processIndexShards);\n      resp.aggregations.nodes.buckets.forEach(processNodeShards);\n    }\n\n    _.forEach(data.nodes, node => {\n      node.type = calculateNodeType(node, lastState.cluster_state);\n    });\n\n    return data;\n\n  });\n};\n"
      ]
    },
    "mtime": 1468947861000
  },
  "{\"filename\":\"/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/calculate_node_type.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "/*\n * Determine node type using following rules:\n *  - data only node: --node.master=false\n *  - master only node: --node.data=false\n *  - client only node: --node.data=false --node.master=false\n *  https://www.elastic.co/guide/en/elasticsearch/reference/2.x/modules-node.html\n */\n'use strict';\n\nvar _require = require('lodash');\n\nvar includes = _require.includes;\nvar isUndefined = _require.isUndefined;\n\nmodule.exports = function (node, state) {\n  var attrs = node.attributes || {};\n\n  function mightBe(attr) {\n    return attr === 'true' || isUndefined(attr);\n  }\n\n  function isNot(attr) {\n    return attr === 'false';\n  }\n\n  // NOTE: calculating if node is master node is the only thing node ID should be used for\n  if (includes(node.node_ids, state.master_node)) return 'master';\n\n  if (isNot(attrs.data) && isNot(attrs.master)) return 'client';\n  if (mightBe(attrs.master) && isNot(attrs.data)) return 'master_only';\n  if (mightBe(attrs.data) && isNot(attrs.master)) return 'data';\n  return 'node';\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9UaGVvL0Rlc2t0b3AvTmVidWxhVGVtcC9OZWJ1bGEvZWxhc3RpY3NlYXJjaC9pbnN0YWxsZWRQbHVnaW5zL21hcnZlbC9zZXJ2ZXIvbGliL2NhbGN1bGF0ZV9ub2RlX3R5cGUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O2VBT2tDLE9BQU8sQ0FBQyxRQUFRLENBQUM7O0lBQTNDLFFBQVEsWUFBUixRQUFRO0lBQUUsV0FBVyxZQUFYLFdBQVc7O0FBRTdCLE1BQU0sQ0FBQyxPQUFPLEdBQUcsVUFBQyxJQUFJLEVBQUUsS0FBSyxFQUFLO0FBQ2hDLE1BQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxVQUFVLElBQUksRUFBRSxDQUFDOztBQUVwQyxXQUFTLE9BQU8sQ0FBQyxJQUFJLEVBQUU7QUFDckIsV0FBTyxJQUFJLEtBQUssTUFBTSxJQUFJLFdBQVcsQ0FBQyxJQUFJLENBQUMsQ0FBQztHQUM3Qzs7QUFFRCxXQUFTLEtBQUssQ0FBQyxJQUFJLEVBQUU7QUFDbkIsV0FBTyxJQUFJLEtBQUssT0FBTyxDQUFDO0dBQ3pCOzs7QUFHRCxNQUFJLFFBQVEsQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFLEtBQUssQ0FBQyxXQUFXLENBQUMsRUFBRSxPQUFPLFFBQVEsQ0FBQzs7QUFFaEUsTUFBSSxLQUFLLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLEtBQUssQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLEVBQUUsT0FBTyxRQUFRLENBQUM7QUFDOUQsTUFBSSxPQUFPLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxJQUFJLEtBQUssQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLEVBQUUsT0FBTyxhQUFhLENBQUM7QUFDckUsTUFBSSxPQUFPLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLEtBQUssQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLEVBQUUsT0FBTyxNQUFNLENBQUM7QUFDOUQsU0FBTyxNQUFNLENBQUM7Q0FDZixDQUFDIiwiZmlsZSI6Ii9Vc2Vycy9UaGVvL0Rlc2t0b3AvTmVidWxhVGVtcC9OZWJ1bGEvZWxhc3RpY3NlYXJjaC9pbnN0YWxsZWRQbHVnaW5zL21hcnZlbC9zZXJ2ZXIvbGliL2NhbGN1bGF0ZV9ub2RlX3R5cGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogRGV0ZXJtaW5lIG5vZGUgdHlwZSB1c2luZyBmb2xsb3dpbmcgcnVsZXM6XG4gKiAgLSBkYXRhIG9ubHkgbm9kZTogLS1ub2RlLm1hc3Rlcj1mYWxzZVxuICogIC0gbWFzdGVyIG9ubHkgbm9kZTogLS1ub2RlLmRhdGE9ZmFsc2VcbiAqICAtIGNsaWVudCBvbmx5IG5vZGU6IC0tbm9kZS5kYXRhPWZhbHNlIC0tbm9kZS5tYXN0ZXI9ZmFsc2VcbiAqICBodHRwczovL3d3dy5lbGFzdGljLmNvL2d1aWRlL2VuL2VsYXN0aWNzZWFyY2gvcmVmZXJlbmNlLzIueC9tb2R1bGVzLW5vZGUuaHRtbFxuICovXG5jb25zdCB7IGluY2x1ZGVzLCBpc1VuZGVmaW5lZCB9ID0gcmVxdWlyZSgnbG9kYXNoJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gKG5vZGUsIHN0YXRlKSA9PiB7XG4gIGNvbnN0IGF0dHJzID0gbm9kZS5hdHRyaWJ1dGVzIHx8IHt9O1xuXG4gIGZ1bmN0aW9uIG1pZ2h0QmUoYXR0cikge1xuICAgIHJldHVybiBhdHRyID09PSAndHJ1ZScgfHwgaXNVbmRlZmluZWQoYXR0cik7XG4gIH1cblxuICBmdW5jdGlvbiBpc05vdChhdHRyKSB7XG4gICAgcmV0dXJuIGF0dHIgPT09ICdmYWxzZSc7XG4gIH1cblxuICAvLyBOT1RFOiBjYWxjdWxhdGluZyBpZiBub2RlIGlzIG1hc3RlciBub2RlIGlzIHRoZSBvbmx5IHRoaW5nIG5vZGUgSUQgc2hvdWxkIGJlIHVzZWQgZm9yXG4gIGlmIChpbmNsdWRlcyhub2RlLm5vZGVfaWRzLCBzdGF0ZS5tYXN0ZXJfbm9kZSkpIHJldHVybiAnbWFzdGVyJztcblxuICBpZiAoaXNOb3QoYXR0cnMuZGF0YSkgJiYgaXNOb3QoYXR0cnMubWFzdGVyKSkgcmV0dXJuICdjbGllbnQnO1xuICBpZiAobWlnaHRCZShhdHRycy5tYXN0ZXIpICYmIGlzTm90KGF0dHJzLmRhdGEpKSByZXR1cm4gJ21hc3Rlcl9vbmx5JztcbiAgaWYgKG1pZ2h0QmUoYXR0cnMuZGF0YSkgJiYgaXNOb3QoYXR0cnMubWFzdGVyKSkgcmV0dXJuICdkYXRhJztcbiAgcmV0dXJuICdub2RlJztcbn07XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/calculate_node_type.js"
      ],
      "names": [],
      "mappings": ";;;;;;;;;eAOkC,OAAO,CAAC,QAAQ,CAAC;;IAA3C,QAAQ,YAAR,QAAQ;IAAE,WAAW,YAAX,WAAW;;AAE7B,MAAM,CAAC,OAAO,GAAG,UAAC,IAAI,EAAE,KAAK,EAAK;AAChC,MAAM,KAAK,GAAG,IAAI,CAAC,UAAU,IAAI,EAAE,CAAC;;AAEpC,WAAS,OAAO,CAAC,IAAI,EAAE;AACrB,WAAO,IAAI,KAAK,MAAM,IAAI,WAAW,CAAC,IAAI,CAAC,CAAC;GAC7C;;AAED,WAAS,KAAK,CAAC,IAAI,EAAE;AACnB,WAAO,IAAI,KAAK,OAAO,CAAC;GACzB;;;AAGD,MAAI,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,CAAC,WAAW,CAAC,EAAE,OAAO,QAAQ,CAAC;;AAEhE,MAAI,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,OAAO,QAAQ,CAAC;AAC9D,MAAI,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,OAAO,aAAa,CAAC;AACrE,MAAI,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,OAAO,MAAM,CAAC;AAC9D,SAAO,MAAM,CAAC;CACf,CAAC",
      "file": "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/calculate_node_type.js",
      "sourcesContent": [
        "/*\n * Determine node type using following rules:\n *  - data only node: --node.master=false\n *  - master only node: --node.data=false\n *  - client only node: --node.data=false --node.master=false\n *  https://www.elastic.co/guide/en/elasticsearch/reference/2.x/modules-node.html\n */\nconst { includes, isUndefined } = require('lodash');\n\nmodule.exports = (node, state) => {\n  const attrs = node.attributes || {};\n\n  function mightBe(attr) {\n    return attr === 'true' || isUndefined(attr);\n  }\n\n  function isNot(attr) {\n    return attr === 'false';\n  }\n\n  // NOTE: calculating if node is master node is the only thing node ID should be used for\n  if (includes(node.node_ids, state.master_node)) return 'master';\n\n  if (isNot(attrs.data) && isNot(attrs.master)) return 'client';\n  if (mightBe(attrs.master) && isNot(attrs.data)) return 'master_only';\n  if (mightBe(attrs.data) && isNot(attrs.master)) return 'data';\n  return 'node';\n};\n"
      ]
    },
    "mtime": 1468947861000
  },
  "{\"filename\":\"/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/node_agg_vals.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [
          {
            "source": "lodash",
            "imported": [
              "last",
              "sortBy",
              "get"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "last",
                "local": "last"
              },
              {
                "kind": "named",
                "imported": "sortBy",
                "local": "sortBy"
              },
              {
                "kind": "named",
                "imported": "get",
                "local": "get"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "getLatestAggKey",
            "getNodeAttribute"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "getLatestAggKey",
              "exported": "getLatestAggKey"
            },
            {
              "kind": "local",
              "local": "getNodeAttribute",
              "exported": "getNodeAttribute"
            }
          ]
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "/*\n * Utils for working with getting values out of nodes aggregations (different\n * information about nodes because of data changing after node restart)\n */\n\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.getLatestAggKey = getLatestAggKey;\nexports.getNodeAttribute = getNodeAttribute;\n\nvar _lodash = require('lodash');\n\n// Get the key from the aggregation with the latest timestamp\n\nfunction getLatestAggKey(buckets) {\n  return (0, _lodash.last)((0, _lodash.sortBy)(buckets, function (b) {\n    return (0, _lodash.get)(b, 'max_timestamp.value');\n  })).key;\n}\n\n/* Get the last attributes from the aggregation\n * Or undefined, if no attributes were set\n * NOTE: this is lazy because attributes are not sorted. We expect the\n * attributes to not change across node restarts\n */\n\nfunction getNodeAttribute(buckets) {\n  // nothing in the bucket, set to undefined\n  if (buckets.length === 0) return;\n  // boolean-ish string\n  return (0, _lodash.last)(buckets).key_as_string;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9UaGVvL0Rlc2t0b3AvTmVidWxhVGVtcC9OZWJ1bGEvZWxhc3RpY3NlYXJjaC9pbnN0YWxsZWRQbHVnaW5zL21hcnZlbC9zZXJ2ZXIvbGliL25vZGVfYWdnX3ZhbHMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztzQkFLa0MsUUFBUTs7OztBQUduQyxTQUFTLGVBQWUsQ0FBQyxPQUFPLEVBQUU7QUFDdkMsU0FBTyxrQkFBSyxvQkFBTyxPQUFPLEVBQUcsVUFBQSxDQUFDO1dBQUksaUJBQUksQ0FBQyxFQUFFLHFCQUFxQixDQUFDO0dBQUEsQ0FBRSxDQUFDLENBQUMsR0FBRyxDQUFDO0NBQ3hFOzs7Ozs7OztBQU9NLFNBQVMsZ0JBQWdCLENBQUMsT0FBTyxFQUFFOztBQUV4QyxNQUFJLE9BQU8sQ0FBQyxNQUFNLEtBQUssQ0FBQyxFQUFFLE9BQU87O0FBRWpDLFNBQU8sa0JBQUssT0FBTyxDQUFDLENBQUMsYUFBYSxDQUFDO0NBQ3BDIiwiZmlsZSI6Ii9Vc2Vycy9UaGVvL0Rlc2t0b3AvTmVidWxhVGVtcC9OZWJ1bGEvZWxhc3RpY3NlYXJjaC9pbnN0YWxsZWRQbHVnaW5zL21hcnZlbC9zZXJ2ZXIvbGliL25vZGVfYWdnX3ZhbHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogVXRpbHMgZm9yIHdvcmtpbmcgd2l0aCBnZXR0aW5nIHZhbHVlcyBvdXQgb2Ygbm9kZXMgYWdncmVnYXRpb25zIChkaWZmZXJlbnRcbiAqIGluZm9ybWF0aW9uIGFib3V0IG5vZGVzIGJlY2F1c2Ugb2YgZGF0YSBjaGFuZ2luZyBhZnRlciBub2RlIHJlc3RhcnQpXG4gKi9cblxuaW1wb3J0IHsgbGFzdCwgc29ydEJ5LCBnZXQgfSBmcm9tICdsb2Rhc2gnO1xuXG4vLyBHZXQgdGhlIGtleSBmcm9tIHRoZSBhZ2dyZWdhdGlvbiB3aXRoIHRoZSBsYXRlc3QgdGltZXN0YW1wXG5leHBvcnQgZnVuY3Rpb24gZ2V0TGF0ZXN0QWdnS2V5KGJ1Y2tldHMpIHtcbiAgcmV0dXJuIGxhc3Qoc29ydEJ5KGJ1Y2tldHMsIChiID0+IGdldChiLCAnbWF4X3RpbWVzdGFtcC52YWx1ZScpKSkpLmtleTtcbn1cblxuLyogR2V0IHRoZSBsYXN0IGF0dHJpYnV0ZXMgZnJvbSB0aGUgYWdncmVnYXRpb25cbiAqIE9yIHVuZGVmaW5lZCwgaWYgbm8gYXR0cmlidXRlcyB3ZXJlIHNldFxuICogTk9URTogdGhpcyBpcyBsYXp5IGJlY2F1c2UgYXR0cmlidXRlcyBhcmUgbm90IHNvcnRlZC4gV2UgZXhwZWN0IHRoZVxuICogYXR0cmlidXRlcyB0byBub3QgY2hhbmdlIGFjcm9zcyBub2RlIHJlc3RhcnRzXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXROb2RlQXR0cmlidXRlKGJ1Y2tldHMpIHtcbiAgLy8gbm90aGluZyBpbiB0aGUgYnVja2V0LCBzZXQgdG8gdW5kZWZpbmVkXG4gIGlmIChidWNrZXRzLmxlbmd0aCA9PT0gMCkgcmV0dXJuO1xuICAvLyBib29sZWFuLWlzaCBzdHJpbmdcbiAgcmV0dXJuIGxhc3QoYnVja2V0cykua2V5X2FzX3N0cmluZztcbn1cbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/node_agg_vals.js"
      ],
      "names": [],
      "mappings": ";;;;;;;;;;;;;sBAKkC,QAAQ;;;;AAGnC,SAAS,eAAe,CAAC,OAAO,EAAE;AACvC,SAAO,kBAAK,oBAAO,OAAO,EAAG,UAAA,CAAC;WAAI,iBAAI,CAAC,EAAE,qBAAqB,CAAC;GAAA,CAAE,CAAC,CAAC,GAAG,CAAC;CACxE;;;;;;;;AAOM,SAAS,gBAAgB,CAAC,OAAO,EAAE;;AAExC,MAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE,OAAO;;AAEjC,SAAO,kBAAK,OAAO,CAAC,CAAC,aAAa,CAAC;CACpC",
      "file": "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/node_agg_vals.js",
      "sourcesContent": [
        "/*\n * Utils for working with getting values out of nodes aggregations (different\n * information about nodes because of data changing after node restart)\n */\n\nimport { last, sortBy, get } from 'lodash';\n\n// Get the key from the aggregation with the latest timestamp\nexport function getLatestAggKey(buckets) {\n  return last(sortBy(buckets, (b => get(b, 'max_timestamp.value')))).key;\n}\n\n/* Get the last attributes from the aggregation\n * Or undefined, if no attributes were set\n * NOTE: this is lazy because attributes are not sorted. We expect the\n * attributes to not change across node restarts\n */\nexport function getNodeAttribute(buckets) {\n  // nothing in the bucket, set to undefined\n  if (buckets.length === 0) return;\n  // boolean-ish string\n  return last(buckets).key_as_string;\n}\n"
      ]
    },
    "mtime": 1468947861000
  },
  "{\"filename\":\"/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/get_last_recovery.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "'use strict';\n\nvar _ = require('lodash');\nvar createQuery = require('./create_query.js');\nmodule.exports = function (req, indices) {\n  var callWithRequest = req.server.plugins.elasticsearch.callWithRequest;\n  var start = req.payload.timeRange.min;\n  var end = req.payload.timeRange.max;\n  var clusterUuid = req.params.clusterUuid;\n\n  var params = {\n    index: indices,\n    ignore: [404],\n    type: 'index_recovery',\n    body: {\n      size: 1,\n      sort: { timestamp: { order: 'desc' } },\n      query: createQuery({\n        end: end,\n        clusterUuid: clusterUuid\n      })\n    }\n  };\n\n  return callWithRequest(req, 'search', params).then(function (resp) {\n    var total = _.get(resp, 'hits.total', 0);\n    if (!total) return [];\n    var data = _.get(resp.hits.hits[0], '_source.index_recovery.shards') || [];\n    data.sort(function (a, b) {\n      return b.start_time_in_mllis - a.start_time_in_mllis;\n    });\n    return data;\n  });\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9UaGVvL0Rlc2t0b3AvTmVidWxhVGVtcC9OZWJ1bGEvZWxhc3RpY3NlYXJjaC9pbnN0YWxsZWRQbHVnaW5zL21hcnZlbC9zZXJ2ZXIvbGliL2dldF9sYXN0X3JlY292ZXJ5LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBTSxDQUFDLEdBQUcsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0FBQzVCLElBQU0sV0FBVyxHQUFHLE9BQU8sQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDO0FBQ2pELE1BQU0sQ0FBQyxPQUFPLEdBQUcsVUFBQyxHQUFHLEVBQUUsT0FBTyxFQUFLO0FBQ2pDLE1BQU0sZUFBZSxHQUFHLEdBQUcsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLGFBQWEsQ0FBQyxlQUFlLENBQUM7QUFDekUsTUFBTSxLQUFLLEdBQUcsR0FBRyxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDO0FBQ3hDLE1BQU0sR0FBRyxHQUFHLEdBQUcsQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQztBQUN0QyxNQUFNLFdBQVcsR0FBRyxHQUFHLENBQUMsTUFBTSxDQUFDLFdBQVcsQ0FBQzs7QUFFM0MsTUFBTSxNQUFNLEdBQUc7QUFDYixTQUFLLEVBQUUsT0FBTztBQUNkLFVBQU0sRUFBRSxDQUFDLEdBQUcsQ0FBQztBQUNiLFFBQUksRUFBRSxnQkFBZ0I7QUFDdEIsUUFBSSxFQUFFO0FBQ0osVUFBSSxFQUFFLENBQUM7QUFDUCxVQUFJLEVBQUUsRUFBRSxTQUFTLEVBQUUsRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLEVBQUU7QUFDdEMsV0FBSyxFQUFFLFdBQVcsQ0FBQztBQUNqQixXQUFHLEVBQUUsR0FBRztBQUNSLG1CQUFXLEVBQUUsV0FBVztPQUN6QixDQUFDO0tBQ0g7R0FDRixDQUFDOztBQUVGLFNBQU8sZUFBZSxDQUFDLEdBQUcsRUFBRSxRQUFRLEVBQUUsTUFBTSxDQUFDLENBQzVDLElBQUksQ0FBQyxVQUFDLElBQUksRUFBSztBQUNkLFFBQUksS0FBSyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsSUFBSSxFQUFFLFlBQVksRUFBRSxDQUFDLENBQUMsQ0FBQztBQUN6QyxRQUFJLENBQUMsS0FBSyxFQUFFLE9BQU8sRUFBRSxDQUFDO0FBQ3RCLFFBQU0sSUFBSSxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUUsK0JBQStCLENBQUMsSUFBSSxFQUFFLENBQUM7QUFDN0UsUUFBSSxDQUFDLElBQUksQ0FBQyxVQUFDLENBQUMsRUFBRSxDQUFDO2FBQUssQ0FBQyxDQUFDLG1CQUFtQixHQUFHLENBQUMsQ0FBQyxtQkFBbUI7S0FBQSxDQUFDLENBQUM7QUFDbkUsV0FBTyxJQUFJLENBQUM7R0FDYixDQUFDLENBQUM7Q0FFSixDQUFDIiwiZmlsZSI6Ii9Vc2Vycy9UaGVvL0Rlc2t0b3AvTmVidWxhVGVtcC9OZWJ1bGEvZWxhc3RpY3NlYXJjaC9pbnN0YWxsZWRQbHVnaW5zL21hcnZlbC9zZXJ2ZXIvbGliL2dldF9sYXN0X3JlY292ZXJ5LmpzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgXyA9IHJlcXVpcmUoJ2xvZGFzaCcpO1xuY29uc3QgY3JlYXRlUXVlcnkgPSByZXF1aXJlKCcuL2NyZWF0ZV9xdWVyeS5qcycpO1xubW9kdWxlLmV4cG9ydHMgPSAocmVxLCBpbmRpY2VzKSA9PiB7XG4gIGNvbnN0IGNhbGxXaXRoUmVxdWVzdCA9IHJlcS5zZXJ2ZXIucGx1Z2lucy5lbGFzdGljc2VhcmNoLmNhbGxXaXRoUmVxdWVzdDtcbiAgY29uc3Qgc3RhcnQgPSByZXEucGF5bG9hZC50aW1lUmFuZ2UubWluO1xuICBjb25zdCBlbmQgPSByZXEucGF5bG9hZC50aW1lUmFuZ2UubWF4O1xuICBjb25zdCBjbHVzdGVyVXVpZCA9IHJlcS5wYXJhbXMuY2x1c3RlclV1aWQ7XG5cbiAgY29uc3QgcGFyYW1zID0ge1xuICAgIGluZGV4OiBpbmRpY2VzLFxuICAgIGlnbm9yZTogWzQwNF0sXG4gICAgdHlwZTogJ2luZGV4X3JlY292ZXJ5JyxcbiAgICBib2R5OiB7XG4gICAgICBzaXplOiAxLFxuICAgICAgc29ydDogeyB0aW1lc3RhbXA6IHsgb3JkZXI6ICdkZXNjJyB9IH0sXG4gICAgICBxdWVyeTogY3JlYXRlUXVlcnkoe1xuICAgICAgICBlbmQ6IGVuZCxcbiAgICAgICAgY2x1c3RlclV1aWQ6IGNsdXN0ZXJVdWlkXG4gICAgICB9KVxuICAgIH1cbiAgfTtcblxuICByZXR1cm4gY2FsbFdpdGhSZXF1ZXN0KHJlcSwgJ3NlYXJjaCcsIHBhcmFtcylcbiAgLnRoZW4oKHJlc3ApID0+IHtcbiAgICBsZXQgdG90YWwgPSBfLmdldChyZXNwLCAnaGl0cy50b3RhbCcsIDApO1xuICAgIGlmICghdG90YWwpIHJldHVybiBbXTtcbiAgICBjb25zdCBkYXRhID0gXy5nZXQocmVzcC5oaXRzLmhpdHNbMF0sICdfc291cmNlLmluZGV4X3JlY292ZXJ5LnNoYXJkcycpIHx8IFtdO1xuICAgIGRhdGEuc29ydCgoYSwgYikgPT4gYi5zdGFydF90aW1lX2luX21sbGlzIC0gYS5zdGFydF90aW1lX2luX21sbGlzKTtcbiAgICByZXR1cm4gZGF0YTtcbiAgfSk7XG5cbn07XG5cbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/get_last_recovery.js"
      ],
      "names": [],
      "mappings": ";;AAAA,IAAM,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC5B,IAAM,WAAW,GAAG,OAAO,CAAC,mBAAmB,CAAC,CAAC;AACjD,MAAM,CAAC,OAAO,GAAG,UAAC,GAAG,EAAE,OAAO,EAAK;AACjC,MAAM,eAAe,GAAG,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,eAAe,CAAC;AACzE,MAAM,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC;AACxC,MAAM,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC;AACtC,MAAM,WAAW,GAAG,GAAG,CAAC,MAAM,CAAC,WAAW,CAAC;;AAE3C,MAAM,MAAM,GAAG;AACb,SAAK,EAAE,OAAO;AACd,UAAM,EAAE,CAAC,GAAG,CAAC;AACb,QAAI,EAAE,gBAAgB;AACtB,QAAI,EAAE;AACJ,UAAI,EAAE,CAAC;AACP,UAAI,EAAE,EAAE,SAAS,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,EAAE;AACtC,WAAK,EAAE,WAAW,CAAC;AACjB,WAAG,EAAE,GAAG;AACR,mBAAW,EAAE,WAAW;OACzB,CAAC;KACH;GACF,CAAC;;AAEF,SAAO,eAAe,CAAC,GAAG,EAAE,QAAQ,EAAE,MAAM,CAAC,CAC5C,IAAI,CAAC,UAAC,IAAI,EAAK;AACd,QAAI,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC,CAAC;AACzC,QAAI,CAAC,KAAK,EAAE,OAAO,EAAE,CAAC;AACtB,QAAM,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,+BAA+B,CAAC,IAAI,EAAE,CAAC;AAC7E,QAAI,CAAC,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC;aAAK,CAAC,CAAC,mBAAmB,GAAG,CAAC,CAAC,mBAAmB;KAAA,CAAC,CAAC;AACnE,WAAO,IAAI,CAAC;GACb,CAAC,CAAC;CAEJ,CAAC",
      "file": "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/get_last_recovery.js",
      "sourcesContent": [
        "const _ = require('lodash');\nconst createQuery = require('./create_query.js');\nmodule.exports = (req, indices) => {\n  const callWithRequest = req.server.plugins.elasticsearch.callWithRequest;\n  const start = req.payload.timeRange.min;\n  const end = req.payload.timeRange.max;\n  const clusterUuid = req.params.clusterUuid;\n\n  const params = {\n    index: indices,\n    ignore: [404],\n    type: 'index_recovery',\n    body: {\n      size: 1,\n      sort: { timestamp: { order: 'desc' } },\n      query: createQuery({\n        end: end,\n        clusterUuid: clusterUuid\n      })\n    }\n  };\n\n  return callWithRequest(req, 'search', params)\n  .then((resp) => {\n    let total = _.get(resp, 'hits.total', 0);\n    if (!total) return [];\n    const data = _.get(resp.hits.hits[0], '_source.index_recovery.shards') || [];\n    data.sort((a, b) => b.start_time_in_mllis - a.start_time_in_mllis);\n    return data;\n  });\n\n};\n\n"
      ]
    },
    "mtime": 1468947861000
  },
  "{\"filename\":\"/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/calculate_cluster_status.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "\"use strict\";\n\nmodule.exports = function calculateClusterStatus(body) {\n  body.clusterStatus.unassignedShards = body.shardStats.totals.unassigned.replica + body.shardStats.totals.unassigned.primary;\n  body.clusterStatus.totalShards = body.clusterStatus.totalShards + body.clusterStatus.unassignedShards;\n  return body;\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9UaGVvL0Rlc2t0b3AvTmVidWxhVGVtcC9OZWJ1bGEvZWxhc3RpY3NlYXJjaC9pbnN0YWxsZWRQbHVnaW5zL21hcnZlbC9zZXJ2ZXIvbGliL2NhbGN1bGF0ZV9jbHVzdGVyX3N0YXR1cy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLE1BQU0sQ0FBQyxPQUFPLEdBQUcsU0FBUyxzQkFBc0IsQ0FBQyxJQUFJLEVBQUU7QUFDckQsTUFBSSxDQUFDLGFBQWEsQ0FBQyxnQkFBZ0IsR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUM7QUFDNUgsTUFBSSxDQUFDLGFBQWEsQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQyxnQkFBZ0IsQ0FBQztBQUN0RyxTQUFPLElBQUksQ0FBQztDQUNiLENBQUMiLCJmaWxlIjoiL1VzZXJzL1RoZW8vRGVza3RvcC9OZWJ1bGFUZW1wL05lYnVsYS9lbGFzdGljc2VhcmNoL2luc3RhbGxlZFBsdWdpbnMvbWFydmVsL3NlcnZlci9saWIvY2FsY3VsYXRlX2NsdXN0ZXJfc3RhdHVzLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBjYWxjdWxhdGVDbHVzdGVyU3RhdHVzKGJvZHkpIHtcbiAgYm9keS5jbHVzdGVyU3RhdHVzLnVuYXNzaWduZWRTaGFyZHMgPSBib2R5LnNoYXJkU3RhdHMudG90YWxzLnVuYXNzaWduZWQucmVwbGljYSArIGJvZHkuc2hhcmRTdGF0cy50b3RhbHMudW5hc3NpZ25lZC5wcmltYXJ5O1xuICBib2R5LmNsdXN0ZXJTdGF0dXMudG90YWxTaGFyZHMgPSBib2R5LmNsdXN0ZXJTdGF0dXMudG90YWxTaGFyZHMgKyBib2R5LmNsdXN0ZXJTdGF0dXMudW5hc3NpZ25lZFNoYXJkcztcbiAgcmV0dXJuIGJvZHk7XG59O1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/calculate_cluster_status.js"
      ],
      "names": [],
      "mappings": ";;AAAA,MAAM,CAAC,OAAO,GAAG,SAAS,sBAAsB,CAAC,IAAI,EAAE;AACrD,MAAI,CAAC,aAAa,CAAC,gBAAgB,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC;AAC5H,MAAI,CAAC,aAAa,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC;AACtG,SAAO,IAAI,CAAC;CACb,CAAC",
      "file": "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/calculate_cluster_status.js",
      "sourcesContent": [
        "module.exports = function calculateClusterStatus(body) {\n  body.clusterStatus.unassignedShards = body.shardStats.totals.unassigned.replica + body.shardStats.totals.unassigned.primary;\n  body.clusterStatus.totalShards = body.clusterStatus.totalShards + body.clusterStatus.unassignedShards;\n  return body;\n};\n"
      ]
    },
    "mtime": 1468947861000
  },
  "{\"filename\":\"/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/handle_error.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [
          {
            "source": "boom",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Boom"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "handleError"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "handleError",
              "exported": "default"
            }
          ]
        }
      },
      "usedHelpers": [
        "interop-require-default"
      ]
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports['default'] = handleError;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _boom = require('boom');\n\nvar _boom2 = _interopRequireDefault(_boom);\n\n/**\n * TODO this behavior should be centralized and shared with all plugins\n */\n\nfunction handleError(err, req) {\n  req.log(['marvel', 'error'], err); // error stack will also be logged\n  if (err.isBoom) return err;\n  var msg = err.msg || err.message;\n  if (err.statusCode === 403) return _boom2['default'].forbidden(msg);\n  if (msg === 'Not Found') return _boom2['default'].notFound();\n  return _boom2['default'].badRequest(msg);\n}\n\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9UaGVvL0Rlc2t0b3AvTmVidWxhVGVtcC9OZWJ1bGEvZWxhc3RpY3NlYXJjaC9pbnN0YWxsZWRQbHVnaW5zL21hcnZlbC9zZXJ2ZXIvbGliL2hhbmRsZV9lcnJvci5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztxQkFLd0IsV0FBVzs7OztvQkFMbEIsTUFBTTs7Ozs7Ozs7QUFLUixTQUFTLFdBQVcsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFO0FBQzVDLEtBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxRQUFRLEVBQUUsT0FBTyxDQUFDLEVBQUUsR0FBRyxDQUFDLENBQUM7QUFDbEMsTUFBSSxHQUFHLENBQUMsTUFBTSxFQUFFLE9BQU8sR0FBRyxDQUFDO0FBQzNCLE1BQU0sR0FBRyxHQUFHLEdBQUcsQ0FBQyxHQUFHLElBQUksR0FBRyxDQUFDLE9BQU8sQ0FBQztBQUNuQyxNQUFJLEdBQUcsQ0FBQyxVQUFVLEtBQUssR0FBRyxFQUFFLE9BQU8sa0JBQUssU0FBUyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0FBQ3ZELE1BQUksR0FBRyxLQUFLLFdBQVcsRUFBRSxPQUFPLGtCQUFLLFFBQVEsRUFBRSxDQUFDO0FBQ2hELFNBQU8sa0JBQUssVUFBVSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0NBQzdCIiwiZmlsZSI6Ii9Vc2Vycy9UaGVvL0Rlc2t0b3AvTmVidWxhVGVtcC9OZWJ1bGEvZWxhc3RpY3NlYXJjaC9pbnN0YWxsZWRQbHVnaW5zL21hcnZlbC9zZXJ2ZXIvbGliL2hhbmRsZV9lcnJvci5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBCb29tIGZyb20gJ2Jvb20nO1xuXG4vKipcbiAqIFRPRE8gdGhpcyBiZWhhdmlvciBzaG91bGQgYmUgY2VudHJhbGl6ZWQgYW5kIHNoYXJlZCB3aXRoIGFsbCBwbHVnaW5zXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGhhbmRsZUVycm9yKGVyciwgcmVxKSB7XG4gIHJlcS5sb2coWydtYXJ2ZWwnLCAnZXJyb3InXSwgZXJyKTsgLy8gZXJyb3Igc3RhY2sgd2lsbCBhbHNvIGJlIGxvZ2dlZFxuICBpZiAoZXJyLmlzQm9vbSkgcmV0dXJuIGVycjtcbiAgY29uc3QgbXNnID0gZXJyLm1zZyB8fCBlcnIubWVzc2FnZTtcbiAgaWYgKGVyci5zdGF0dXNDb2RlID09PSA0MDMpIHJldHVybiBCb29tLmZvcmJpZGRlbihtc2cpO1xuICBpZiAobXNnID09PSAnTm90IEZvdW5kJykgcmV0dXJuIEJvb20ubm90Rm91bmQoKTtcbiAgcmV0dXJuIEJvb20uYmFkUmVxdWVzdChtc2cpO1xufVxuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/handle_error.js"
      ],
      "names": [],
      "mappings": ";;;;;qBAKwB,WAAW;;;;oBALlB,MAAM;;;;;;;;AAKR,SAAS,WAAW,CAAC,GAAG,EAAE,GAAG,EAAE;AAC5C,KAAG,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,OAAO,CAAC,EAAE,GAAG,CAAC,CAAC;AAClC,MAAI,GAAG,CAAC,MAAM,EAAE,OAAO,GAAG,CAAC;AAC3B,MAAM,GAAG,GAAG,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,OAAO,CAAC;AACnC,MAAI,GAAG,CAAC,UAAU,KAAK,GAAG,EAAE,OAAO,kBAAK,SAAS,CAAC,GAAG,CAAC,CAAC;AACvD,MAAI,GAAG,KAAK,WAAW,EAAE,OAAO,kBAAK,QAAQ,EAAE,CAAC;AAChD,SAAO,kBAAK,UAAU,CAAC,GAAG,CAAC,CAAC;CAC7B",
      "file": "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/handle_error.js",
      "sourcesContent": [
        "import Boom from 'boom';\n\n/**\n * TODO this behavior should be centralized and shared with all plugins\n */\nexport default function handleError(err, req) {\n  req.log(['marvel', 'error'], err); // error stack will also be logged\n  if (err.isBoom) return err;\n  const msg = err.msg || err.message;\n  if (err.statusCode === 403) return Boom.forbidden(msg);\n  if (msg === 'Not Found') return Boom.notFound();\n  return Boom.badRequest(msg);\n}\n"
      ]
    },
    "mtime": 1468947861000
  },
  "{\"filename\":\"/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/routes/api/v1/indices.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "'use strict';\n\nvar _ = require('lodash');\nvar Promise = require('bluebird');\nvar Joi = require('joi');\nvar root = require('requirefrom')('');\nvar calculateIndices = root('server/lib/calculate_indices');\nvar getLastState = root('server/lib/get_last_state');\nvar getClusterStatus = root('server/lib/get_cluster_status');\nvar getIndexSummary = root('server/lib/get_index_summary');\nvar getMetrics = root('server/lib/get_metrics');\nvar getListing = root('server/lib/get_listing_indices');\nvar getShardStats = root('server/lib/get_shard_stats');\nvar getShardAllocation = root('server/lib/get_shard_allocation');\nvar getUnassignedShards = root('server/lib/get_unassigned_shards');\nvar calculateClusterStatus = root('server/lib/calculate_cluster_status');\nvar handleError = root('server/lib/handle_error');\n\nmodule.exports = function (server) {\n\n  server.route({\n    method: 'POST',\n    path: '/api/marvel/v1/clusters/{clusterUuid}/indices',\n    config: {\n      validate: {\n        params: Joi.object({\n          clusterUuid: Joi.string().required()\n        }),\n        payload: Joi.object({\n          timeRange: Joi.object({\n            min: Joi.date().required(),\n            max: Joi.date().required()\n          }).required(),\n          metrics: Joi.array().required(),\n          listingMetrics: Joi.array().required()\n        })\n      }\n    },\n    handler: function handler(req, reply) {\n      var start = req.payload.timeRange.min;\n      var end = req.payload.timeRange.max;\n      calculateIndices(req, start, end).then(function (indices) {\n        return getLastState(req, indices).then(function (lastState) {\n          return Promise.props({\n            clusterStatus: getClusterStatus(req, indices, lastState),\n            metrics: getMetrics(req, indices),\n            rows: getListing(req, indices),\n            shardStats: getShardStats(req, indices, lastState)\n          });\n        });\n      })\n      // Add the index status to each index from the shardStats\n      .then(function (body) {\n        body.rows.forEach(function (row) {\n          if (body.shardStats[row.name]) {\n            row.status = body.shardStats[row.name].status;\n            // column for a metric that is calculated in code vs. calculated in a query\n            // it's not given in req.payload.listingMetrics\n            _.merge(row, getUnassignedShards(body.shardStats[row.name]));\n          } else {\n            row.status = 'Unknown';\n            _.set(row, 'metrics.index_document_count.inapplicable', true);\n            _.set(row, 'metrics.index_size.inapplicable', true);\n            _.set(row, 'metrics.index_search_request_rate.inapplicable', true);\n            _.set(row, 'metrics.index_request_rate.inapplicable', true);\n            _.set(row, 'metrics.index_unassigned_shards.inapplicable', true);\n          }\n        });\n        return body;\n      })\n      // Send the response\n      .then(calculateClusterStatus).then(reply)['catch'](function (err) {\n        return reply(handleError(err, req));\n      });\n    }\n  });\n\n  server.route({\n    method: 'POST',\n    path: '/api/marvel/v1/clusters/{clusterUuid}/indices/{id}',\n    config: {\n      validate: {\n        params: Joi.object({\n          clusterUuid: Joi.string().required(),\n          id: Joi.string().required()\n        }),\n        payload: Joi.object({\n          timeRange: Joi.object({\n            min: Joi.date().required(),\n            max: Joi.date().required()\n          }).required(),\n          metrics: Joi.array().required()\n        })\n      }\n    },\n    handler: function handler(req, reply) {\n      var id = req.params.id;\n      var start = req.payload.timeRange.min;\n      var end = req.payload.timeRange.max;\n      calculateIndices(req, start, end).then(function (indices) {\n        return getLastState(req, indices).then(function (lastState) {\n          return Promise.props({\n            clusterStatus: getClusterStatus(req, indices, lastState),\n            indexSummary: getIndexSummary(req, indices),\n            metrics: getMetrics(req, indices, [{ term: { 'index_stats.index': id } }]),\n            shards: getShardAllocation(req, indices, [{ term: { 'shard.index': id } }], lastState),\n            shardStats: getShardStats(req, indices, lastState),\n            lastState: lastState\n          });\n        });\n      }).then(calculateClusterStatus).then(function (body) {\n        var shardStats = body.shardStats[id];\n        // check if we need a legacy workaround for Marvel 2.0 node data\n        if (shardStats) {\n          body.indexSummary.unassignedShards = shardStats.unassigned.primary + shardStats.unassigned.replica;\n          body.indexSummary.totalShards = shardStats.primary + shardStats.replica + body.indexSummary.unassignedShards;\n          body.indexSummary.status = shardStats.status;\n          body.indexSummary.shardStats = shardStats;\n        } else {\n          body.indexSummary.status = 'Not Available';\n          body.indexSummary.totalShards = 'N/A';\n          body.indexSummary.unassignedShards = 'N/A';\n          body.indexSummary.documents = 'N/A';\n          body.indexSummary.dataSize = 'N/A';\n        }\n        var shardNodes = _.get(body, 'shardStats.nodes');\n        body.nodes = {};\n        _.forEach(shardNodes, function (shardNode, resolver) {\n          body.nodes[resolver] = shardNode;\n        });\n        delete body.lastState;\n        return body;\n      }).then(reply)['catch'](function (err) {\n        return reply(handleError(err, req));\n      });\n    }\n  });\n};\n//# sourceMappingURL=data:application/json;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/routes/api/v1/indices.js"
      ],
      "names": [],
      "mappings": "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",
      "file": "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/routes/api/v1/indices.js",
      "sourcesContent": [
        "const _ = require('lodash');\nconst Promise = require('bluebird');\nconst Joi = require('joi');\nconst root = require('requirefrom')('');\nconst calculateIndices = root('server/lib/calculate_indices');\nconst getLastState = root('server/lib/get_last_state');\nconst getClusterStatus = root('server/lib/get_cluster_status');\nconst getIndexSummary = root('server/lib/get_index_summary');\nconst getMetrics = root('server/lib/get_metrics');\nconst getListing = root('server/lib/get_listing_indices');\nconst getShardStats = root('server/lib/get_shard_stats');\nconst getShardAllocation = root('server/lib/get_shard_allocation');\nconst getUnassignedShards = root('server/lib/get_unassigned_shards');\nconst calculateClusterStatus = root('server/lib/calculate_cluster_status');\nconst handleError = root('server/lib/handle_error');\n\nmodule.exports = (server) => {\n\n  server.route({\n    method: 'POST',\n    path: '/api/marvel/v1/clusters/{clusterUuid}/indices',\n    config: {\n      validate: {\n        params: Joi.object({\n          clusterUuid: Joi.string().required()\n        }),\n        payload: Joi.object({\n          timeRange: Joi.object({\n            min: Joi.date().required(),\n            max: Joi.date().required()\n          }).required(),\n          metrics: Joi.array().required(),\n          listingMetrics: Joi.array().required()\n        })\n      }\n    },\n    handler: (req, reply) => {\n      const start = req.payload.timeRange.min;\n      const end = req.payload.timeRange.max;\n      calculateIndices(req, start, end)\n      .then(indices => {\n        return getLastState(req, indices)\n        .then(lastState => {\n          return Promise.props({\n            clusterStatus: getClusterStatus(req, indices, lastState),\n            metrics: getMetrics(req, indices),\n            rows: getListing(req, indices),\n            shardStats: getShardStats(req, indices, lastState)\n          });\n        });\n      })\n      // Add the index status to each index from the shardStats\n      .then((body) => {\n        body.rows.forEach((row) => {\n          if (body.shardStats[row.name]) {\n            row.status = body.shardStats[row.name].status;\n            // column for a metric that is calculated in code vs. calculated in a query\n            // it's not given in req.payload.listingMetrics\n            _.merge(row, getUnassignedShards(body.shardStats[row.name]));\n          } else {\n            row.status = 'Unknown';\n            _.set(row, 'metrics.index_document_count.inapplicable', true);\n            _.set(row, 'metrics.index_size.inapplicable', true);\n            _.set(row, 'metrics.index_search_request_rate.inapplicable', true);\n            _.set(row, 'metrics.index_request_rate.inapplicable', true);\n            _.set(row, 'metrics.index_unassigned_shards.inapplicable', true);\n          }\n        });\n        return body;\n      })\n      // Send the response\n      .then(calculateClusterStatus)\n      .then(reply)\n      .catch(err => reply(handleError(err, req)));\n    }\n  });\n\n  server.route({\n    method: 'POST',\n    path: '/api/marvel/v1/clusters/{clusterUuid}/indices/{id}',\n    config: {\n      validate: {\n        params: Joi.object({\n          clusterUuid: Joi.string().required(),\n          id: Joi.string().required()\n        }),\n        payload: Joi.object({\n          timeRange: Joi.object({\n            min: Joi.date().required(),\n            max: Joi.date().required()\n          }).required(),\n          metrics: Joi.array().required()\n        })\n      }\n    },\n    handler: (req, reply) => {\n      const id = req.params.id;\n      const start = req.payload.timeRange.min;\n      const end = req.payload.timeRange.max;\n      calculateIndices(req, start, end)\n      .then(indices => {\n        return getLastState(req, indices)\n        .then(lastState => {\n          return Promise.props({\n            clusterStatus: getClusterStatus(req, indices, lastState),\n            indexSummary:  getIndexSummary(req, indices),\n            metrics: getMetrics(req, indices, [{ term: { 'index_stats.index': id } }]),\n            shards: getShardAllocation(req, indices, [{ term: { 'shard.index': id } }], lastState),\n            shardStats: getShardStats(req, indices, lastState),\n            lastState: lastState\n          });\n        });\n      })\n      .then(calculateClusterStatus)\n      .then(function (body) {\n        var shardStats = body.shardStats[id];\n        // check if we need a legacy workaround for Marvel 2.0 node data\n        if (shardStats) {\n          body.indexSummary.unassignedShards = shardStats.unassigned.primary + shardStats.unassigned.replica;\n          body.indexSummary.totalShards = shardStats.primary + shardStats.replica + body.indexSummary.unassignedShards;\n          body.indexSummary.status = shardStats.status;\n          body.indexSummary.shardStats = shardStats;\n        } else {\n          body.indexSummary.status = 'Not Available';\n          body.indexSummary.totalShards = 'N/A';\n          body.indexSummary.unassignedShards = 'N/A';\n          body.indexSummary.documents = 'N/A';\n          body.indexSummary.dataSize = 'N/A';\n        }\n        const shardNodes = _.get(body, 'shardStats.nodes');\n        body.nodes = {};\n        _.forEach(shardNodes, (shardNode, resolver) => {\n          body.nodes[resolver] = shardNode;\n        });\n        delete body.lastState;\n        return body;\n      })\n      .then(reply)\n      .catch(err => reply(handleError(err, req)));\n    }\n  });\n\n};\n"
      ]
    },
    "mtime": 1468947861000
  },
  "{\"filename\":\"/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/get_index_summary.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "'use strict';\n\nvar _ = require('lodash');\nvar createQuery = require('./create_query.js');\nmodule.exports = function (req, indices) {\n  // Alias callWithRequest so we don't have to use this long ugly string\n  var callWithRequest = req.server.plugins.elasticsearch.callWithRequest;\n\n  // Get the params from the POST body for the request\n  var start = req.payload.timeRange.min;\n  var end = req.payload.timeRange.max;\n  var clusterUuid = req.params.clusterUuid;\n\n  // Build up the Elasticsearch request\n  var params = {\n    index: indices,\n    ignore: [404],\n    type: 'index_stats',\n    body: {\n      size: 1,\n      sort: { timestamp: { order: 'desc' } },\n      query: createQuery({\n        end: end,\n        clusterUuid: clusterUuid,\n        filters: [{\n          term: { 'index_stats.index': req.params.id }\n        }]\n      })\n    }\n  };\n\n  return callWithRequest(req, 'search', params).then(function (resp) {\n    var indexSummary = { documents: 0, dataSize: 0 };\n    var totals = _.get(resp, 'hits.hits[0]._source.index_stats.total');\n    if (totals) {\n      indexSummary.documents = _.get(totals, 'docs.count');\n      indexSummary.dataSize = _.get(totals, 'store.size_in_bytes');\n    }\n\n    return indexSummary;\n  });\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9UaGVvL0Rlc2t0b3AvTmVidWxhVGVtcC9OZWJ1bGEvZWxhc3RpY3NlYXJjaC9pbnN0YWxsZWRQbHVnaW5zL21hcnZlbC9zZXJ2ZXIvbGliL2dldF9pbmRleF9zdW1tYXJ5LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBTSxDQUFDLEdBQUcsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0FBQzVCLElBQU0sV0FBVyxHQUFHLE9BQU8sQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDO0FBQ2pELE1BQU0sQ0FBQyxPQUFPLEdBQUcsVUFBQyxHQUFHLEVBQUUsT0FBTyxFQUFLOztBQUVqQyxNQUFNLGVBQWUsR0FBRyxHQUFHLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxhQUFhLENBQUMsZUFBZSxDQUFDOzs7QUFHekUsTUFBTSxLQUFLLEdBQUcsR0FBRyxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDO0FBQ3hDLE1BQU0sR0FBRyxHQUFHLEdBQUcsQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQztBQUN0QyxNQUFNLFdBQVcsR0FBRyxHQUFHLENBQUMsTUFBTSxDQUFDLFdBQVcsQ0FBQzs7O0FBRzNDLE1BQU0sTUFBTSxHQUFHO0FBQ2IsU0FBSyxFQUFFLE9BQU87QUFDZCxVQUFNLEVBQUUsQ0FBQyxHQUFHLENBQUM7QUFDYixRQUFJLEVBQUUsYUFBYTtBQUNuQixRQUFJLEVBQUU7QUFDSixVQUFJLEVBQUUsQ0FBQztBQUNQLFVBQUksRUFBRSxFQUFFLFNBQVMsRUFBRSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsRUFBRTtBQUN0QyxXQUFLLEVBQUUsV0FBVyxDQUFDO0FBQ2pCLFdBQUcsRUFBRSxHQUFHO0FBQ1IsbUJBQVcsRUFBRSxXQUFXO0FBQ3hCLGVBQU8sRUFBRSxDQUFDO0FBQ1IsY0FBSSxFQUFFLEVBQUUsbUJBQW1CLEVBQUUsR0FBRyxDQUFDLE1BQU0sQ0FBQyxFQUFFLEVBQUU7U0FDN0MsQ0FBQztPQUNILENBQUM7S0FDSDtHQUNGLENBQUM7O0FBRUYsU0FBTyxlQUFlLENBQUMsR0FBRyxFQUFFLFFBQVEsRUFBRSxNQUFNLENBQUMsQ0FDNUMsSUFBSSxDQUFDLFVBQUMsSUFBSSxFQUFLO0FBQ2QsUUFBTSxZQUFZLEdBQUcsRUFBRSxTQUFTLEVBQUUsQ0FBQyxFQUFFLFFBQVEsRUFBRSxDQUFDLEVBQUUsQ0FBQztBQUNuRCxRQUFNLE1BQU0sR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLElBQUksRUFBRSx3Q0FBd0MsQ0FBQyxDQUFDO0FBQ3JFLFFBQUksTUFBTSxFQUFFO0FBQ1Ysa0JBQVksQ0FBQyxTQUFTLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxNQUFNLEVBQUUsWUFBWSxDQUFDLENBQUM7QUFDckQsa0JBQVksQ0FBQyxRQUFRLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxNQUFNLEVBQUUscUJBQXFCLENBQUMsQ0FBQztLQUM5RDs7QUFFRCxXQUFPLFlBQVksQ0FBQztHQUNyQixDQUFDLENBQUM7Q0FDSixDQUFDIiwiZmlsZSI6Ii9Vc2Vycy9UaGVvL0Rlc2t0b3AvTmVidWxhVGVtcC9OZWJ1bGEvZWxhc3RpY3NlYXJjaC9pbnN0YWxsZWRQbHVnaW5zL21hcnZlbC9zZXJ2ZXIvbGliL2dldF9pbmRleF9zdW1tYXJ5LmpzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgXyA9IHJlcXVpcmUoJ2xvZGFzaCcpO1xuY29uc3QgY3JlYXRlUXVlcnkgPSByZXF1aXJlKCcuL2NyZWF0ZV9xdWVyeS5qcycpO1xubW9kdWxlLmV4cG9ydHMgPSAocmVxLCBpbmRpY2VzKSA9PiB7XG4gIC8vIEFsaWFzIGNhbGxXaXRoUmVxdWVzdCBzbyB3ZSBkb24ndCBoYXZlIHRvIHVzZSB0aGlzIGxvbmcgdWdseSBzdHJpbmdcbiAgY29uc3QgY2FsbFdpdGhSZXF1ZXN0ID0gcmVxLnNlcnZlci5wbHVnaW5zLmVsYXN0aWNzZWFyY2guY2FsbFdpdGhSZXF1ZXN0O1xuXG4gIC8vIEdldCB0aGUgcGFyYW1zIGZyb20gdGhlIFBPU1QgYm9keSBmb3IgdGhlIHJlcXVlc3RcbiAgY29uc3Qgc3RhcnQgPSByZXEucGF5bG9hZC50aW1lUmFuZ2UubWluO1xuICBjb25zdCBlbmQgPSByZXEucGF5bG9hZC50aW1lUmFuZ2UubWF4O1xuICBjb25zdCBjbHVzdGVyVXVpZCA9IHJlcS5wYXJhbXMuY2x1c3RlclV1aWQ7XG5cbiAgLy8gQnVpbGQgdXAgdGhlIEVsYXN0aWNzZWFyY2ggcmVxdWVzdFxuICBjb25zdCBwYXJhbXMgPSB7XG4gICAgaW5kZXg6IGluZGljZXMsXG4gICAgaWdub3JlOiBbNDA0XSxcbiAgICB0eXBlOiAnaW5kZXhfc3RhdHMnLFxuICAgIGJvZHk6IHtcbiAgICAgIHNpemU6IDEsXG4gICAgICBzb3J0OiB7IHRpbWVzdGFtcDogeyBvcmRlcjogJ2Rlc2MnIH0gfSxcbiAgICAgIHF1ZXJ5OiBjcmVhdGVRdWVyeSh7XG4gICAgICAgIGVuZDogZW5kLFxuICAgICAgICBjbHVzdGVyVXVpZDogY2x1c3RlclV1aWQsXG4gICAgICAgIGZpbHRlcnM6IFt7XG4gICAgICAgICAgdGVybTogeyAnaW5kZXhfc3RhdHMuaW5kZXgnOiByZXEucGFyYW1zLmlkIH1cbiAgICAgICAgfV1cbiAgICAgIH0pXG4gICAgfVxuICB9O1xuXG4gIHJldHVybiBjYWxsV2l0aFJlcXVlc3QocmVxLCAnc2VhcmNoJywgcGFyYW1zKVxuICAudGhlbigocmVzcCkgPT4ge1xuICAgIGNvbnN0IGluZGV4U3VtbWFyeSA9IHsgZG9jdW1lbnRzOiAwLCBkYXRhU2l6ZTogMCB9O1xuICAgIGNvbnN0IHRvdGFscyA9IF8uZ2V0KHJlc3AsICdoaXRzLmhpdHNbMF0uX3NvdXJjZS5pbmRleF9zdGF0cy50b3RhbCcpO1xuICAgIGlmICh0b3RhbHMpIHtcbiAgICAgIGluZGV4U3VtbWFyeS5kb2N1bWVudHMgPSBfLmdldCh0b3RhbHMsICdkb2NzLmNvdW50Jyk7XG4gICAgICBpbmRleFN1bW1hcnkuZGF0YVNpemUgPSBfLmdldCh0b3RhbHMsICdzdG9yZS5zaXplX2luX2J5dGVzJyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGluZGV4U3VtbWFyeTtcbiAgfSk7XG59O1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/get_index_summary.js"
      ],
      "names": [],
      "mappings": ";;AAAA,IAAM,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC5B,IAAM,WAAW,GAAG,OAAO,CAAC,mBAAmB,CAAC,CAAC;AACjD,MAAM,CAAC,OAAO,GAAG,UAAC,GAAG,EAAE,OAAO,EAAK;;AAEjC,MAAM,eAAe,GAAG,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,eAAe,CAAC;;;AAGzE,MAAM,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC;AACxC,MAAM,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC;AACtC,MAAM,WAAW,GAAG,GAAG,CAAC,MAAM,CAAC,WAAW,CAAC;;;AAG3C,MAAM,MAAM,GAAG;AACb,SAAK,EAAE,OAAO;AACd,UAAM,EAAE,CAAC,GAAG,CAAC;AACb,QAAI,EAAE,aAAa;AACnB,QAAI,EAAE;AACJ,UAAI,EAAE,CAAC;AACP,UAAI,EAAE,EAAE,SAAS,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,EAAE;AACtC,WAAK,EAAE,WAAW,CAAC;AACjB,WAAG,EAAE,GAAG;AACR,mBAAW,EAAE,WAAW;AACxB,eAAO,EAAE,CAAC;AACR,cAAI,EAAE,EAAE,mBAAmB,EAAE,GAAG,CAAC,MAAM,CAAC,EAAE,EAAE;SAC7C,CAAC;OACH,CAAC;KACH;GACF,CAAC;;AAEF,SAAO,eAAe,CAAC,GAAG,EAAE,QAAQ,EAAE,MAAM,CAAC,CAC5C,IAAI,CAAC,UAAC,IAAI,EAAK;AACd,QAAM,YAAY,GAAG,EAAE,SAAS,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC;AACnD,QAAM,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,wCAAwC,CAAC,CAAC;AACrE,QAAI,MAAM,EAAE;AACV,kBAAY,CAAC,SAAS,GAAG,CAAC,CAAC,GAAG,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;AACrD,kBAAY,CAAC,QAAQ,GAAG,CAAC,CAAC,GAAG,CAAC,MAAM,EAAE,qBAAqB,CAAC,CAAC;KAC9D;;AAED,WAAO,YAAY,CAAC;GACrB,CAAC,CAAC;CACJ,CAAC",
      "file": "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/get_index_summary.js",
      "sourcesContent": [
        "const _ = require('lodash');\nconst createQuery = require('./create_query.js');\nmodule.exports = (req, indices) => {\n  // Alias callWithRequest so we don't have to use this long ugly string\n  const callWithRequest = req.server.plugins.elasticsearch.callWithRequest;\n\n  // Get the params from the POST body for the request\n  const start = req.payload.timeRange.min;\n  const end = req.payload.timeRange.max;\n  const clusterUuid = req.params.clusterUuid;\n\n  // Build up the Elasticsearch request\n  const params = {\n    index: indices,\n    ignore: [404],\n    type: 'index_stats',\n    body: {\n      size: 1,\n      sort: { timestamp: { order: 'desc' } },\n      query: createQuery({\n        end: end,\n        clusterUuid: clusterUuid,\n        filters: [{\n          term: { 'index_stats.index': req.params.id }\n        }]\n      })\n    }\n  };\n\n  return callWithRequest(req, 'search', params)\n  .then((resp) => {\n    const indexSummary = { documents: 0, dataSize: 0 };\n    const totals = _.get(resp, 'hits.hits[0]._source.index_stats.total');\n    if (totals) {\n      indexSummary.documents = _.get(totals, 'docs.count');\n      indexSummary.dataSize = _.get(totals, 'store.size_in_bytes');\n    }\n\n    return indexSummary;\n  });\n};\n"
      ]
    },
    "mtime": 1468947861000
  },
  "{\"filename\":\"/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/get_listing_indices.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "/* Run an aggregation on index_stats to get stat data for the selected time\n * range for all the active indices. The stat data is built up with passed-in\n * options that are given by the UI client as an array\n * (req.payload.listingMetrics). Every option is a key to a configuration value\n * in public/lib/metrics. Those options are used to build up a query with a\n * bunch of date histograms.\n *\n * After the result comes back from Elasticsearch, we process the date\n * histogram data with mapListingResponse to transform it into X/Y coordinates\n * for charting. This method is shared by the get_listing_nodes lib.\n */\n\n'use strict';\n\nvar _ = require('lodash');\nvar moment = require('moment');\nvar createQuery = require('./create_query.js');\nvar calcAuto = require('./calculate_auto');\nvar root = require('requirefrom')('');\nvar metrics = root('public/lib/metrics');\nvar mapListingResponse = require('./map_listing_response');\n\nmodule.exports = function (req, indices) {\n  var config = req.server.config();\n  var callWithRequest = req.server.plugins.elasticsearch.callWithRequest;\n  var listingMetrics = req.payload.listingMetrics || [];\n  var start = moment.utc(req.payload.timeRange.min).valueOf();\n  var orgStart = start;\n  var end = moment.utc(req.payload.timeRange.max).valueOf();\n  var clusterUuid = req.params.clusterUuid;\n  var maxBucketSize = config.get('marvel.max_bucket_size');\n  var minIntervalSeconds = config.get('marvel.min_interval_seconds');\n\n  var params = {\n    index: indices,\n    type: 'index_stats',\n    searchType: 'count',\n    ignoreUnavailable: true,\n    ignore: [404],\n    body: {\n      query: createQuery({ start: start, end: end, clusterUuid: clusterUuid }),\n      aggs: {}\n    }\n  };\n\n  var max = end;\n  var duration = moment.duration(max - orgStart, 'ms');\n  var bucketSize = Math.max(minIntervalSeconds, calcAuto.near(100, duration).asSeconds());\n  // performance optimization to avoid overwhelming amount of results\n  start = moment.utc(end).subtract(2, 'minutes').valueOf();\n  var min = start;\n\n  var aggs = {\n    items: {\n      terms: { field: 'index_stats.index', size: maxBucketSize },\n      aggs: {}\n    }\n  };\n\n  listingMetrics.forEach(function (id) {\n    var metric = metrics[id];\n    var metricAgg = null;\n    if (!metric) return;\n    if (!metric.aggs) {\n      metricAgg = {\n        metric: {},\n        metric_deriv: {\n          derivative: { buckets_path: 'metric', unit: 'second' }\n        }\n      };\n      metricAgg.metric[metric.metricAgg] = {\n        field: metric.field\n      };\n    }\n\n    aggs.items.aggs[id] = {\n      date_histogram: {\n        field: 'timestamp',\n        min_doc_count: 0,\n        interval: bucketSize + 's',\n        extended_bounds: {\n          min: min,\n          max: max\n        }\n      },\n      aggs: metric.aggs || metricAgg\n    };\n  });\n\n  params.body.aggs = aggs;\n\n  return callWithRequest(req, 'search', params).then(function (resp) {\n    if (!resp.hits.total) {\n      return [];\n    }\n    // call the mapping\n    return mapListingResponse({\n      type: 'indices',\n      items: resp.aggregations.items.buckets,\n      listingMetrics: listingMetrics,\n      min: min,\n      max: max,\n      bucketSize: bucketSize\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/get_listing_indices.js"
      ],
      "names": [],
      "mappings": "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",
      "file": "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/get_listing_indices.js",
      "sourcesContent": [
        "/* Run an aggregation on index_stats to get stat data for the selected time\n * range for all the active indices. The stat data is built up with passed-in\n * options that are given by the UI client as an array\n * (req.payload.listingMetrics). Every option is a key to a configuration value\n * in public/lib/metrics. Those options are used to build up a query with a\n * bunch of date histograms.\n *\n * After the result comes back from Elasticsearch, we process the date\n * histogram data with mapListingResponse to transform it into X/Y coordinates\n * for charting. This method is shared by the get_listing_nodes lib.\n */\n\nconst _ = require('lodash');\nconst moment = require('moment');\nconst createQuery = require('./create_query.js');\nconst calcAuto = require('./calculate_auto');\nconst root = require('requirefrom')('');\nconst metrics = root('public/lib/metrics');\nconst mapListingResponse = require('./map_listing_response');\n\nmodule.exports = (req, indices) => {\n  const config = req.server.config();\n  const callWithRequest = req.server.plugins.elasticsearch.callWithRequest;\n  const listingMetrics = req.payload.listingMetrics || [];\n  let start = moment.utc(req.payload.timeRange.min).valueOf();\n  const orgStart = start;\n  const end = moment.utc(req.payload.timeRange.max).valueOf();\n  const clusterUuid = req.params.clusterUuid;\n  const maxBucketSize = config.get('marvel.max_bucket_size');\n  const minIntervalSeconds = config.get('marvel.min_interval_seconds');\n\n  const params = {\n    index: indices,\n    type: 'index_stats',\n    searchType: 'count',\n    ignoreUnavailable: true,\n    ignore: [404],\n    body: {\n      query: createQuery({ start, end, clusterUuid }),\n      aggs: {}\n    }\n  };\n\n  const max = end;\n  const duration = moment.duration(max - orgStart, 'ms');\n  const bucketSize = Math.max(minIntervalSeconds, calcAuto.near(100, duration).asSeconds());\n  // performance optimization to avoid overwhelming amount of results\n  start = moment.utc(end).subtract(2, 'minutes').valueOf();\n  const min = start;\n\n  var aggs = {\n    items: {\n      terms: { field: 'index_stats.index', size: maxBucketSize },\n      aggs: {}\n    }\n  };\n\n  listingMetrics.forEach((id) => {\n    const metric = metrics[id];\n    let metricAgg = null;\n    if (!metric) return;\n    if (!metric.aggs) {\n      metricAgg = {\n        metric: {},\n        metric_deriv: {\n          derivative: { buckets_path: 'metric', unit: 'second' }\n        }\n      };\n      metricAgg.metric[metric.metricAgg] = {\n        field: metric.field\n      };\n    }\n\n    aggs.items.aggs[id] = {\n      date_histogram: {\n        field: 'timestamp',\n        min_doc_count: 0,\n        interval: bucketSize + 's',\n        extended_bounds: {\n          min: min,\n          max: max\n        }\n      },\n      aggs: metric.aggs || metricAgg\n    };\n  });\n\n  params.body.aggs = aggs;\n\n  return callWithRequest(req, 'search', params)\n  .then(resp => {\n    if (!resp.hits.total) {\n      return [];\n    }\n    // call the mapping\n    return mapListingResponse({\n      type: 'indices',\n      items: resp.aggregations.items.buckets,\n      listingMetrics,\n      min,\n      max,\n      bucketSize\n    });\n  });\n\n};\n"
      ]
    },
    "mtime": 1468947861000
  },
  "{\"filename\":\"/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/map_listing_response.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "'use strict';\n\nvar _ = require('lodash');\nvar filterPartialBuckets = require('./filter_partial_buckets');\nvar pickMetricFields = require('./pick_metric_fields');\nvar root = require('requirefrom')('');\nvar metrics = root('public/lib/metrics');\n\nfunction mapChartData(metric) {\n  return function (bucket) {\n    var bucketMetricDeriv = bucket.metric_deriv;\n    var bucketMetricValue = bucket.metric.value;\n    var data = { x: bucket.key };\n    if (metric.derivative && bucketMetricDeriv) {\n      data.y = bucketMetricDeriv.normalized_value || bucketMetricDeriv.value || 0;\n    } else if (bucketMetricValue) {\n      data.y = bucketMetricValue;\n    }\n\n    return data;\n  };\n}\n\nfunction calcSlope(data) {\n  var length = data.length;\n  var xSum = data.reduce(function (prev, curr) {\n    return prev + curr.x;\n  }, 0);\n  var ySum = data.reduce(function (prev, curr) {\n    return prev + curr.y;\n  }, 0);\n  var xySum = data.reduce(function (prev, curr) {\n    return prev + curr.y * curr.x;\n  }, 0);\n  var xSqSum = data.reduce(function (prev, curr) {\n    return prev + curr.x * curr.x;\n  }, 0);\n  var numerator = length * xySum - xSum * ySum;\n  var denominator = length * xSqSum - xSum * ySum;\n  return numerator / denominator;\n}\n\n/*\n * Calculation rules per type\n */\nfunction calculateMetrics(type, partialBucketFilter) {\n  // Rich statistics calculated only for nodes. Indices only needs lastVal\n  var minVal = undefined;\n  var maxVal = undefined;\n  var slope = undefined;\n  var lastVal = undefined;\n\n  var calculators = {\n    nodes: function nodes(buckets, metric) {\n      var results = _.chain(buckets).filter(partialBucketFilter) // buckets with whole start/end time range\n      .map(mapChartData(metric)) // calculate metric as X/Y\n      .value();\n\n      minVal = _.min(_.pluck(results, 'y'));\n      maxVal = _.max(_.pluck(results, 'y'));\n      slope = calcSlope(results);\n      lastVal = _.last(_.pluck(results, 'y'));\n\n      return { minVal: minVal, maxVal: maxVal, slope: slope, lastVal: lastVal };\n    },\n\n    indices: function indices(buckets, metric) {\n      // just find the last whole bucket\n      var currentBucket = undefined;\n      var idx = buckets.length - 1;\n      while (idx > -1) {\n        currentBucket = buckets[idx];\n        if (currentBucket.doc_count > 0 && partialBucketFilter(currentBucket)) {\n          // found the last whole bucket\n          break;\n        }\n        idx -= 1;\n      }\n\n      lastVal = mapChartData(metric)(currentBucket).y;\n\n      return { minVal: minVal, maxVal: maxVal, slope: slope, lastVal: lastVal };\n    }\n  };\n\n  return calculators[type];\n}\n\nmodule.exports = function mapListingResponse(options) {\n  var type = options.type;\n  var items = options.items;\n  var listingMetrics = options.listingMetrics;\n  var min = options.min;\n  var max = options.max;\n  var bucketSize = options.bucketSize;\n\n  var partialBucketFilter = filterPartialBuckets(min, max, bucketSize, { ignoreEarly: true });\n  var metricCalculator = calculateMetrics(type, partialBucketFilter);\n\n  var data = _.map(items, function (item) {\n    var row = { name: item.key, metrics: {} };\n\n    _.each(listingMetrics, function (id) {\n\n      var metric = metrics[id];\n      var buckets = item[id].buckets;\n\n      var _metricCalculator = metricCalculator(buckets, metric);\n\n      var minVal = _metricCalculator.minVal;\n      var maxVal = _metricCalculator.maxVal;\n      var slope = _metricCalculator.slope;\n      var lastVal = _metricCalculator.lastVal;\n\n      row.metrics[id] = {\n        metric: pickMetricFields(metric),\n        min: minVal,\n        max: maxVal,\n        slope: slope,\n        last: lastVal\n      };\n    });\n\n    return row;\n  });\n\n  return data;\n};\n//# sourceMappingURL=data:application/json;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/map_listing_response.js"
      ],
      "names": [],
      "mappings": "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",
      "file": "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/map_listing_response.js",
      "sourcesContent": [
        "const _ = require('lodash');\nconst filterPartialBuckets = require('./filter_partial_buckets');\nconst pickMetricFields = require('./pick_metric_fields');\nconst root = require('requirefrom')('');\nconst metrics = root('public/lib/metrics');\n\nfunction mapChartData(metric) {\n  return (bucket) => {\n    const bucketMetricDeriv = bucket.metric_deriv;\n    const bucketMetricValue = bucket.metric.value;\n    const data = { x: bucket.key };\n    if (metric.derivative && bucketMetricDeriv) {\n      data.y = bucketMetricDeriv.normalized_value || bucketMetricDeriv.value || 0;\n    } else if (bucketMetricValue) {\n      data.y = bucketMetricValue;\n    }\n\n    return data;\n  };\n}\n\nfunction calcSlope(data) {\n  var length = data.length;\n  var xSum = data.reduce(function (prev, curr) { return prev + curr.x; }, 0);\n  var ySum = data.reduce(function (prev, curr) { return prev + curr.y; }, 0);\n  var xySum = data.reduce(function (prev, curr) { return prev + (curr.y * curr.x); }, 0);\n  var xSqSum = data.reduce(function (prev, curr) { return prev + (curr.x * curr.x); }, 0);\n  var numerator = (length * xySum) - (xSum * ySum);\n  var denominator = (length * xSqSum) - (xSum * ySum);\n  return numerator / denominator;\n}\n\n/*\n * Calculation rules per type\n */\nfunction calculateMetrics(type, partialBucketFilter) {\n  // Rich statistics calculated only for nodes. Indices only needs lastVal\n  let minVal;\n  let maxVal;\n  let slope;\n  let lastVal;\n\n  const calculators = {\n    nodes: function (buckets, metric) {\n      const results = _.chain(buckets)\n      .filter(partialBucketFilter) // buckets with whole start/end time range\n      .map(mapChartData(metric)) // calculate metric as X/Y\n      .value();\n\n      minVal = _.min(_.pluck(results, 'y'));\n      maxVal = _.max(_.pluck(results, 'y'));\n      slope = calcSlope(results);\n      lastVal = _.last(_.pluck(results, 'y'));\n\n      return { minVal, maxVal, slope, lastVal };\n    },\n\n    indices: function (buckets, metric) {\n      // just find the last whole bucket\n      let currentBucket;\n      let idx = buckets.length - 1;\n      while (idx > -1) {\n        currentBucket = buckets[idx];\n        if (currentBucket.doc_count > 0 && partialBucketFilter(currentBucket)) {\n          // found the last whole bucket\n          break;\n        }\n        idx -= 1;\n      }\n\n      lastVal = mapChartData(metric)(currentBucket).y;\n\n      return { minVal, maxVal, slope, lastVal };\n    }\n  };\n\n  return calculators[type];\n}\n\nmodule.exports = function mapListingResponse(options) {\n  const { type, items, listingMetrics, min, max, bucketSize } = options;\n  const partialBucketFilter = filterPartialBuckets(min, max, bucketSize, { ignoreEarly: true });\n  const metricCalculator = calculateMetrics(type, partialBucketFilter);\n\n  const data = _.map(items, function (item) {\n    const row = { name: item.key, metrics: {} };\n\n    _.each(listingMetrics, function (id) {\n\n      const metric = metrics[id];\n      const buckets = item[id].buckets;\n      const { minVal, maxVal, slope, lastVal } = metricCalculator(buckets, metric);\n\n      row.metrics[id] = {\n        metric: pickMetricFields(metric),\n        min: minVal,\n        max: maxVal,\n        slope: slope,\n        last: lastVal\n      };\n    });\n\n    return row;\n  });\n\n  return data;\n};\n"
      ]
    },
    "mtime": 1468947861000
  },
  "{\"filename\":\"/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/get_shard_allocation.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "'use strict';\n\nvar _ = require('lodash');\nvar createQuery = require('./create_query');\n\nmodule.exports = function (req, indices, filters, lastState) {\n  filters.push({\n    term: { state_uuid: _.get(lastState, 'cluster_state.state_uuid') }\n  });\n\n  var config = req.server.config();\n  var callWithRequest = req.server.plugins.elasticsearch.callWithRequest;\n  var clusterUuid = req.params.clusterUuid;\n  var params = {\n    index: config.get('marvel.index_prefix') + '*',\n    type: 'shards',\n    body: {\n      size: config.get('marvel.max_bucket_size'),\n      query: createQuery({ clusterUuid: clusterUuid, filters: filters })\n    }\n  };\n\n  return callWithRequest(req, 'search', params).then(function (resp) {\n    var hits = _.get(resp, 'hits.hits');\n    if (!hits) return [];\n    // map into object with shard and source properties\n    return hits.map(function (doc) {\n      return _.merge(doc._source.shard, {\n        resolver: _.get(doc, '_source.source_node[' + config.get('marvel.node_resolver') + ']')\n      });\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9UaGVvL0Rlc2t0b3AvTmVidWxhVGVtcC9OZWJ1bGEvZWxhc3RpY3NlYXJjaC9pbnN0YWxsZWRQbHVnaW5zL21hcnZlbC9zZXJ2ZXIvbGliL2dldF9zaGFyZF9hbGxvY2F0aW9uLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBTSxDQUFDLEdBQUcsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0FBQzVCLElBQU0sV0FBVyxHQUFHLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDOztBQUU5QyxNQUFNLENBQUMsT0FBTyxHQUFHLFVBQUMsR0FBRyxFQUFFLE9BQU8sRUFBRSxPQUFPLEVBQUUsU0FBUyxFQUFLO0FBQ3JELFNBQU8sQ0FBQyxJQUFJLENBQUM7QUFDWCxRQUFJLEVBQUUsRUFBRSxVQUFVLEVBQUUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxTQUFTLEVBQUUsMEJBQTBCLENBQUMsRUFBRTtHQUNuRSxDQUFDLENBQUM7O0FBRUgsTUFBTSxNQUFNLEdBQUcsR0FBRyxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsQ0FBQztBQUNuQyxNQUFNLGVBQWUsR0FBRyxHQUFHLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxhQUFhLENBQUMsZUFBZSxDQUFDO0FBQ3pFLE1BQU0sV0FBVyxHQUFHLEdBQUcsQ0FBQyxNQUFNLENBQUMsV0FBVyxDQUFDO0FBQzNDLE1BQU0sTUFBTSxHQUFHO0FBQ2IsU0FBSyxFQUFFLE1BQU0sQ0FBQyxHQUFHLENBQUMscUJBQXFCLENBQUMsR0FBRyxHQUFHO0FBQzlDLFFBQUksRUFBRSxRQUFRO0FBQ2QsUUFBSSxFQUFFO0FBQ0osVUFBSSxFQUFFLE1BQU0sQ0FBQyxHQUFHLENBQUMsd0JBQXdCLENBQUM7QUFDMUMsV0FBSyxFQUFFLFdBQVcsQ0FBQyxFQUFFLFdBQVcsRUFBWCxXQUFXLEVBQUUsT0FBTyxFQUFQLE9BQU8sRUFBRSxDQUFDO0tBQzdDO0dBQ0YsQ0FBQzs7QUFFRixTQUFPLGVBQWUsQ0FBQyxHQUFHLEVBQUUsUUFBUSxFQUFFLE1BQU0sQ0FBQyxDQUM1QyxJQUFJLENBQUMsVUFBQyxJQUFJLEVBQUs7QUFDZCxRQUFNLElBQUksR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLElBQUksRUFBRSxXQUFXLENBQUMsQ0FBQztBQUN0QyxRQUFJLENBQUMsSUFBSSxFQUFFLE9BQU8sRUFBRSxDQUFDOztBQUVyQixXQUFPLElBQUksQ0FBQyxHQUFHLENBQUMsVUFBQSxHQUFHO2FBQUksQ0FBQyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLEtBQUssRUFBRTtBQUNoRCxnQkFBUSxFQUFFLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRywyQkFBeUIsTUFBTSxDQUFDLEdBQUcsQ0FBQyxzQkFBc0IsQ0FBQyxPQUFJO09BQ25GLENBQUM7S0FBQSxDQUFDLENBQUM7R0FDTCxDQUFDLENBQUM7Q0FDSixDQUFDIiwiZmlsZSI6Ii9Vc2Vycy9UaGVvL0Rlc2t0b3AvTmVidWxhVGVtcC9OZWJ1bGEvZWxhc3RpY3NlYXJjaC9pbnN0YWxsZWRQbHVnaW5zL21hcnZlbC9zZXJ2ZXIvbGliL2dldF9zaGFyZF9hbGxvY2F0aW9uLmpzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgXyA9IHJlcXVpcmUoJ2xvZGFzaCcpO1xuY29uc3QgY3JlYXRlUXVlcnkgPSByZXF1aXJlKCcuL2NyZWF0ZV9xdWVyeScpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IChyZXEsIGluZGljZXMsIGZpbHRlcnMsIGxhc3RTdGF0ZSkgPT4ge1xuICBmaWx0ZXJzLnB1c2goe1xuICAgIHRlcm06IHsgc3RhdGVfdXVpZDogXy5nZXQobGFzdFN0YXRlLCAnY2x1c3Rlcl9zdGF0ZS5zdGF0ZV91dWlkJykgfVxuICB9KTtcblxuICBjb25zdCBjb25maWcgPSByZXEuc2VydmVyLmNvbmZpZygpO1xuICBjb25zdCBjYWxsV2l0aFJlcXVlc3QgPSByZXEuc2VydmVyLnBsdWdpbnMuZWxhc3RpY3NlYXJjaC5jYWxsV2l0aFJlcXVlc3Q7XG4gIGNvbnN0IGNsdXN0ZXJVdWlkID0gcmVxLnBhcmFtcy5jbHVzdGVyVXVpZDtcbiAgY29uc3QgcGFyYW1zID0ge1xuICAgIGluZGV4OiBjb25maWcuZ2V0KCdtYXJ2ZWwuaW5kZXhfcHJlZml4JykgKyAnKicsXG4gICAgdHlwZTogJ3NoYXJkcycsXG4gICAgYm9keToge1xuICAgICAgc2l6ZTogY29uZmlnLmdldCgnbWFydmVsLm1heF9idWNrZXRfc2l6ZScpLFxuICAgICAgcXVlcnk6IGNyZWF0ZVF1ZXJ5KHsgY2x1c3RlclV1aWQsIGZpbHRlcnMgfSlcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIGNhbGxXaXRoUmVxdWVzdChyZXEsICdzZWFyY2gnLCBwYXJhbXMpXG4gIC50aGVuKChyZXNwKSA9PiB7XG4gICAgY29uc3QgaGl0cyA9IF8uZ2V0KHJlc3AsICdoaXRzLmhpdHMnKTtcbiAgICBpZiAoIWhpdHMpIHJldHVybiBbXTtcbiAgICAvLyBtYXAgaW50byBvYmplY3Qgd2l0aCBzaGFyZCBhbmQgc291cmNlIHByb3BlcnRpZXNcbiAgICByZXR1cm4gaGl0cy5tYXAoZG9jID0+IF8ubWVyZ2UoZG9jLl9zb3VyY2Uuc2hhcmQsIHtcbiAgICAgIHJlc29sdmVyOiBfLmdldChkb2MsIGBfc291cmNlLnNvdXJjZV9ub2RlWyR7Y29uZmlnLmdldCgnbWFydmVsLm5vZGVfcmVzb2x2ZXInKX1dYClcbiAgICB9KSk7XG4gIH0pO1xufTtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/get_shard_allocation.js"
      ],
      "names": [],
      "mappings": ";;AAAA,IAAM,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC5B,IAAM,WAAW,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAAC;;AAE9C,MAAM,CAAC,OAAO,GAAG,UAAC,GAAG,EAAE,OAAO,EAAE,OAAO,EAAE,SAAS,EAAK;AACrD,SAAO,CAAC,IAAI,CAAC;AACX,QAAI,EAAE,EAAE,UAAU,EAAE,CAAC,CAAC,GAAG,CAAC,SAAS,EAAE,0BAA0B,CAAC,EAAE;GACnE,CAAC,CAAC;;AAEH,MAAM,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;AACnC,MAAM,eAAe,GAAG,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,eAAe,CAAC;AACzE,MAAM,WAAW,GAAG,GAAG,CAAC,MAAM,CAAC,WAAW,CAAC;AAC3C,MAAM,MAAM,GAAG;AACb,SAAK,EAAE,MAAM,CAAC,GAAG,CAAC,qBAAqB,CAAC,GAAG,GAAG;AAC9C,QAAI,EAAE,QAAQ;AACd,QAAI,EAAE;AACJ,UAAI,EAAE,MAAM,CAAC,GAAG,CAAC,wBAAwB,CAAC;AAC1C,WAAK,EAAE,WAAW,CAAC,EAAE,WAAW,EAAX,WAAW,EAAE,OAAO,EAAP,OAAO,EAAE,CAAC;KAC7C;GACF,CAAC;;AAEF,SAAO,eAAe,CAAC,GAAG,EAAE,QAAQ,EAAE,MAAM,CAAC,CAC5C,IAAI,CAAC,UAAC,IAAI,EAAK;AACd,QAAM,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;AACtC,QAAI,CAAC,IAAI,EAAE,OAAO,EAAE,CAAC;;AAErB,WAAO,IAAI,CAAC,GAAG,CAAC,UAAA,GAAG;aAAI,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,EAAE;AAChD,gBAAQ,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,2BAAyB,MAAM,CAAC,GAAG,CAAC,sBAAsB,CAAC,OAAI;OACnF,CAAC;KAAA,CAAC,CAAC;GACL,CAAC,CAAC;CACJ,CAAC",
      "file": "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/get_shard_allocation.js",
      "sourcesContent": [
        "const _ = require('lodash');\nconst createQuery = require('./create_query');\n\nmodule.exports = (req, indices, filters, lastState) => {\n  filters.push({\n    term: { state_uuid: _.get(lastState, 'cluster_state.state_uuid') }\n  });\n\n  const config = req.server.config();\n  const callWithRequest = req.server.plugins.elasticsearch.callWithRequest;\n  const clusterUuid = req.params.clusterUuid;\n  const params = {\n    index: config.get('marvel.index_prefix') + '*',\n    type: 'shards',\n    body: {\n      size: config.get('marvel.max_bucket_size'),\n      query: createQuery({ clusterUuid, filters })\n    }\n  };\n\n  return callWithRequest(req, 'search', params)\n  .then((resp) => {\n    const hits = _.get(resp, 'hits.hits');\n    if (!hits) return [];\n    // map into object with shard and source properties\n    return hits.map(doc => _.merge(doc._source.shard, {\n      resolver: _.get(doc, `_source.source_node[${config.get('marvel.node_resolver')}]`)\n    }));\n  });\n};\n"
      ]
    },
    "mtime": 1468947861000
  },
  "{\"filename\":\"/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/get_unassigned_shards.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [
          {
            "source": "lodash",
            "imported": [
              "get",
              "set"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "get",
                "local": "get"
              },
              {
                "kind": "named",
                "imported": "set",
                "local": "set"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "'use strict';\n\nvar _lodash = require('lodash');\n\nvar root = require('requirefrom')('');\n\n// Methods for calculating metrics for\n// - Number of Primary Shards\n// - Number of Replica Shards\n// - Unassigned Primary Shards\n// - Unassigned Replica Shards\nmodule.exports = function getUnassignedShards(indexShardStats) {\n  var returned = {};\n  var unassignedShards = 0;\n\n  unassignedShards += (0, _lodash.get)(indexShardStats, 'unassigned.primary');\n  unassignedShards += (0, _lodash.get)(indexShardStats, 'unassigned.replica');\n\n  // create an object in the format of a metric so it can be put into listing\n  (0, _lodash.set)(returned, 'metrics.index_unassigned_shards.last', unassignedShards);\n  (0, _lodash.set)(returned, 'metrics.index_unassigned_shards.metric.units', '');\n\n  return returned;\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9UaGVvL0Rlc2t0b3AvTmVidWxhVGVtcC9OZWJ1bGEvZWxhc3RpY3NlYXJjaC9pbnN0YWxsZWRQbHVnaW5zL21hcnZlbC9zZXJ2ZXIvbGliL2dldF91bmFzc2lnbmVkX3NoYXJkcy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztzQkFBeUIsUUFBUTs7QUFFakMsSUFBTSxJQUFJLEdBQUcsT0FBTyxDQUFDLGFBQWEsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDOzs7Ozs7O0FBT3hDLE1BQU0sQ0FBQyxPQUFPLEdBQUcsU0FBUyxtQkFBbUIsQ0FBQyxlQUFlLEVBQUU7QUFDN0QsTUFBTSxRQUFRLEdBQUcsRUFBRSxDQUFDO0FBQ3BCLE1BQUksZ0JBQWdCLEdBQUcsQ0FBQyxDQUFDOztBQUV6QixrQkFBZ0IsSUFBSSxpQkFBSSxlQUFlLEVBQUUsb0JBQW9CLENBQUMsQ0FBQztBQUMvRCxrQkFBZ0IsSUFBSSxpQkFBSSxlQUFlLEVBQUUsb0JBQW9CLENBQUMsQ0FBQzs7O0FBRy9ELG1CQUFJLFFBQVEsRUFBRSxzQ0FBc0MsRUFBRSxnQkFBZ0IsQ0FBQyxDQUFDO0FBQ3hFLG1CQUFJLFFBQVEsRUFBRSw4Q0FBOEMsRUFBRSxFQUFFLENBQUMsQ0FBQzs7QUFFbEUsU0FBTyxRQUFRLENBQUM7Q0FDakIsQ0FBQyIsImZpbGUiOiIvVXNlcnMvVGhlby9EZXNrdG9wL05lYnVsYVRlbXAvTmVidWxhL2VsYXN0aWNzZWFyY2gvaW5zdGFsbGVkUGx1Z2lucy9tYXJ2ZWwvc2VydmVyL2xpYi9nZXRfdW5hc3NpZ25lZF9zaGFyZHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXQsIHNldCB9IGZyb20gJ2xvZGFzaCc7XG5cbmNvbnN0IHJvb3QgPSByZXF1aXJlKCdyZXF1aXJlZnJvbScpKCcnKTtcblxuLy8gTWV0aG9kcyBmb3IgY2FsY3VsYXRpbmcgbWV0cmljcyBmb3Jcbi8vIC0gTnVtYmVyIG9mIFByaW1hcnkgU2hhcmRzXG4vLyAtIE51bWJlciBvZiBSZXBsaWNhIFNoYXJkc1xuLy8gLSBVbmFzc2lnbmVkIFByaW1hcnkgU2hhcmRzXG4vLyAtIFVuYXNzaWduZWQgUmVwbGljYSBTaGFyZHNcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gZ2V0VW5hc3NpZ25lZFNoYXJkcyhpbmRleFNoYXJkU3RhdHMpIHtcbiAgY29uc3QgcmV0dXJuZWQgPSB7fTtcbiAgbGV0IHVuYXNzaWduZWRTaGFyZHMgPSAwO1xuXG4gIHVuYXNzaWduZWRTaGFyZHMgKz0gZ2V0KGluZGV4U2hhcmRTdGF0cywgJ3VuYXNzaWduZWQucHJpbWFyeScpO1xuICB1bmFzc2lnbmVkU2hhcmRzICs9IGdldChpbmRleFNoYXJkU3RhdHMsICd1bmFzc2lnbmVkLnJlcGxpY2EnKTtcblxuICAvLyBjcmVhdGUgYW4gb2JqZWN0IGluIHRoZSBmb3JtYXQgb2YgYSBtZXRyaWMgc28gaXQgY2FuIGJlIHB1dCBpbnRvIGxpc3RpbmdcbiAgc2V0KHJldHVybmVkLCAnbWV0cmljcy5pbmRleF91bmFzc2lnbmVkX3NoYXJkcy5sYXN0JywgdW5hc3NpZ25lZFNoYXJkcyk7XG4gIHNldChyZXR1cm5lZCwgJ21ldHJpY3MuaW5kZXhfdW5hc3NpZ25lZF9zaGFyZHMubWV0cmljLnVuaXRzJywgJycpO1xuXG4gIHJldHVybiByZXR1cm5lZDtcbn07XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/get_unassigned_shards.js"
      ],
      "names": [],
      "mappings": ";;sBAAyB,QAAQ;;AAEjC,IAAM,IAAI,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC;;;;;;;AAOxC,MAAM,CAAC,OAAO,GAAG,SAAS,mBAAmB,CAAC,eAAe,EAAE;AAC7D,MAAM,QAAQ,GAAG,EAAE,CAAC;AACpB,MAAI,gBAAgB,GAAG,CAAC,CAAC;;AAEzB,kBAAgB,IAAI,iBAAI,eAAe,EAAE,oBAAoB,CAAC,CAAC;AAC/D,kBAAgB,IAAI,iBAAI,eAAe,EAAE,oBAAoB,CAAC,CAAC;;;AAG/D,mBAAI,QAAQ,EAAE,sCAAsC,EAAE,gBAAgB,CAAC,CAAC;AACxE,mBAAI,QAAQ,EAAE,8CAA8C,EAAE,EAAE,CAAC,CAAC;;AAElE,SAAO,QAAQ,CAAC;CACjB,CAAC",
      "file": "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/get_unassigned_shards.js",
      "sourcesContent": [
        "import { get, set } from 'lodash';\n\nconst root = require('requirefrom')('');\n\n// Methods for calculating metrics for\n// - Number of Primary Shards\n// - Number of Replica Shards\n// - Unassigned Primary Shards\n// - Unassigned Replica Shards\nmodule.exports = function getUnassignedShards(indexShardStats) {\n  const returned = {};\n  let unassignedShards = 0;\n\n  unassignedShards += get(indexShardStats, 'unassigned.primary');\n  unassignedShards += get(indexShardStats, 'unassigned.replica');\n\n  // create an object in the format of a metric so it can be put into listing\n  set(returned, 'metrics.index_unassigned_shards.last', unassignedShards);\n  set(returned, 'metrics.index_unassigned_shards.metric.units', '');\n\n  return returned;\n};\n"
      ]
    },
    "mtime": 1468947861000
  },
  "{\"filename\":\"/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/routes/api/v1/nodes.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": [
        "define-property"
      ]
    },
    "ignored": false,
    "code": "'use strict';\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar _ = require('lodash');\nvar Promise = require('bluebird');\nvar Joi = require('joi');\nvar root = require('requirefrom')('');\nvar getClusterStatus = root('server/lib/get_cluster_status');\nvar getNodeSummary = root('server/lib/get_node_summary');\nvar getMetrics = root('server/lib/get_metrics');\nvar getListing = root('server/lib/get_listing_nodes');\nvar getShardStats = root('server/lib/get_shard_stats');\nvar getShardAllocation = root('server/lib/get_shard_allocation');\nvar calculateIndices = root('server/lib/calculate_indices');\nvar calculateClusterStatus = root('server/lib/calculate_cluster_status');\nvar calculateNodeType = root('server/lib/calculate_node_type');\nvar getLastState = root('server/lib/get_last_state');\nvar getDefaultNodeFromId = root('server/lib/get_default_node_from_id');\nvar lookups = root('server/lib/lookups');\nvar handleError = root('server/lib/handle_error');\n\nmodule.exports = function (server) {\n\n  function getNodeTypeClassLabel(node) {\n    var nodeType = node.master && 'master' || node.type;\n    var typeClassLabel = {\n      nodeType: nodeType,\n      nodeTypeLabel: _.get(lookups, 'nodeTypeLabel[\\'' + nodeType + '\\']'),\n      nodeTypeClass: _.get(lookups, 'nodeTypeClass[\\'' + nodeType + '\\']')\n    };\n    return typeClassLabel;\n  }\n\n  server.route({\n    method: 'POST',\n    path: '/api/marvel/v1/clusters/{clusterUuid}/nodes',\n    config: {\n      validate: {\n        params: Joi.object({\n          clusterUuid: Joi.string().required()\n        }),\n        payload: Joi.object({\n          timeRange: Joi.object({\n            min: Joi.date().required(),\n            max: Joi.date().required()\n          }).required(),\n          listingMetrics: Joi.array().required()\n        })\n      }\n    },\n    handler: function handler(req, reply) {\n      var start = req.payload.timeRange.min;\n      var end = req.payload.timeRange.max;\n      calculateIndices(req, start, end).then(function (indices) {\n        return getLastState(req, indices).then(function (lastState) {\n          return Promise.props({\n            clusterStatus: getClusterStatus(req, indices, lastState),\n            listing: getListing(req, indices),\n            shardStats: getShardStats(req, indices, lastState),\n            clusterState: lastState\n          });\n        });\n      })\n      // Add the index status to each index from the shardStats\n      .then(function (body) {\n        body.nodes = body.listing.nodes;\n        body.rows = body.listing.rows;\n        var clusterState = body.clusterState && body.clusterState.cluster_state || { nodes: {} };\n        body.rows.forEach(function (row) {\n          var resolver = row.name;\n          var shardStats = body.shardStats.nodes[resolver];\n          var node = body.nodes[resolver];\n\n          // Add some extra metrics\n          row.metrics.shard_count = shardStats && shardStats.shardCount || 0;\n          row.metrics.index_count = shardStats && shardStats.indexCount || 0;\n\n          // copy some things over from nodes to row\n          row.resolver = resolver;\n          row.offline = !clusterState.nodes[row.resolver];\n          if (!node) {\n            // workaround for node indexed with legacy agent\n            node = getDefaultNodeFromId(resolver);\n          }\n          node.type = calculateNodeType(node, clusterState);\n          row.node = node;\n          delete row.name;\n\n          // set type for labeling / iconography\n\n          var _getNodeTypeClassLabel = getNodeTypeClassLabel(row.node);\n\n          var nodeType = _getNodeTypeClassLabel.nodeType;\n          var nodeTypeLabel = _getNodeTypeClassLabel.nodeTypeLabel;\n          var nodeTypeClass = _getNodeTypeClassLabel.nodeTypeClass;\n\n          row.node.type = nodeType;\n          row.node.nodeTypeLabel = nodeTypeLabel;\n          row.node.nodeTypeClass = nodeTypeClass;\n        });\n        delete body.listing;\n        delete body.clusterState;\n        return body;\n      })\n      // Send the response\n      .then(calculateClusterStatus).then(reply)['catch'](function (err) {\n        return reply(handleError(err, req));\n      });\n    }\n  });\n\n  server.route({\n    method: 'POST',\n    path: '/api/marvel/v1/clusters/{clusterUuid}/nodes/{resolver}',\n    config: {\n      validate: {\n        params: Joi.object({\n          clusterUuid: Joi.string().required(),\n          resolver: Joi.string().required()\n        }),\n        payload: Joi.object({\n          timeRange: Joi.object({\n            min: Joi.date().required(),\n            max: Joi.date().required()\n          }).required(),\n          metrics: Joi.array().required()\n        })\n      }\n    },\n    handler: function handler(req, reply) {\n      var config = req.server.config();\n      var resolver = req.params.resolver;\n      var start = req.payload.timeRange.min;\n      var end = req.payload.timeRange.max;\n      calculateIndices(req, start, end).then(function (indices) {\n        return getLastState(req, indices).then(function (lastState) {\n          var configResolver = 'source_node.' + config.get('marvel.node_resolver');\n          return Promise.props({\n            clusterStatus: getClusterStatus(req, indices, lastState),\n            nodeSummary: getNodeSummary(req, indices),\n            metrics: getMetrics(req, indices, [{ term: _defineProperty({}, configResolver, resolver) }]),\n            shards: getShardAllocation(req, indices, [{ term: _defineProperty({}, configResolver, resolver) }], lastState),\n            shardStats: getShardStats(req, indices, lastState),\n            nodes: {},\n            clusterState: lastState\n          });\n        });\n      }).then(calculateClusterStatus).then(function (body) {\n        var clusterState = body.clusterState && body.clusterState.cluster_state || { nodes: {} };\n        var nodeDetail = body.nodeSummary.node;\n        if (!nodeDetail) {\n          // workaround for node indexed with legacy agent\n          nodeDetail = getDefaultNodeFromId(resolver);\n        }\n        nodeDetail.type = calculateNodeType(nodeDetail, clusterState);\n        body.nodes[resolver] = nodeDetail;\n\n        // set type for labeling / iconography\n\n        var _getNodeTypeClassLabel2 = getNodeTypeClassLabel(nodeDetail);\n\n        var nodeType = _getNodeTypeClassLabel2.nodeType;\n        var nodeTypeLabel = _getNodeTypeClassLabel2.nodeTypeLabel;\n        var nodeTypeClass = _getNodeTypeClassLabel2.nodeTypeClass;\n\n        nodeDetail.type = nodeType;\n        nodeDetail.nodeTypeLabel = nodeTypeLabel;\n        nodeDetail.nodeTypeClass = nodeTypeClass;\n\n        body.nodeSummary.totalShards = _.get(body, 'shardStats.nodes[\\'' + resolver + '\\'].shardCount');\n        body.nodeSummary.indexCount = _.get(body, 'shardStats.nodes[\\'' + resolver + '\\'].indexCount');\n\n        // combine data from different sources into 1 object\n        body.nodeSummary = _.merge(body.nodeSummary, nodeDetail);\n\n        body.nodeSummary.status = 'Online';\n        // If this node is down\n        if (!clusterState.nodes[body.nodeSummary.resolver]) {\n          body.nodeSummary.documents = 'N/A';\n          body.nodeSummary.dataSize = 'N/A';\n          body.nodeSummary.freeSpace = 'N/A';\n          body.nodeSummary.documents = 'N/A';\n          body.nodeSummary.indexCount = 'N/A';\n          body.nodeSummary.totalShards = 'N/A';\n          body.nodeSummary.status = 'Offline';\n        }\n        delete body.clusterState;\n        return body;\n      }).then(reply)['catch'](function (err) {\n        return reply(handleError(err, req));\n      });\n    }\n  });\n};\n//# sourceMappingURL=data:application/json;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/routes/api/v1/nodes.js"
      ],
      "names": [],
      "mappings": "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",
      "file": "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/routes/api/v1/nodes.js",
      "sourcesContent": [
        "const _ = require('lodash');\nconst Promise = require('bluebird');\nconst Joi = require('joi');\nconst root = require('requirefrom')('');\nconst getClusterStatus = root('server/lib/get_cluster_status');\nconst getNodeSummary = root('server/lib/get_node_summary');\nconst getMetrics = root('server/lib/get_metrics');\nconst getListing = root('server/lib/get_listing_nodes');\nconst getShardStats = root('server/lib/get_shard_stats');\nconst getShardAllocation = root('server/lib/get_shard_allocation');\nconst calculateIndices = root('server/lib/calculate_indices');\nconst calculateClusterStatus = root('server/lib/calculate_cluster_status');\nconst calculateNodeType = root('server/lib/calculate_node_type');\nconst getLastState = root('server/lib/get_last_state');\nconst getDefaultNodeFromId = root('server/lib/get_default_node_from_id');\nconst lookups = root('server/lib/lookups');\nconst handleError = root('server/lib/handle_error');\n\nmodule.exports = (server) => {\n\n  function getNodeTypeClassLabel(node) {\n    const nodeType = (node.master && 'master') || node.type;\n    const typeClassLabel = {\n      nodeType,\n      nodeTypeLabel: _.get(lookups, `nodeTypeLabel['${nodeType}']`),\n      nodeTypeClass: _.get(lookups, `nodeTypeClass['${nodeType}']`)\n    };\n    return typeClassLabel;\n  }\n\n  server.route({\n    method: 'POST',\n    path: '/api/marvel/v1/clusters/{clusterUuid}/nodes',\n    config: {\n      validate: {\n        params: Joi.object({\n          clusterUuid: Joi.string().required()\n        }),\n        payload: Joi.object({\n          timeRange: Joi.object({\n            min: Joi.date().required(),\n            max: Joi.date().required()\n          }).required(),\n          listingMetrics: Joi.array().required()\n        })\n      }\n    },\n    handler: (req, reply) => {\n      const start = req.payload.timeRange.min;\n      const end = req.payload.timeRange.max;\n      calculateIndices(req, start, end)\n      .then(indices => {\n        return getLastState(req, indices)\n        .then(lastState => {\n          return Promise.props({\n            clusterStatus: getClusterStatus(req, indices, lastState),\n            listing: getListing(req, indices),\n            shardStats: getShardStats(req, indices, lastState),\n            clusterState: lastState\n          });\n        });\n      })\n      // Add the index status to each index from the shardStats\n      .then((body) => {\n        body.nodes = body.listing.nodes;\n        body.rows = body.listing.rows;\n        const clusterState = body.clusterState && body.clusterState.cluster_state || { nodes: {} };\n        body.rows.forEach((row) => {\n          const resolver = row.name;\n          const shardStats = body.shardStats.nodes[resolver];\n          let node = body.nodes[resolver];\n\n          // Add some extra metrics\n          row.metrics.shard_count = shardStats && shardStats.shardCount || 0;\n          row.metrics.index_count = shardStats && shardStats.indexCount || 0;\n\n          // copy some things over from nodes to row\n          row.resolver = resolver;\n          row.offline = !clusterState.nodes[row.resolver];\n          if (!node) {\n            // workaround for node indexed with legacy agent\n            node = getDefaultNodeFromId(resolver);\n          }\n          node.type = calculateNodeType(node, clusterState);\n          row.node = node;\n          delete row.name;\n\n          // set type for labeling / iconography\n          const { nodeType, nodeTypeLabel, nodeTypeClass } = getNodeTypeClassLabel(row.node);\n          row.node.type = nodeType;\n          row.node.nodeTypeLabel = nodeTypeLabel;\n          row.node.nodeTypeClass = nodeTypeClass;\n        });\n        delete body.listing;\n        delete body.clusterState;\n        return body;\n      })\n      // Send the response\n      .then(calculateClusterStatus)\n      .then(reply)\n      .catch(err => reply(handleError(err, req)));\n    }\n  });\n\n  server.route({\n    method: 'POST',\n    path: '/api/marvel/v1/clusters/{clusterUuid}/nodes/{resolver}',\n    config: {\n      validate: {\n        params: Joi.object({\n          clusterUuid: Joi.string().required(),\n          resolver: Joi.string().required()\n        }),\n        payload: Joi.object({\n          timeRange: Joi.object({\n            min: Joi.date().required(),\n            max: Joi.date().required()\n          }).required(),\n          metrics: Joi.array().required()\n        })\n      }\n    },\n    handler: (req, reply) => {\n      const config = req.server.config();\n      const resolver = req.params.resolver;\n      const start = req.payload.timeRange.min;\n      const end = req.payload.timeRange.max;\n      calculateIndices(req, start, end)\n      .then(indices => {\n        return getLastState(req, indices)\n        .then(lastState => {\n          const configResolver = `source_node.${config.get('marvel.node_resolver')}`;\n          return Promise.props({\n            clusterStatus: getClusterStatus(req, indices, lastState),\n            nodeSummary: getNodeSummary(req, indices),\n            metrics: getMetrics(req, indices, [{ term: { [configResolver]: resolver } }]),\n            shards: getShardAllocation(req, indices, [{ term: { [configResolver]: resolver } }], lastState),\n            shardStats: getShardStats(req, indices, lastState),\n            nodes: {},\n            clusterState: lastState\n          });\n        });\n      })\n      .then(calculateClusterStatus)\n      .then(function (body) {\n        const clusterState = body.clusterState && body.clusterState.cluster_state || { nodes: {} };\n        let nodeDetail = body.nodeSummary.node;\n        if (!nodeDetail) {\n          // workaround for node indexed with legacy agent\n          nodeDetail = getDefaultNodeFromId(resolver);\n        }\n        nodeDetail.type = calculateNodeType(nodeDetail, clusterState);\n        body.nodes[resolver] = nodeDetail;\n\n        // set type for labeling / iconography\n        const { nodeType, nodeTypeLabel, nodeTypeClass } = getNodeTypeClassLabel(nodeDetail);\n        nodeDetail.type = nodeType;\n        nodeDetail.nodeTypeLabel = nodeTypeLabel;\n        nodeDetail.nodeTypeClass = nodeTypeClass;\n\n        body.nodeSummary.totalShards = _.get(body, `shardStats.nodes['${resolver}'].shardCount`);\n        body.nodeSummary.indexCount = _.get(body, `shardStats.nodes['${resolver}'].indexCount`);\n\n        // combine data from different sources into 1 object\n        body.nodeSummary = _.merge(body.nodeSummary, nodeDetail);\n\n        body.nodeSummary.status = 'Online';\n        // If this node is down\n        if (!clusterState.nodes[body.nodeSummary.resolver]) {\n          body.nodeSummary.documents = 'N/A';\n          body.nodeSummary.dataSize = 'N/A';\n          body.nodeSummary.freeSpace = 'N/A';\n          body.nodeSummary.documents = 'N/A';\n          body.nodeSummary.indexCount = 'N/A';\n          body.nodeSummary.totalShards = 'N/A';\n          body.nodeSummary.status = 'Offline';\n        }\n        delete body.clusterState;\n        return body;\n      })\n      .then(reply)\n      .catch(err => reply(handleError(err, req)));\n    }\n  });\n\n};\n"
      ]
    },
    "mtime": 1468947861000
  },
  "{\"filename\":\"/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/get_node_summary.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": [
        "define-property"
      ]
    },
    "ignored": false,
    "code": "'use strict';\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar _ = require('lodash');\nvar createQuery = require('./create_query.js');\nmodule.exports = function (req, indices) {\n  // Alias callWithRequest so we don't have to use this long ugly string\n  var callWithRequest = req.server.plugins.elasticsearch.callWithRequest;\n\n  // Get the params from the POST body for the request\n  var config = req.server.config();\n  var start = req.payload.timeRange.min;\n  var end = req.payload.timeRange.max;\n  var clusterUuid = req.params.clusterUuid;\n\n  // Build up the Elasticsearch request\n  var params = {\n    index: indices,\n    type: 'node_stats',\n    ignore: [404],\n    body: {\n      size: 1,\n      sort: { timestamp: { order: 'desc' } },\n      query: createQuery({\n        end: end,\n        clusterUuid: clusterUuid,\n        filters: [{\n          term: _defineProperty({}, 'source_node.' + config.get('marvel.node_resolver'), req.params.resolver)\n        }]\n      })\n    }\n  };\n\n  return callWithRequest(req, 'search', params).then(function (resp) {\n    var summary = { documents: 0, dataSize: 0, freeSpace: 0, node: { attributes: {} } };\n    var nodeStats = _.get(resp, 'hits.hits[0]._source.node_stats');\n    if (nodeStats) {\n      summary.documents = _.get(nodeStats, 'indices.docs.count');\n      summary.dataSize = _.get(nodeStats, 'indices.store.size_in_bytes');\n      summary.freeSpace = _.get(nodeStats, 'fs.total.available_in_bytes');\n\n      var nodes = resp.hits.hits.map(function (hit) {\n        return hit._source.source_node;\n      });\n      // using [0] value because query results are sorted desc per timestamp\n      summary.node = {\n        resolver: nodes[0][config.get('marvel.node_resolver')],\n        node_ids: nodes.map(function (node) {\n          return node.uuid;\n        }),\n        name: nodes[0].name,\n        transport_address: nodes[0].transport_address,\n        ip: nodes[0].ip,\n        attributes: nodes[0].attributes\n      };\n    }\n    return summary;\n  });\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9UaGVvL0Rlc2t0b3AvTmVidWxhVGVtcC9OZWJ1bGEvZWxhc3RpY3NlYXJjaC9pbnN0YWxsZWRQbHVnaW5zL21hcnZlbC9zZXJ2ZXIvbGliL2dldF9ub2RlX3N1bW1hcnkuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLElBQU0sQ0FBQyxHQUFHLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQztBQUM1QixJQUFNLFdBQVcsR0FBRyxPQUFPLENBQUMsbUJBQW1CLENBQUMsQ0FBQztBQUNqRCxNQUFNLENBQUMsT0FBTyxHQUFHLFVBQUMsR0FBRyxFQUFFLE9BQU8sRUFBSzs7QUFFakMsTUFBTSxlQUFlLEdBQUcsR0FBRyxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDLGVBQWUsQ0FBQzs7O0FBR3pFLE1BQU0sTUFBTSxHQUFHLEdBQUcsQ0FBQyxNQUFNLENBQUMsTUFBTSxFQUFFLENBQUM7QUFDbkMsTUFBTSxLQUFLLEdBQUcsR0FBRyxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDO0FBQ3hDLE1BQU0sR0FBRyxHQUFHLEdBQUcsQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQztBQUN0QyxNQUFNLFdBQVcsR0FBRyxHQUFHLENBQUMsTUFBTSxDQUFDLFdBQVcsQ0FBQzs7O0FBRzNDLE1BQU0sTUFBTSxHQUFHO0FBQ2IsU0FBSyxFQUFFLE9BQU87QUFDZCxRQUFJLEVBQUUsWUFBWTtBQUNsQixVQUFNLEVBQUUsQ0FBQyxHQUFHLENBQUM7QUFDYixRQUFJLEVBQUU7QUFDSixVQUFJLEVBQUUsQ0FBQztBQUNQLFVBQUksRUFBRSxFQUFFLFNBQVMsRUFBRSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsRUFBRTtBQUN0QyxXQUFLLEVBQUUsV0FBVyxDQUFDO0FBQ2pCLFdBQUcsRUFBRSxHQUFHO0FBQ1IsbUJBQVcsRUFBRSxXQUFXO0FBQ3hCLGVBQU8sRUFBRSxDQUFDO0FBQ1IsY0FBSSx1Q0FBb0IsTUFBTSxDQUFDLEdBQUcsQ0FBQyxzQkFBc0IsQ0FBQyxFQUFLLEdBQUcsQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFFO1NBQ3JGLENBQUM7T0FDSCxDQUFDO0tBQ0g7R0FDRixDQUFDOztBQUVGLFNBQU8sZUFBZSxDQUFDLEdBQUcsRUFBRSxRQUFRLEVBQUUsTUFBTSxDQUFDLENBQzVDLElBQUksQ0FBQyxVQUFDLElBQUksRUFBSztBQUNkLFFBQU0sT0FBTyxHQUFHLEVBQUUsU0FBUyxFQUFFLENBQUMsRUFBRSxRQUFRLEVBQUUsQ0FBQyxFQUFFLFNBQVMsRUFBRSxDQUFDLEVBQUUsSUFBSSxFQUFFLEVBQUUsVUFBVSxFQUFFLEVBQUUsRUFBRSxFQUFFLENBQUM7QUFDdEYsUUFBTSxTQUFTLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxJQUFJLEVBQUUsaUNBQWlDLENBQUMsQ0FBQztBQUNqRSxRQUFJLFNBQVMsRUFBRTtBQUNiLGFBQU8sQ0FBQyxTQUFTLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxTQUFTLEVBQUUsb0JBQW9CLENBQUMsQ0FBQztBQUMzRCxhQUFPLENBQUMsUUFBUSxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsU0FBUyxFQUFFLDZCQUE2QixDQUFDLENBQUM7QUFDbkUsYUFBTyxDQUFDLFNBQVMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLFNBQVMsRUFBRSw2QkFBNkIsQ0FBQyxDQUFDOztBQUVwRSxVQUFNLEtBQUssR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsVUFBQSxHQUFHO2VBQUksR0FBRyxDQUFDLE9BQU8sQ0FBQyxXQUFXO09BQUEsQ0FBQyxDQUFDOztBQUVqRSxhQUFPLENBQUMsSUFBSSxHQUFHO0FBQ2IsZ0JBQVEsRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxzQkFBc0IsQ0FBQyxDQUFDO0FBQ3RELGdCQUFRLEVBQUUsS0FBSyxDQUFDLEdBQUcsQ0FBQyxVQUFBLElBQUk7aUJBQUksSUFBSSxDQUFDLElBQUk7U0FBQSxDQUFDO0FBQ3RDLFlBQUksRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSTtBQUNuQix5QkFBaUIsRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsaUJBQWlCO0FBQzdDLFVBQUUsRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRTtBQUNmLGtCQUFVLEVBQUUsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLFVBQVU7T0FDaEMsQ0FBQztLQUNIO0FBQ0QsV0FBTyxPQUFPLENBQUM7R0FDaEIsQ0FBQyxDQUFDO0NBQ0osQ0FBQyIsImZpbGUiOiIvVXNlcnMvVGhlby9EZXNrdG9wL05lYnVsYVRlbXAvTmVidWxhL2VsYXN0aWNzZWFyY2gvaW5zdGFsbGVkUGx1Z2lucy9tYXJ2ZWwvc2VydmVyL2xpYi9nZXRfbm9kZV9zdW1tYXJ5LmpzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgXyA9IHJlcXVpcmUoJ2xvZGFzaCcpO1xuY29uc3QgY3JlYXRlUXVlcnkgPSByZXF1aXJlKCcuL2NyZWF0ZV9xdWVyeS5qcycpO1xubW9kdWxlLmV4cG9ydHMgPSAocmVxLCBpbmRpY2VzKSA9PiB7XG4gIC8vIEFsaWFzIGNhbGxXaXRoUmVxdWVzdCBzbyB3ZSBkb24ndCBoYXZlIHRvIHVzZSB0aGlzIGxvbmcgdWdseSBzdHJpbmdcbiAgY29uc3QgY2FsbFdpdGhSZXF1ZXN0ID0gcmVxLnNlcnZlci5wbHVnaW5zLmVsYXN0aWNzZWFyY2guY2FsbFdpdGhSZXF1ZXN0O1xuXG4gIC8vIEdldCB0aGUgcGFyYW1zIGZyb20gdGhlIFBPU1QgYm9keSBmb3IgdGhlIHJlcXVlc3RcbiAgY29uc3QgY29uZmlnID0gcmVxLnNlcnZlci5jb25maWcoKTtcbiAgY29uc3Qgc3RhcnQgPSByZXEucGF5bG9hZC50aW1lUmFuZ2UubWluO1xuICBjb25zdCBlbmQgPSByZXEucGF5bG9hZC50aW1lUmFuZ2UubWF4O1xuICBjb25zdCBjbHVzdGVyVXVpZCA9IHJlcS5wYXJhbXMuY2x1c3RlclV1aWQ7XG5cbiAgLy8gQnVpbGQgdXAgdGhlIEVsYXN0aWNzZWFyY2ggcmVxdWVzdFxuICBjb25zdCBwYXJhbXMgPSB7XG4gICAgaW5kZXg6IGluZGljZXMsXG4gICAgdHlwZTogJ25vZGVfc3RhdHMnLFxuICAgIGlnbm9yZTogWzQwNF0sXG4gICAgYm9keToge1xuICAgICAgc2l6ZTogMSxcbiAgICAgIHNvcnQ6IHsgdGltZXN0YW1wOiB7IG9yZGVyOiAnZGVzYycgfSB9LFxuICAgICAgcXVlcnk6IGNyZWF0ZVF1ZXJ5KHtcbiAgICAgICAgZW5kOiBlbmQsXG4gICAgICAgIGNsdXN0ZXJVdWlkOiBjbHVzdGVyVXVpZCxcbiAgICAgICAgZmlsdGVyczogW3tcbiAgICAgICAgICB0ZXJtOiB7IFtgc291cmNlX25vZGUuJHtjb25maWcuZ2V0KCdtYXJ2ZWwubm9kZV9yZXNvbHZlcicpfWBdOiByZXEucGFyYW1zLnJlc29sdmVyIH1cbiAgICAgICAgfV1cbiAgICAgIH0pXG4gICAgfVxuICB9O1xuXG4gIHJldHVybiBjYWxsV2l0aFJlcXVlc3QocmVxLCAnc2VhcmNoJywgcGFyYW1zKVxuICAudGhlbigocmVzcCkgPT4ge1xuICAgIGNvbnN0IHN1bW1hcnkgPSB7IGRvY3VtZW50czogMCwgZGF0YVNpemU6IDAsIGZyZWVTcGFjZTogMCwgbm9kZTogeyBhdHRyaWJ1dGVzOiB7fSB9IH07XG4gICAgY29uc3Qgbm9kZVN0YXRzID0gXy5nZXQocmVzcCwgJ2hpdHMuaGl0c1swXS5fc291cmNlLm5vZGVfc3RhdHMnKTtcbiAgICBpZiAobm9kZVN0YXRzKSB7XG4gICAgICBzdW1tYXJ5LmRvY3VtZW50cyA9IF8uZ2V0KG5vZGVTdGF0cywgJ2luZGljZXMuZG9jcy5jb3VudCcpO1xuICAgICAgc3VtbWFyeS5kYXRhU2l6ZSA9IF8uZ2V0KG5vZGVTdGF0cywgJ2luZGljZXMuc3RvcmUuc2l6ZV9pbl9ieXRlcycpO1xuICAgICAgc3VtbWFyeS5mcmVlU3BhY2UgPSBfLmdldChub2RlU3RhdHMsICdmcy50b3RhbC5hdmFpbGFibGVfaW5fYnl0ZXMnKTtcblxuICAgICAgY29uc3Qgbm9kZXMgPSByZXNwLmhpdHMuaGl0cy5tYXAoaGl0ID0+IGhpdC5fc291cmNlLnNvdXJjZV9ub2RlKTtcbiAgICAgIC8vIHVzaW5nIFswXSB2YWx1ZSBiZWNhdXNlIHF1ZXJ5IHJlc3VsdHMgYXJlIHNvcnRlZCBkZXNjIHBlciB0aW1lc3RhbXBcbiAgICAgIHN1bW1hcnkubm9kZSA9IHtcbiAgICAgICAgcmVzb2x2ZXI6IG5vZGVzWzBdW2NvbmZpZy5nZXQoJ21hcnZlbC5ub2RlX3Jlc29sdmVyJyldLFxuICAgICAgICBub2RlX2lkczogbm9kZXMubWFwKG5vZGUgPT4gbm9kZS51dWlkKSxcbiAgICAgICAgbmFtZTogbm9kZXNbMF0ubmFtZSxcbiAgICAgICAgdHJhbnNwb3J0X2FkZHJlc3M6IG5vZGVzWzBdLnRyYW5zcG9ydF9hZGRyZXNzLFxuICAgICAgICBpcDogbm9kZXNbMF0uaXAsXG4gICAgICAgIGF0dHJpYnV0ZXM6IG5vZGVzWzBdLmF0dHJpYnV0ZXNcbiAgICAgIH07XG4gICAgfVxuICAgIHJldHVybiBzdW1tYXJ5O1xuICB9KTtcbn07XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/get_node_summary.js"
      ],
      "names": [],
      "mappings": ";;;;AAAA,IAAM,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC5B,IAAM,WAAW,GAAG,OAAO,CAAC,mBAAmB,CAAC,CAAC;AACjD,MAAM,CAAC,OAAO,GAAG,UAAC,GAAG,EAAE,OAAO,EAAK;;AAEjC,MAAM,eAAe,GAAG,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,eAAe,CAAC;;;AAGzE,MAAM,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;AACnC,MAAM,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC;AACxC,MAAM,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC;AACtC,MAAM,WAAW,GAAG,GAAG,CAAC,MAAM,CAAC,WAAW,CAAC;;;AAG3C,MAAM,MAAM,GAAG;AACb,SAAK,EAAE,OAAO;AACd,QAAI,EAAE,YAAY;AAClB,UAAM,EAAE,CAAC,GAAG,CAAC;AACb,QAAI,EAAE;AACJ,UAAI,EAAE,CAAC;AACP,UAAI,EAAE,EAAE,SAAS,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,EAAE;AACtC,WAAK,EAAE,WAAW,CAAC;AACjB,WAAG,EAAE,GAAG;AACR,mBAAW,EAAE,WAAW;AACxB,eAAO,EAAE,CAAC;AACR,cAAI,uCAAoB,MAAM,CAAC,GAAG,CAAC,sBAAsB,CAAC,EAAK,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAE;SACrF,CAAC;OACH,CAAC;KACH;GACF,CAAC;;AAEF,SAAO,eAAe,CAAC,GAAG,EAAE,QAAQ,EAAE,MAAM,CAAC,CAC5C,IAAI,CAAC,UAAC,IAAI,EAAK;AACd,QAAM,OAAO,GAAG,EAAE,SAAS,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,EAAE,UAAU,EAAE,EAAE,EAAE,EAAE,CAAC;AACtF,QAAM,SAAS,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,iCAAiC,CAAC,CAAC;AACjE,QAAI,SAAS,EAAE;AACb,aAAO,CAAC,SAAS,GAAG,CAAC,CAAC,GAAG,CAAC,SAAS,EAAE,oBAAoB,CAAC,CAAC;AAC3D,aAAO,CAAC,QAAQ,GAAG,CAAC,CAAC,GAAG,CAAC,SAAS,EAAE,6BAA6B,CAAC,CAAC;AACnE,aAAO,CAAC,SAAS,GAAG,CAAC,CAAC,GAAG,CAAC,SAAS,EAAE,6BAA6B,CAAC,CAAC;;AAEpE,UAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAA,GAAG;eAAI,GAAG,CAAC,OAAO,CAAC,WAAW;OAAA,CAAC,CAAC;;AAEjE,aAAO,CAAC,IAAI,GAAG;AACb,gBAAQ,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;AACtD,gBAAQ,EAAE,KAAK,CAAC,GAAG,CAAC,UAAA,IAAI;iBAAI,IAAI,CAAC,IAAI;SAAA,CAAC;AACtC,YAAI,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI;AACnB,yBAAiB,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,iBAAiB;AAC7C,UAAE,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;AACf,kBAAU,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU;OAChC,CAAC;KACH;AACD,WAAO,OAAO,CAAC;GAChB,CAAC,CAAC;CACJ,CAAC",
      "file": "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/get_node_summary.js",
      "sourcesContent": [
        "const _ = require('lodash');\nconst createQuery = require('./create_query.js');\nmodule.exports = (req, indices) => {\n  // Alias callWithRequest so we don't have to use this long ugly string\n  const callWithRequest = req.server.plugins.elasticsearch.callWithRequest;\n\n  // Get the params from the POST body for the request\n  const config = req.server.config();\n  const start = req.payload.timeRange.min;\n  const end = req.payload.timeRange.max;\n  const clusterUuid = req.params.clusterUuid;\n\n  // Build up the Elasticsearch request\n  const params = {\n    index: indices,\n    type: 'node_stats',\n    ignore: [404],\n    body: {\n      size: 1,\n      sort: { timestamp: { order: 'desc' } },\n      query: createQuery({\n        end: end,\n        clusterUuid: clusterUuid,\n        filters: [{\n          term: { [`source_node.${config.get('marvel.node_resolver')}`]: req.params.resolver }\n        }]\n      })\n    }\n  };\n\n  return callWithRequest(req, 'search', params)\n  .then((resp) => {\n    const summary = { documents: 0, dataSize: 0, freeSpace: 0, node: { attributes: {} } };\n    const nodeStats = _.get(resp, 'hits.hits[0]._source.node_stats');\n    if (nodeStats) {\n      summary.documents = _.get(nodeStats, 'indices.docs.count');\n      summary.dataSize = _.get(nodeStats, 'indices.store.size_in_bytes');\n      summary.freeSpace = _.get(nodeStats, 'fs.total.available_in_bytes');\n\n      const nodes = resp.hits.hits.map(hit => hit._source.source_node);\n      // using [0] value because query results are sorted desc per timestamp\n      summary.node = {\n        resolver: nodes[0][config.get('marvel.node_resolver')],\n        node_ids: nodes.map(node => node.uuid),\n        name: nodes[0].name,\n        transport_address: nodes[0].transport_address,\n        ip: nodes[0].ip,\n        attributes: nodes[0].attributes\n      };\n    }\n    return summary;\n  });\n};\n"
      ]
    },
    "mtime": 1468947861000
  },
  "{\"filename\":\"/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/get_listing_nodes.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "/* Run an aggregation on node_stats to get stat data for the selected time\n * range for all the active nodes. The stat data is built up with passed-in\n * options that are given by the UI client as an array\n * (req.payload.listingMetrics). Every option is a key to a configuration value\n * in public/lib/metrics. Those options are used to build up a query with a\n * bunch of date histograms.\n *\n * After the result comes back from Elasticsearch, we use it to generate:\n *\n * - \"nodes\" object - for every node, it has a Node Name, Node Transport\n *   Address, the Data and Master Attributes for each node, and build up an\n *   array of Node IDs for each node (there'll be multiple IDs if the node was\n *   restarted within the time range). The Node IDs are used only for\n *   determining if the node is a Master node.\n *\n * - \"rows\" object - all the date histogram data is passed to\n *   mapListingResponse to transform it into X/Y coordinates for charting. This\n *   method is shared by the get_listing_indices lib.\n *\n * All this data is used by the UI to render most of the table on the Nodes\n * page. we do need the X/Y coordinates to calculate the slope of the metric.\n * If we calculate the slope is going up, we just have an up arrow to say it's\n * going up, and likewise if the metric is going down, we have a down arrow\n */\n\n'use strict';\n\nvar _ = require('lodash');\nvar moment = require('moment');\nvar createQuery = require('./create_query.js');\nvar calcAuto = require('./calculate_auto');\nvar root = require('requirefrom')('');\nvar metrics = root('public/lib/metrics');\nvar nodeAggVals = root('server/lib/node_agg_vals');\nvar mapListingResponse = require('./map_listing_response');\n\nmodule.exports = function (req, indices) {\n  var config = req.server.config();\n  var callWithRequest = req.server.plugins.elasticsearch.callWithRequest;\n  var listingMetrics = req.payload.listingMetrics || [];\n  var start = moment.utc(req.payload.timeRange.min).valueOf();\n  var orgStart = start;\n  var end = moment.utc(req.payload.timeRange.max).valueOf();\n  var clusterUuid = req.params.clusterUuid;\n  var maxBucketSize = config.get('marvel.max_bucket_size');\n  var minIntervalSeconds = config.get('marvel.min_interval_seconds');\n\n  var params = {\n    index: indices,\n    type: 'node_stats',\n    searchType: 'count',\n    ignoreUnavailable: true,\n    ignore: [404],\n    body: {\n      query: createQuery({ start: start, end: end, clusterUuid: clusterUuid }),\n      aggs: {}\n    }\n  };\n\n  var max = end;\n  var duration = moment.duration(max - orgStart, 'ms');\n  var bucketSize = Math.max(minIntervalSeconds, calcAuto.near(100, duration).asSeconds());\n  var min = start;\n  var aggSize = 10000;\n\n  var aggs = {\n    items: {\n      terms: {\n        field: 'source_node.' + config.get('marvel.node_resolver'), // transport_address or node name\n        size: maxBucketSize\n      },\n      aggs: {\n        node_name: {\n          terms: { field: 'source_node.name', size: aggSize },\n          aggs: { max_timestamp: { max: { field: 'timestamp' } } }\n        },\n        node_transport_address: {\n          terms: { field: 'source_node.transport_address', size: aggSize },\n          aggs: { max_timestamp: { max: { field: 'timestamp' } } }\n        },\n        node_data_attributes: { terms: { field: 'source_node.attributes.data', size: aggSize } },\n        node_master_attributes: { terms: { field: 'source_node.attributes.master', size: aggSize } },\n        // for doing a join on the cluster state to determine if node is current master\n        node_ids: { terms: { field: 'source_node.uuid', size: aggSize } }\n      }\n    }\n  };\n\n  listingMetrics.forEach(function (id) {\n    var metric = metrics[id];\n    var metricAgg = null;\n    if (!metric) return;\n    if (!metric.aggs) {\n      metricAgg = {\n        metric: {},\n        metric_deriv: {\n          derivative: { buckets_path: 'metric', unit: 'second' }\n        }\n      };\n      metricAgg.metric[metric.metricAgg] = {\n        field: metric.field\n      };\n    }\n    aggs.items.aggs[id] = {\n      date_histogram: {\n        field: 'timestamp',\n        min_doc_count: 0,\n        interval: bucketSize + 's',\n        extended_bounds: { min: min, max: max }\n      },\n      aggs: metric.aggs || metricAgg\n    };\n  });\n\n  params.body.aggs = aggs;\n\n  return callWithRequest(req, 'search', params).then(function (resp) {\n    if (!resp.hits.total) return { nodes: {}, rows: [] };\n    var buckets = resp.aggregations.items.buckets;\n    return {\n      // for node names\n      nodes: buckets.reduce(function (prev, curr) {\n        prev[curr.key] = {\n          name: nodeAggVals.getLatestAggKey(curr.node_name.buckets),\n          transport_address: nodeAggVals.getLatestAggKey(curr.node_transport_address.buckets),\n          node_ids: curr.node_ids.buckets.map(function (bucket) {\n            return bucket.key;\n          }), // needed in calculate_node_type to check if current master node\n          attributes: {\n            data: nodeAggVals.getNodeAttribute(curr.node_data_attributes.buckets),\n            master: nodeAggVals.getNodeAttribute(curr.node_master_attributes.buckets)\n          }\n        };\n        return prev;\n      }, {}),\n      // for listing metrics\n      rows: mapListingResponse({\n        type: 'nodes',\n        items: buckets,\n        listingMetrics: listingMetrics,\n        min: min,\n        max: max,\n        bucketSize: bucketSize\n      })\n    };\n  });\n};\n//# sourceMappingURL=data:application/json;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/get_listing_nodes.js"
      ],
      "names": [],
      "mappings": "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",
      "file": "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/get_listing_nodes.js",
      "sourcesContent": [
        "/* Run an aggregation on node_stats to get stat data for the selected time\n * range for all the active nodes. The stat data is built up with passed-in\n * options that are given by the UI client as an array\n * (req.payload.listingMetrics). Every option is a key to a configuration value\n * in public/lib/metrics. Those options are used to build up a query with a\n * bunch of date histograms.\n *\n * After the result comes back from Elasticsearch, we use it to generate:\n *\n * - \"nodes\" object - for every node, it has a Node Name, Node Transport\n *   Address, the Data and Master Attributes for each node, and build up an\n *   array of Node IDs for each node (there'll be multiple IDs if the node was\n *   restarted within the time range). The Node IDs are used only for\n *   determining if the node is a Master node.\n *\n * - \"rows\" object - all the date histogram data is passed to\n *   mapListingResponse to transform it into X/Y coordinates for charting. This\n *   method is shared by the get_listing_indices lib.\n *\n * All this data is used by the UI to render most of the table on the Nodes\n * page. we do need the X/Y coordinates to calculate the slope of the metric.\n * If we calculate the slope is going up, we just have an up arrow to say it's\n * going up, and likewise if the metric is going down, we have a down arrow\n */\n\nconst _ = require('lodash');\nconst moment = require('moment');\nconst createQuery = require('./create_query.js');\nconst calcAuto = require('./calculate_auto');\nconst root = require('requirefrom')('');\nconst metrics = root('public/lib/metrics');\nconst nodeAggVals = root('server/lib/node_agg_vals');\nconst mapListingResponse = require('./map_listing_response');\n\nmodule.exports = (req, indices) => {\n  const config = req.server.config();\n  const callWithRequest = req.server.plugins.elasticsearch.callWithRequest;\n  const listingMetrics = req.payload.listingMetrics || [];\n  let start = moment.utc(req.payload.timeRange.min).valueOf();\n  const orgStart = start;\n  const end = moment.utc(req.payload.timeRange.max).valueOf();\n  const clusterUuid = req.params.clusterUuid;\n  const maxBucketSize = config.get('marvel.max_bucket_size');\n  const minIntervalSeconds = config.get('marvel.min_interval_seconds');\n\n  const params = {\n    index: indices,\n    type: 'node_stats',\n    searchType: 'count',\n    ignoreUnavailable: true,\n    ignore: [404],\n    body: {\n      query: createQuery({ start, end, clusterUuid }),\n      aggs: {}\n    }\n  };\n\n  const max = end;\n  const duration = moment.duration(max - orgStart, 'ms');\n  const bucketSize = Math.max(minIntervalSeconds, calcAuto.near(100, duration).asSeconds());\n  const min = start;\n  const aggSize = 10000;\n\n  var aggs = {\n    items: {\n      terms: {\n        field: `source_node.${config.get('marvel.node_resolver')}`, // transport_address or node name\n        size: maxBucketSize\n      },\n      aggs: {\n        node_name: {\n          terms: { field: 'source_node.name', size: aggSize },\n          aggs: { max_timestamp: { max: { field: 'timestamp' } } }\n        },\n        node_transport_address: {\n          terms: { field: 'source_node.transport_address', size: aggSize },\n          aggs: { max_timestamp: { max: { field: 'timestamp' } } }\n        },\n        node_data_attributes: { terms: { field: 'source_node.attributes.data', size: aggSize } },\n        node_master_attributes: { terms: { field: 'source_node.attributes.master', size: aggSize } },\n        // for doing a join on the cluster state to determine if node is current master\n        node_ids: { terms: { field: 'source_node.uuid', size: aggSize } }\n      }\n    }\n  };\n\n  listingMetrics.forEach((id) => {\n    const metric = metrics[id];\n    let metricAgg = null;\n    if (!metric) return;\n    if (!metric.aggs) {\n      metricAgg = {\n        metric: {},\n        metric_deriv: {\n          derivative: { buckets_path: 'metric', unit: 'second' }\n        }\n      };\n      metricAgg.metric[metric.metricAgg] = {\n        field: metric.field\n      };\n    }\n    aggs.items.aggs[id] = {\n      date_histogram: {\n        field: 'timestamp',\n        min_doc_count: 0,\n        interval: bucketSize + 's',\n        extended_bounds: { min, max }\n      },\n      aggs: metric.aggs || metricAgg\n    };\n  });\n\n  params.body.aggs = aggs;\n\n  return callWithRequest(req, 'search', params)\n  .then((resp) => {\n    if (!resp.hits.total) return { nodes: {}, rows: []};\n    const buckets = resp.aggregations.items.buckets;\n    return {\n      // for node names\n      nodes: buckets.reduce(function (prev, curr) {\n        prev[curr.key] = {\n          name: nodeAggVals.getLatestAggKey(curr.node_name.buckets),\n          transport_address: nodeAggVals.getLatestAggKey(curr.node_transport_address.buckets),\n          node_ids: curr.node_ids.buckets.map(bucket => bucket.key), // needed in calculate_node_type to check if current master node\n          attributes: {\n            data: nodeAggVals.getNodeAttribute(curr.node_data_attributes.buckets),\n            master: nodeAggVals.getNodeAttribute(curr.node_master_attributes.buckets)\n          }\n        };\n        return prev;\n      }, {}),\n      // for listing metrics\n      rows: mapListingResponse({\n        type: 'nodes',\n        items: buckets,\n        listingMetrics,\n        min,\n        max,\n        bucketSize\n      })\n    };\n  });\n\n};\n"
      ]
    },
    "mtime": 1468947861000
  },
  "{\"filename\":\"/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/get_default_node_from_id.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "/*\n * LEGACY: we need to handle legacy data with some workaround values\n * If node information can't be retrieved, we call this function\n * that provides some usable defaults\n */\n'use strict';\n\nmodule.exports = function getDefaultNodeFromId(nodeId) {\n  return {\n    id: nodeId,\n    name: nodeId,\n    transport_address: '',\n    master: false,\n    type: 'node',\n    attributes: {}\n  };\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9UaGVvL0Rlc2t0b3AvTmVidWxhVGVtcC9OZWJ1bGEvZWxhc3RpY3NlYXJjaC9pbnN0YWxsZWRQbHVnaW5zL21hcnZlbC9zZXJ2ZXIvbGliL2dldF9kZWZhdWx0X25vZGVfZnJvbV9pZC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBS0EsTUFBTSxDQUFDLE9BQU8sR0FBRyxTQUFTLG9CQUFvQixDQUFDLE1BQU0sRUFBRTtBQUNyRCxTQUFPO0FBQ0wsTUFBRSxFQUFFLE1BQU07QUFDVixRQUFJLEVBQUUsTUFBTTtBQUNaLHFCQUFpQixFQUFFLEVBQUU7QUFDckIsVUFBTSxFQUFFLEtBQUs7QUFDYixRQUFJLEVBQUUsTUFBTTtBQUNaLGNBQVUsRUFBRSxFQUFFO0dBQ2YsQ0FBQztDQUNILENBQUMiLCJmaWxlIjoiL1VzZXJzL1RoZW8vRGVza3RvcC9OZWJ1bGFUZW1wL05lYnVsYS9lbGFzdGljc2VhcmNoL2luc3RhbGxlZFBsdWdpbnMvbWFydmVsL3NlcnZlci9saWIvZ2V0X2RlZmF1bHRfbm9kZV9mcm9tX2lkLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIExFR0FDWTogd2UgbmVlZCB0byBoYW5kbGUgbGVnYWN5IGRhdGEgd2l0aCBzb21lIHdvcmthcm91bmQgdmFsdWVzXG4gKiBJZiBub2RlIGluZm9ybWF0aW9uIGNhbid0IGJlIHJldHJpZXZlZCwgd2UgY2FsbCB0aGlzIGZ1bmN0aW9uXG4gKiB0aGF0IHByb3ZpZGVzIHNvbWUgdXNhYmxlIGRlZmF1bHRzXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gZ2V0RGVmYXVsdE5vZGVGcm9tSWQobm9kZUlkKSB7XG4gIHJldHVybiB7XG4gICAgaWQ6IG5vZGVJZCxcbiAgICBuYW1lOiBub2RlSWQsXG4gICAgdHJhbnNwb3J0X2FkZHJlc3M6ICcnLFxuICAgIG1hc3RlcjogZmFsc2UsXG4gICAgdHlwZTogJ25vZGUnLFxuICAgIGF0dHJpYnV0ZXM6IHt9XG4gIH07XG59O1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/get_default_node_from_id.js"
      ],
      "names": [],
      "mappings": ";;;;;;;AAKA,MAAM,CAAC,OAAO,GAAG,SAAS,oBAAoB,CAAC,MAAM,EAAE;AACrD,SAAO;AACL,MAAE,EAAE,MAAM;AACV,QAAI,EAAE,MAAM;AACZ,qBAAiB,EAAE,EAAE;AACrB,UAAM,EAAE,KAAK;AACb,QAAI,EAAE,MAAM;AACZ,cAAU,EAAE,EAAE;GACf,CAAC;CACH,CAAC",
      "file": "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/get_default_node_from_id.js",
      "sourcesContent": [
        "/*\n * LEGACY: we need to handle legacy data with some workaround values\n * If node information can't be retrieved, we call this function\n * that provides some usable defaults\n */\nmodule.exports = function getDefaultNodeFromId(nodeId) {\n  return {\n    id: nodeId,\n    name: nodeId,\n    transport_address: '',\n    master: false,\n    type: 'node',\n    attributes: {}\n  };\n};\n"
      ]
    },
    "mtime": 1468947861000
  },
  "{\"filename\":\"/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/lookups.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "'use strict';\n\nmodule.exports = {\n  nodeTypeClass: {\n    invalid: 'fa-exclamation-triangle',\n    node: 'fa-server',\n    master: 'fa-star',\n    master_only: 'fa-star-o',\n    data: 'fa-database',\n    client: 'fa-binoculars'\n  },\n\n  nodeTypeLabel: {\n    invalid: 'Invalid Node',\n    node: 'Node',\n    master: 'Master Node',\n    master_only: 'Master Only Node',\n    data: 'Data Only Node',\n    client: 'Client Node'\n  }\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9UaGVvL0Rlc2t0b3AvTmVidWxhVGVtcC9OZWJ1bGEvZWxhc3RpY3NlYXJjaC9pbnN0YWxsZWRQbHVnaW5zL21hcnZlbC9zZXJ2ZXIvbGliL2xvb2t1cHMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxNQUFNLENBQUMsT0FBTyxHQUFHO0FBQ2YsZUFBYSxFQUFFO0FBQ2IsV0FBTyxFQUFFLHlCQUF5QjtBQUNsQyxRQUFJLEVBQUUsV0FBVztBQUNqQixVQUFNLEVBQUUsU0FBUztBQUNqQixlQUFXLEVBQUUsV0FBVztBQUN4QixRQUFJLEVBQUUsYUFBYTtBQUNuQixVQUFNLEVBQUUsZUFBZTtHQUN4Qjs7QUFFRCxlQUFhLEVBQUU7QUFDYixXQUFPLEVBQUUsY0FBYztBQUN2QixRQUFJLEVBQUUsTUFBTTtBQUNaLFVBQU0sRUFBRSxhQUFhO0FBQ3JCLGVBQVcsRUFBRSxrQkFBa0I7QUFDL0IsUUFBSSxFQUFFLGdCQUFnQjtBQUN0QixVQUFNLEVBQUUsYUFBYTtHQUN0QjtDQUNGLENBQUMiLCJmaWxlIjoiL1VzZXJzL1RoZW8vRGVza3RvcC9OZWJ1bGFUZW1wL05lYnVsYS9lbGFzdGljc2VhcmNoL2luc3RhbGxlZFBsdWdpbnMvbWFydmVsL3NlcnZlci9saWIvbG9va3Vwcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0ge1xuICBub2RlVHlwZUNsYXNzOiB7XG4gICAgaW52YWxpZDogJ2ZhLWV4Y2xhbWF0aW9uLXRyaWFuZ2xlJyxcbiAgICBub2RlOiAnZmEtc2VydmVyJyxcbiAgICBtYXN0ZXI6ICdmYS1zdGFyJyxcbiAgICBtYXN0ZXJfb25seTogJ2ZhLXN0YXItbycsXG4gICAgZGF0YTogJ2ZhLWRhdGFiYXNlJyxcbiAgICBjbGllbnQ6ICdmYS1iaW5vY3VsYXJzJ1xuICB9LFxuXG4gIG5vZGVUeXBlTGFiZWw6IHtcbiAgICBpbnZhbGlkOiAnSW52YWxpZCBOb2RlJyxcbiAgICBub2RlOiAnTm9kZScsXG4gICAgbWFzdGVyOiAnTWFzdGVyIE5vZGUnLFxuICAgIG1hc3Rlcl9vbmx5OiAnTWFzdGVyIE9ubHkgTm9kZScsXG4gICAgZGF0YTogJ0RhdGEgT25seSBOb2RlJyxcbiAgICBjbGllbnQ6ICdDbGllbnQgTm9kZSdcbiAgfVxufTtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/lookups.js"
      ],
      "names": [],
      "mappings": ";;AAAA,MAAM,CAAC,OAAO,GAAG;AACf,eAAa,EAAE;AACb,WAAO,EAAE,yBAAyB;AAClC,QAAI,EAAE,WAAW;AACjB,UAAM,EAAE,SAAS;AACjB,eAAW,EAAE,WAAW;AACxB,QAAI,EAAE,aAAa;AACnB,UAAM,EAAE,eAAe;GACxB;;AAED,eAAa,EAAE;AACb,WAAO,EAAE,cAAc;AACvB,QAAI,EAAE,MAAM;AACZ,UAAM,EAAE,aAAa;AACrB,eAAW,EAAE,kBAAkB;AAC/B,QAAI,EAAE,gBAAgB;AACtB,UAAM,EAAE,aAAa;GACtB;CACF,CAAC",
      "file": "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/lookups.js",
      "sourcesContent": [
        "module.exports = {\n  nodeTypeClass: {\n    invalid: 'fa-exclamation-triangle',\n    node: 'fa-server',\n    master: 'fa-star',\n    master_only: 'fa-star-o',\n    data: 'fa-database',\n    client: 'fa-binoculars'\n  },\n\n  nodeTypeLabel: {\n    invalid: 'Invalid Node',\n    node: 'Node',\n    master: 'Master Node',\n    master_only: 'Master Only Node',\n    data: 'Data Only Node',\n    client: 'Client Node'\n  }\n};\n"
      ]
    },
    "mtime": 1468947861000
  },
  "{\"filename\":\"/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/routes/api/v1/phone_home.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "'use strict';\n\nvar root = require('requirefrom')('');\nvar handleError = root('server/lib/handle_error');\n\nmodule.exports = function (server) {\n  var callWithRequest = server.plugins.elasticsearch.callWithRequest;\n  var config = server.config();\n\n  server.route({\n    path: '/api/marvel/v1/phone-home',\n    method: 'POST',\n    handler: function handler(req, reply) {\n      var body = req.payload;\n      var options = {\n        index: '.marvel',\n        type: 'phone_home',\n        body: body\n      };\n      callWithRequest(req, 'index', options).then(reply)['catch'](function (err) {\n        return reply(handleError(err, req));\n      });\n    }\n  });\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9UaGVvL0Rlc2t0b3AvTmVidWxhVGVtcC9OZWJ1bGEvZWxhc3RpY3NlYXJjaC9pbnN0YWxsZWRQbHVnaW5zL21hcnZlbC9zZXJ2ZXIvcm91dGVzL2FwaS92MS9waG9uZV9ob21lLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBTSxJQUFJLEdBQUcsT0FBTyxDQUFDLGFBQWEsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDO0FBQ3hDLElBQU0sV0FBVyxHQUFHLElBQUksQ0FBQyx5QkFBeUIsQ0FBQyxDQUFDOztBQUVwRCxNQUFNLENBQUMsT0FBTyxHQUFHLFVBQUMsTUFBTSxFQUFLO0FBQzNCLE1BQU0sZUFBZSxHQUFHLE1BQU0sQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDLGVBQWUsQ0FBQztBQUNyRSxNQUFNLE1BQU0sR0FBRyxNQUFNLENBQUMsTUFBTSxFQUFFLENBQUM7O0FBRS9CLFFBQU0sQ0FBQyxLQUFLLENBQUM7QUFDWCxRQUFJLEVBQUUsMkJBQTJCO0FBQ2pDLFVBQU0sRUFBRSxNQUFNO0FBQ2QsV0FBTyxFQUFFLGlCQUFDLEdBQUcsRUFBRSxLQUFLLEVBQUs7QUFDdkIsVUFBTSxJQUFJLEdBQUcsR0FBRyxDQUFDLE9BQU8sQ0FBQztBQUN6QixVQUFNLE9BQU8sR0FBRztBQUNkLGFBQUssRUFBRSxTQUFTO0FBQ2hCLFlBQUksRUFBRSxZQUFZO0FBQ2xCLFlBQUksRUFBRSxJQUFJO09BQ1gsQ0FBQztBQUNGLHFCQUFlLENBQUMsR0FBRyxFQUFFLE9BQU8sRUFBRSxPQUFPLENBQUMsQ0FDckMsSUFBSSxDQUFDLEtBQUssQ0FBQyxTQUNOLENBQUMsVUFBQSxHQUFHO2VBQUksS0FBSyxDQUFDLFdBQVcsQ0FBQyxHQUFHLEVBQUUsR0FBRyxDQUFDLENBQUM7T0FBQSxDQUFDLENBQUM7S0FDN0M7R0FDRixDQUFDLENBQUM7Q0FDSixDQUFDIiwiZmlsZSI6Ii9Vc2Vycy9UaGVvL0Rlc2t0b3AvTmVidWxhVGVtcC9OZWJ1bGEvZWxhc3RpY3NlYXJjaC9pbnN0YWxsZWRQbHVnaW5zL21hcnZlbC9zZXJ2ZXIvcm91dGVzL2FwaS92MS9waG9uZV9ob21lLmpzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qgcm9vdCA9IHJlcXVpcmUoJ3JlcXVpcmVmcm9tJykoJycpO1xuY29uc3QgaGFuZGxlRXJyb3IgPSByb290KCdzZXJ2ZXIvbGliL2hhbmRsZV9lcnJvcicpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IChzZXJ2ZXIpID0+IHtcbiAgY29uc3QgY2FsbFdpdGhSZXF1ZXN0ID0gc2VydmVyLnBsdWdpbnMuZWxhc3RpY3NlYXJjaC5jYWxsV2l0aFJlcXVlc3Q7XG4gIGNvbnN0IGNvbmZpZyA9IHNlcnZlci5jb25maWcoKTtcblxuICBzZXJ2ZXIucm91dGUoe1xuICAgIHBhdGg6ICcvYXBpL21hcnZlbC92MS9waG9uZS1ob21lJyxcbiAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICBoYW5kbGVyOiAocmVxLCByZXBseSkgPT4ge1xuICAgICAgY29uc3QgYm9keSA9IHJlcS5wYXlsb2FkO1xuICAgICAgY29uc3Qgb3B0aW9ucyA9IHtcbiAgICAgICAgaW5kZXg6ICcubWFydmVsJyxcbiAgICAgICAgdHlwZTogJ3Bob25lX2hvbWUnLFxuICAgICAgICBib2R5OiBib2R5XG4gICAgICB9O1xuICAgICAgY2FsbFdpdGhSZXF1ZXN0KHJlcSwgJ2luZGV4Jywgb3B0aW9ucylcbiAgICAgIC50aGVuKHJlcGx5KVxuICAgICAgLmNhdGNoKGVyciA9PiByZXBseShoYW5kbGVFcnJvcihlcnIsIHJlcSkpKTtcbiAgICB9XG4gIH0pO1xufTtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/routes/api/v1/phone_home.js"
      ],
      "names": [],
      "mappings": ";;AAAA,IAAM,IAAI,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC;AACxC,IAAM,WAAW,GAAG,IAAI,CAAC,yBAAyB,CAAC,CAAC;;AAEpD,MAAM,CAAC,OAAO,GAAG,UAAC,MAAM,EAAK;AAC3B,MAAM,eAAe,GAAG,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,eAAe,CAAC;AACrE,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;;AAE/B,QAAM,CAAC,KAAK,CAAC;AACX,QAAI,EAAE,2BAA2B;AACjC,UAAM,EAAE,MAAM;AACd,WAAO,EAAE,iBAAC,GAAG,EAAE,KAAK,EAAK;AACvB,UAAM,IAAI,GAAG,GAAG,CAAC,OAAO,CAAC;AACzB,UAAM,OAAO,GAAG;AACd,aAAK,EAAE,SAAS;AAChB,YAAI,EAAE,YAAY;AAClB,YAAI,EAAE,IAAI;OACX,CAAC;AACF,qBAAe,CAAC,GAAG,EAAE,OAAO,EAAE,OAAO,CAAC,CACrC,IAAI,CAAC,KAAK,CAAC,SACN,CAAC,UAAA,GAAG;eAAI,KAAK,CAAC,WAAW,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;OAAA,CAAC,CAAC;KAC7C;GACF,CAAC,CAAC;CACJ,CAAC",
      "file": "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/routes/api/v1/phone_home.js",
      "sourcesContent": [
        "const root = require('requirefrom')('');\nconst handleError = root('server/lib/handle_error');\n\nmodule.exports = (server) => {\n  const callWithRequest = server.plugins.elasticsearch.callWithRequest;\n  const config = server.config();\n\n  server.route({\n    path: '/api/marvel/v1/phone-home',\n    method: 'POST',\n    handler: (req, reply) => {\n      const body = req.payload;\n      const options = {\n        index: '.marvel',\n        type: 'phone_home',\n        body: body\n      };\n      callWithRequest(req, 'index', options)\n      .then(reply)\n      .catch(err => reply(handleError(err, req)));\n    }\n  });\n};\n"
      ]
    },
    "mtime": 1468947861000
  },
  "{\"filename\":\"/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/routes/api/v1/settings.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "'use strict';\n\nvar _ = require('lodash');\nvar Joi = require('joi');\nvar Boom = require('boom');\nvar root = require('requirefrom')('');\nvar settingSchemas = root('server/lib/setting_schemas');\nvar settingsModelProvider = root('server/lib/settings');\nvar getClusters = root('server/lib/get_clusters');\nvar handleError = root('server/lib/handle_error');\n\nmodule.exports = function (server) {\n  var config = server.config();\n  var index = config.get('marvel.index');\n  var Settings = settingsModelProvider(server);\n\n  server.route({\n    method: 'GET',\n    path: '/api/marvel/v1/settings',\n    handler: function handler(req, reply) {\n      return getClusters(req).then(function (clusters) {\n        var cluster = req.query.cluster;\n        var clusterKeys = cluster && [cluster] || _.map(clusters, function (cluster) {\n          return cluster.cluster_uuid;\n        });\n        var keys = [];\n        _.each(clusterKeys, function (cluster) {\n          _.each(_.keys(settingSchemas), function (key) {\n            keys.push(cluster + ':' + key);\n          });\n        });\n        return Settings.bulkFetch({ ids: keys, req: req });\n      }).then(reply)['catch'](function (err) {\n        return reply(handleError(err, req));\n      });\n    }\n  });\n\n  server.route({\n    method: 'GET',\n    path: '/api/marvel/v1/settings/{id}',\n    handler: function handler(req, reply) {\n      var parts = req.params.id.split(/:/);\n      var schema = settingSchemas[parts[1]];\n      if (!schema) return reply(Boom.notFound('Resouce does not exist.'));\n      return Settings.fetchById({ req: req, id: req.params.id }).then(reply)['catch'](function (err) {\n        return reply(handleError(err, req));\n      });\n    }\n  });\n\n  server.route({\n    method: ['PUT', 'POST'],\n    path: '/api/marvel/v1/settings/{id}',\n    config: {\n      validate: {\n        payload: function payload(value, options, next) {\n          var parts = options.context.params.id.split(/:/);\n          var schema = settingSchemas[parts[1]];\n          if (!schema) return next(Boom.notFound('Resouce does not exist'));\n          var settings = new Settings(value);\n          settings.validate();\n          next(null, settings);\n        }\n      }\n    },\n    handler: function handler(req, reply) {\n      var settings = req.payload;\n      return settings.save({ req: req, stripDefaults: true }).then(function (doc) {\n        reply(doc).code(201);\n      })['catch'](function (err) {\n        return reply(handleError(err, req));\n      });\n    }\n  });\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9UaGVvL0Rlc2t0b3AvTmVidWxhVGVtcC9OZWJ1bGEvZWxhc3RpY3NlYXJjaC9pbnN0YWxsZWRQbHVnaW5zL21hcnZlbC9zZXJ2ZXIvcm91dGVzL2FwaS92MS9zZXR0aW5ncy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLElBQUksQ0FBQyxHQUFHLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQztBQUMxQixJQUFJLEdBQUcsR0FBRyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUM7QUFDekIsSUFBSSxJQUFJLEdBQUcsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0FBQzNCLElBQUksSUFBSSxHQUFHLE9BQU8sQ0FBQyxhQUFhLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQztBQUN0QyxJQUFJLGNBQWMsR0FBRyxJQUFJLENBQUMsNEJBQTRCLENBQUMsQ0FBQztBQUN4RCxJQUFJLHFCQUFxQixHQUFHLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDO0FBQ3hELElBQUksV0FBVyxHQUFHLElBQUksQ0FBQyx5QkFBeUIsQ0FBQyxDQUFDO0FBQ2xELElBQUksV0FBVyxHQUFHLElBQUksQ0FBQyx5QkFBeUIsQ0FBQyxDQUFDOztBQUVsRCxNQUFNLENBQUMsT0FBTyxHQUFHLFVBQVUsTUFBTSxFQUFFO0FBQ2pDLE1BQUksTUFBTSxHQUFHLE1BQU0sQ0FBQyxNQUFNLEVBQUUsQ0FBQztBQUM3QixNQUFJLEtBQUssR0FBRyxNQUFNLENBQUMsR0FBRyxDQUFDLGNBQWMsQ0FBQyxDQUFDO0FBQ3ZDLE1BQUksUUFBUSxHQUFHLHFCQUFxQixDQUFDLE1BQU0sQ0FBQyxDQUFDOztBQUU3QyxRQUFNLENBQUMsS0FBSyxDQUFDO0FBQ1gsVUFBTSxFQUFFLEtBQUs7QUFDYixRQUFJLEVBQUUseUJBQXlCO0FBQy9CLFdBQU8sRUFBRSxpQkFBVSxHQUFHLEVBQUUsS0FBSyxFQUFFO0FBQzdCLGFBQU8sV0FBVyxDQUFDLEdBQUcsQ0FBQyxDQUN0QixJQUFJLENB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QUcsRUFBRSxLQUFLLEVBQUU7QUFDN0IsVUFBSSxRQUFRLEdBQUcsR0FBRyxDQUFDLE9BQU8sQ0FBQztBQUMzQixhQUFPLFFBQVEsQ0FBQyxJQUFJLENBQUMsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLGFBQWEsRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUN0RCxJQUFJLENBQUMsVUFBVSxHQUFHLEVBQUU7QUFDbkIsYUFBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztPQUN0QixDQUFDLFNBQ0ksQ0FBQyxVQUFBLEdBQUc7ZUFBSSxLQUFLLENBQUMsV0FBVyxDQUFDLEdBQUcsRUFBRSxHQUFHLENBQUMsQ0FBQztPQUFBLENBQUMsQ0FBQztLQUM3QztHQUNGLENBQUMsQ0FBQztDQUVKLENBQUMiLCJmaWxlIjoiL1VzZXJzL1RoZW8vRGVza3RvcC9OZWJ1bGFUZW1wL05lYnVsYS9lbGFzdGljc2VhcmNoL2luc3RhbGxlZFBsdWdpbnMvbWFydmVsL3NlcnZlci9yb3V0ZXMvYXBpL3YxL3NldHRpbmdzLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIF8gPSByZXF1aXJlKCdsb2Rhc2gnKTtcbnZhciBKb2kgPSByZXF1aXJlKCdqb2knKTtcbnZhciBCb29tID0gcmVxdWlyZSgnYm9vbScpO1xudmFyIHJvb3QgPSByZXF1aXJlKCdyZXF1aXJlZnJvbScpKCcnKTtcbnZhciBzZXR0aW5nU2NoZW1hcyA9IHJvb3QoJ3NlcnZlci9saWIvc2V0dGluZ19zY2hlbWFzJyk7XG52YXIgc2V0dGluZ3NNb2RlbFByb3ZpZGVyID0gcm9vdCgnc2VydmVyL2xpYi9zZXR0aW5ncycpO1xudmFyIGdldENsdXN0ZXJzID0gcm9vdCgnc2VydmVyL2xpYi9nZXRfY2x1c3RlcnMnKTtcbnZhciBoYW5kbGVFcnJvciA9IHJvb3QoJ3NlcnZlci9saWIvaGFuZGxlX2Vycm9yJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHNlcnZlcikge1xuICB2YXIgY29uZmlnID0gc2VydmVyLmNvbmZpZygpO1xuICB2YXIgaW5kZXggPSBjb25maWcuZ2V0KCdtYXJ2ZWwuaW5kZXgnKTtcbiAgdmFyIFNldHRpbmdzID0gc2V0dGluZ3NNb2RlbFByb3ZpZGVyKHNlcnZlcik7XG5cbiAgc2VydmVyLnJvdXRlKHtcbiAgICBtZXRob2Q6ICdHRVQnLFxuICAgIHBhdGg6ICcvYXBpL21hcnZlbC92MS9zZXR0aW5ncycsXG4gICAgaGFuZGxlcjogZnVuY3Rpb24gKHJlcSwgcmVwbHkpIHtcbiAgICAgIHJldHVybiBnZXRDbHVzdGVycyhyZXEpXG4gICAgICAudGhlbigoY2x1c3RlcnMpID0+IHtcbiAgICAgICAgdmFyIGNsdXN0ZXIgPSByZXEucXVlcnkuY2x1c3RlcjtcbiAgICAgICAgdmFyIGNsdXN0ZXJLZXlzID0gY2x1c3RlciAmJiBbY2x1c3Rlcl0gfHwgXy5tYXAoY2x1c3RlcnMsIChjbHVzdGVyKSA9PiBjbHVzdGVyLmNsdXN0ZXJfdXVpZCk7XG4gICAgICAgIHZhciBrZXlzID0gW107XG4gICAgICAgIF8uZWFjaChjbHVzdGVyS2V5cywgZnVuY3Rpb24gKGNsdXN0ZXIpIHtcbiAgICAgICAgICBfLmVhY2goXy5rZXlzKHNldHRpbmdTY2hlbWFzKSwgZnVuY3Rpb24gKGtleSkge1xuICAgICAgICAgICAga2V5cy5wdXNoKGNsdXN0ZXIgKyAnOicgKyBrZXkpO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIFNldHRpbmdzLmJ1bGtGZXRjaCh7IGlkczoga2V5cywgcmVxOiByZXEgfSk7XG4gICAgICB9KVxuICAgICAgLnRoZW4ocmVwbHkpXG4gICAgICAuY2F0Y2goZXJyID0+IHJlcGx5KGhhbmRsZUVycm9yKGVyciwgcmVxKSkpO1xuICAgIH1cbiAgfSk7XG5cbiAgc2VydmVyLnJvdXRlKHtcbiAgICBtZXRob2Q6ICdHRVQnLFxuICAgIHBhdGg6ICcvYXBpL21hcnZlbC92MS9zZXR0aW5ncy97aWR9JyxcbiAgICBoYW5kbGVyOiBmdW5jdGlvbiAocmVxLCByZXBseSkge1xuICAgICAgdmFyIHBhcnRzID0gcmVxLnBhcmFtcy5pZC5zcGxpdCgvOi8pO1xuICAgICAgdmFyIHNjaGVtYSA9IHNldHRpbmdTY2hlbWFzW3BhcnRzWzFdXTtcbiAgICAgIGlmICghc2NoZW1hKSByZXR1cm4gcmVwbHkoQm9vbS5ub3RGb3VuZCgnUmVzb3VjZSBkb2VzIG5vdCBleGlzdC4nKSk7XG4gICAgICByZXR1cm4gU2V0dGluZ3MuZmV0Y2hCeUlkKHsgcmVxOiByZXEsIGlkOiByZXEucGFyYW1zLmlkIH0pXG4gICAgICAudGhlbihyZXBseSlcbiAgICAgIC5jYXRjaChlcnIgPT4gcmVwbHkoaGFuZGxlRXJyb3IoZXJyLCByZXEpKSk7XG4gICAgfVxuICB9KTtcblxuICBzZXJ2ZXIucm91dGUoe1xuICAgIG1ldGhvZDogWyAnUFVUJywgJ1BPU1QnIF0sXG4gICAgcGF0aDogJy9hcGkvbWFydmVsL3YxL3NldHRpbmdzL3tpZH0nLFxuICAgIGNvbmZpZzoge1xuICAgICAgdmFsaWRhdGU6IHtcbiAgICAgICAgcGF5bG9hZDogZnVuY3Rpb24gKHZhbHVlLCBvcHRpb25zLCBuZXh0KSB7XG4gICAgICAgICAgdmFyIHBhcnRzID0gb3B0aW9ucy5jb250ZXh0LnBhcmFtcy5pZC5zcGxpdCgvOi8pO1xuICAgICAgICAgIHZhciBzY2hlbWEgPSBzZXR0aW5nU2NoZW1hc1twYXJ0c1sxXV07XG4gICAgICAgICAgaWYgKCFzY2hlbWEpIHJldHVybiBuZXh0KEJvb20ubm90Rm91bmQoJ1Jlc291Y2UgZG9lcyBub3QgZXhpc3QnKSk7XG4gICAgICAgICAgdmFyIHNldHRpbmdzID0gbmV3IFNldHRpbmdzKHZhbHVlKTtcbiAgICAgICAgICBzZXR0aW5ncy52YWxpZGF0ZSgpO1xuICAgICAgICAgIG5leHQobnVsbCwgc2V0dGluZ3MpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcbiAgICBoYW5kbGVyOiBmdW5jdGlvbiAocmVxLCByZXBseSkge1xuICAgICAgdmFyIHNldHRpbmdzID0gcmVxLnBheWxvYWQ7XG4gICAgICByZXR1cm4gc2V0dGluZ3Muc2F2ZSh7IHJlcTogcmVxLCBzdHJpcERlZmF1bHRzOiB0cnVlIH0pXG4gICAgICAudGhlbihmdW5jdGlvbiAoZG9jKSB7XG4gICAgICAgIHJlcGx5KGRvYykuY29kZSgyMDEpO1xuICAgICAgfSlcbiAgICAgIC5jYXRjaChlcnIgPT4gcmVwbHkoaGFuZGxlRXJyb3IoZXJyLCByZXEpKSk7XG4gICAgfVxuICB9KTtcblxufTtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/routes/api/v1/settings.js"
      ],
      "names": [],
      "mappings": "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",
      "file": "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/routes/api/v1/settings.js",
      "sourcesContent": [
        "var _ = require('lodash');\nvar Joi = require('joi');\nvar Boom = require('boom');\nvar root = require('requirefrom')('');\nvar settingSchemas = root('server/lib/setting_schemas');\nvar settingsModelProvider = root('server/lib/settings');\nvar getClusters = root('server/lib/get_clusters');\nvar handleError = root('server/lib/handle_error');\n\nmodule.exports = function (server) {\n  var config = server.config();\n  var index = config.get('marvel.index');\n  var Settings = settingsModelProvider(server);\n\n  server.route({\n    method: 'GET',\n    path: '/api/marvel/v1/settings',\n    handler: function (req, reply) {\n      return getClusters(req)\n      .then((clusters) => {\n        var cluster = req.query.cluster;\n        var clusterKeys = cluster && [cluster] || _.map(clusters, (cluster) => cluster.cluster_uuid);\n        var keys = [];\n        _.each(clusterKeys, function (cluster) {\n          _.each(_.keys(settingSchemas), function (key) {\n            keys.push(cluster + ':' + key);\n          });\n        });\n        return Settings.bulkFetch({ ids: keys, req: req });\n      })\n      .then(reply)\n      .catch(err => reply(handleError(err, req)));\n    }\n  });\n\n  server.route({\n    method: 'GET',\n    path: '/api/marvel/v1/settings/{id}',\n    handler: function (req, reply) {\n      var parts = req.params.id.split(/:/);\n      var schema = settingSchemas[parts[1]];\n      if (!schema) return reply(Boom.notFound('Resouce does not exist.'));\n      return Settings.fetchById({ req: req, id: req.params.id })\n      .then(reply)\n      .catch(err => reply(handleError(err, req)));\n    }\n  });\n\n  server.route({\n    method: [ 'PUT', 'POST' ],\n    path: '/api/marvel/v1/settings/{id}',\n    config: {\n      validate: {\n        payload: function (value, options, next) {\n          var parts = options.context.params.id.split(/:/);\n          var schema = settingSchemas[parts[1]];\n          if (!schema) return next(Boom.notFound('Resouce does not exist'));\n          var settings = new Settings(value);\n          settings.validate();\n          next(null, settings);\n        }\n      }\n    },\n    handler: function (req, reply) {\n      var settings = req.payload;\n      return settings.save({ req: req, stripDefaults: true })\n      .then(function (doc) {\n        reply(doc).code(201);\n      })\n      .catch(err => reply(handleError(err, req)));\n    }\n  });\n\n};\n"
      ]
    },
    "mtime": 1468947861000
  },
  "{\"filename\":\"/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/setting_schemas.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "'use strict';\n\nmodule.exports = {\n  'metric-thresholds': require('./schemas/metric_thresholds')\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9UaGVvL0Rlc2t0b3AvTmVidWxhVGVtcC9OZWJ1bGEvZWxhc3RpY3NlYXJjaC9pbnN0YWxsZWRQbHVnaW5zL21hcnZlbC9zZXJ2ZXIvbGliL3NldHRpbmdfc2NoZW1hcy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLE1BQU0sQ0FBQyxPQUFPLEdBQUc7QUFDZixxQkFBbUIsRUFBRSxPQUFPLENBQUMsNkJBQTZCLENBQUM7Q0FDNUQsQ0FBQyIsImZpbGUiOiIvVXNlcnMvVGhlby9EZXNrdG9wL05lYnVsYVRlbXAvTmVidWxhL2VsYXN0aWNzZWFyY2gvaW5zdGFsbGVkUGx1Z2lucy9tYXJ2ZWwvc2VydmVyL2xpYi9zZXR0aW5nX3NjaGVtYXMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHtcbiAgJ21ldHJpYy10aHJlc2hvbGRzJzogcmVxdWlyZSgnLi9zY2hlbWFzL21ldHJpY190aHJlc2hvbGRzJylcbn07XG5cbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/setting_schemas.js"
      ],
      "names": [],
      "mappings": ";;AAAA,MAAM,CAAC,OAAO,GAAG;AACf,qBAAmB,EAAE,OAAO,CAAC,6BAA6B,CAAC;CAC5D,CAAC",
      "file": "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/setting_schemas.js",
      "sourcesContent": [
        "module.exports = {\n  'metric-thresholds': require('./schemas/metric_thresholds')\n};\n\n"
      ]
    },
    "mtime": 1468947861000
  },
  "{\"filename\":\"/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/schemas/metric_thresholds.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "'use strict';\n\nvar moment = require('moment');\nvar Joi = require('joi');\nvar root = require('requirefrom')('');\nvar _ = require('lodash');\nvar join = require('path').join;\nvar metrics = root('public/lib/metrics');\nvar thresholdPattern = /[<>=]{1,2}[\\d\\.]+/;\n\nvar schema = {\n  _id: Joi.string(),\n  _created: Joi.date()['default'](function () {\n    return moment.utc().toISOString();\n  }, 'created date'),\n  _updated: Joi.date()\n};\n\n_.each(metrics, function (metric, field) {\n  schema[field + '.warning'] = Joi.string().regex(thresholdPattern)['default'](metric.defaults.warning);\n  schema[field + '.critical'] = Joi.string().regex(thresholdPattern)['default'](metric.defaults.critical);\n  schema[field + '.interval'] = Joi.string().regex(/\\d+[yMwdhms]/)['default'](metric.defaults.interval);\n  schema[field + '.periods'] = Joi.number().min(1)['default'](metric.defaults.periods);\n});\n\nmodule.exports = Joi.object(schema)['default']();\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9UaGVvL0Rlc2t0b3AvTmVidWxhVGVtcC9OZWJ1bGEvZWxhc3RpY3NlYXJjaC9pbnN0YWxsZWRQbHVnaW5zL21hcnZlbC9zZXJ2ZXIvbGliL3NjaGVtYXMvbWV0cmljX3RocmVzaG9sZHMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFJLE1BQU0sR0FBRyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUM7QUFDL0IsSUFBSSxHQUFHLEdBQUcsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDO0FBQ3pCLElBQUksSUFBSSxHQUFHLE9BQU8sQ0FBQyxhQUFhLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQztBQUN0QyxJQUFJLENBQUMsR0FBRyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUM7QUFDMUIsSUFBSSxJQUFJLEdBQUcsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDLElBQUksQ0FBQztBQUNoQyxJQUFJLE9BQU8sR0FBRyxJQUFJLENBQUMsb0JBQW9CLENBQUMsQ0FBQztBQUN6QyxJQUFJLGdCQUFnQixHQUFHLG1CQUFtQixDQUFDOztBQUUzQyxJQUFJLE1BQU0sR0FBRztBQUNYLEtBQUcsRUFBRSxHQUFHLENBQUMsTUFBTSxFQUFFO0FBQ2pCLFVBQVEsRUFBRSxHQUFHLENBQUMsSUFBSSxFQUFFLFdBQVEsQ0FBQyxZQUFZO0FBQ3ZDLFdBQU8sTUFBTSxDQUFDLEdBQUcsRUFBRSxDQUFDLFdBQVcsRUFBRSxDQUFDO0dBQ25DLEVBQUUsY0FBYyxDQUFDO0FBQ2xCLFVBQVEsRUFBRSxHQUFHLENBQUMsSUFBSSxFQUFFO0NBQ3JCLENBQUM7O0FBRUYsQ0FBQyxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsVUFBVSxNQUFNLEVBQUUsS0FBSyxFQUFFO0FBQ3ZDLFFBQU0sQ0FBQyxLQUFLLEdBQUcsVUFBVSxDQUFDLEdBQUcsR0FBRyxDQUFDLE1BQU0sRUFBRSxDQUFDLEtBQUssQ0FBQyxnQkFBZ0IsQ0FBQyxXQUFRLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsQ0FBQztBQUNuRyxRQUFNLENBQUMsS0FBSyxHQUFHLFdBQVcsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxLQUFLLENBQUMsZ0JBQWdCLENBQUMsV0FBUSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLENBQUM7QUFDckcsUUFBTSxDQUFDLEtBQUssR0FBRyxXQUFXLENBQUMsR0FBRyxHQUFHLENBQUMsTUFBTSxFQUFFLENBQUMsS0FBSyxDQUFDLGNBQWMsQ0FBQyxXQUFRLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsQ0FBQztBQUNuRyxRQUFNLENBQUMsS0FBSyxHQUFHLFVBQVUsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLFdBQVEsQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0NBQ25GLENBQUMsQ0FBQzs7QUFFSCxNQUFNLENBQUMsT0FBTyxHQUFHLEdBQUcsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLFdBQVEsRUFBRSxDQUFDIiwiZmlsZSI6Ii9Vc2Vycy9UaGVvL0Rlc2t0b3AvTmVidWxhVGVtcC9OZWJ1bGEvZWxhc3RpY3NlYXJjaC9pbnN0YWxsZWRQbHVnaW5zL21hcnZlbC9zZXJ2ZXIvbGliL3NjaGVtYXMvbWV0cmljX3RocmVzaG9sZHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgbW9tZW50ID0gcmVxdWlyZSgnbW9tZW50Jyk7XG52YXIgSm9pID0gcmVxdWlyZSgnam9pJyk7XG52YXIgcm9vdCA9IHJlcXVpcmUoJ3JlcXVpcmVmcm9tJykoJycpO1xudmFyIF8gPSByZXF1aXJlKCdsb2Rhc2gnKTtcbnZhciBqb2luID0gcmVxdWlyZSgncGF0aCcpLmpvaW47XG52YXIgbWV0cmljcyA9IHJvb3QoJ3B1YmxpYy9saWIvbWV0cmljcycpO1xudmFyIHRocmVzaG9sZFBhdHRlcm4gPSAvWzw+PV17MSwyfVtcXGRcXC5dKy87XG5cbnZhciBzY2hlbWEgPSB7XG4gIF9pZDogSm9pLnN0cmluZygpLFxuICBfY3JlYXRlZDogSm9pLmRhdGUoKS5kZWZhdWx0KGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gbW9tZW50LnV0YygpLnRvSVNPU3RyaW5nKCk7XG4gIH0sICdjcmVhdGVkIGRhdGUnKSxcbiAgX3VwZGF0ZWQ6IEpvaS5kYXRlKClcbn07XG5cbl8uZWFjaChtZXRyaWNzLCBmdW5jdGlvbiAobWV0cmljLCBmaWVsZCkge1xuICBzY2hlbWFbZmllbGQgKyAnLndhcm5pbmcnXSA9IEpvaS5zdHJpbmcoKS5yZWdleCh0aHJlc2hvbGRQYXR0ZXJuKS5kZWZhdWx0KG1ldHJpYy5kZWZhdWx0cy53YXJuaW5nKTtcbiAgc2NoZW1hW2ZpZWxkICsgJy5jcml0aWNhbCddID0gSm9pLnN0cmluZygpLnJlZ2V4KHRocmVzaG9sZFBhdHRlcm4pLmRlZmF1bHQobWV0cmljLmRlZmF1bHRzLmNyaXRpY2FsKTtcbiAgc2NoZW1hW2ZpZWxkICsgJy5pbnRlcnZhbCddID0gSm9pLnN0cmluZygpLnJlZ2V4KC9cXGQrW3lNd2RobXNdLykuZGVmYXVsdChtZXRyaWMuZGVmYXVsdHMuaW50ZXJ2YWwpO1xuICBzY2hlbWFbZmllbGQgKyAnLnBlcmlvZHMnXSA9IEpvaS5udW1iZXIoKS5taW4oMSkuZGVmYXVsdChtZXRyaWMuZGVmYXVsdHMucGVyaW9kcyk7XG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSBKb2kub2JqZWN0KHNjaGVtYSkuZGVmYXVsdCgpO1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/schemas/metric_thresholds.js"
      ],
      "names": [],
      "mappings": ";;AAAA,IAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC/B,IAAI,GAAG,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC;AACzB,IAAI,IAAI,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC;AACtC,IAAI,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC1B,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC;AAChC,IAAI,OAAO,GAAG,IAAI,CAAC,oBAAoB,CAAC,CAAC;AACzC,IAAI,gBAAgB,GAAG,mBAAmB,CAAC;;AAE3C,IAAI,MAAM,GAAG;AACX,KAAG,EAAE,GAAG,CAAC,MAAM,EAAE;AACjB,UAAQ,EAAE,GAAG,CAAC,IAAI,EAAE,WAAQ,CAAC,YAAY;AACvC,WAAO,MAAM,CAAC,GAAG,EAAE,CAAC,WAAW,EAAE,CAAC;GACnC,EAAE,cAAc,CAAC;AAClB,UAAQ,EAAE,GAAG,CAAC,IAAI,EAAE;CACrB,CAAC;;AAEF,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,UAAU,MAAM,EAAE,KAAK,EAAE;AACvC,QAAM,CAAC,KAAK,GAAG,UAAU,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,gBAAgB,CAAC,WAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;AACnG,QAAM,CAAC,KAAK,GAAG,WAAW,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,gBAAgB,CAAC,WAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;AACrG,QAAM,CAAC,KAAK,GAAG,WAAW,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,cAAc,CAAC,WAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;AACnG,QAAM,CAAC,KAAK,GAAG,UAAU,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,WAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;CACnF,CAAC,CAAC;;AAEH,MAAM,CAAC,OAAO,GAAG,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,WAAQ,EAAE,CAAC",
      "file": "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/schemas/metric_thresholds.js",
      "sourcesContent": [
        "var moment = require('moment');\nvar Joi = require('joi');\nvar root = require('requirefrom')('');\nvar _ = require('lodash');\nvar join = require('path').join;\nvar metrics = root('public/lib/metrics');\nvar thresholdPattern = /[<>=]{1,2}[\\d\\.]+/;\n\nvar schema = {\n  _id: Joi.string(),\n  _created: Joi.date().default(function () {\n    return moment.utc().toISOString();\n  }, 'created date'),\n  _updated: Joi.date()\n};\n\n_.each(metrics, function (metric, field) {\n  schema[field + '.warning'] = Joi.string().regex(thresholdPattern).default(metric.defaults.warning);\n  schema[field + '.critical'] = Joi.string().regex(thresholdPattern).default(metric.defaults.critical);\n  schema[field + '.interval'] = Joi.string().regex(/\\d+[yMwdhms]/).default(metric.defaults.interval);\n  schema[field + '.periods'] = Joi.number().min(1).default(metric.defaults.periods);\n});\n\nmodule.exports = Joi.object(schema).default();\n"
      ]
    },
    "mtime": 1468947861000
  },
  "{\"filename\":\"/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/settings.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "'use strict';\n\nvar root = require('requirefrom')('');\nvar Model = root('public/lib/model');\nvar settingSchemas = root('server/lib/setting_schemas');\nvar Joi = require('joi');\nvar stripDefaults = root('server/lib/strip_defaults');\nvar moment = require('moment');\n\nmodule.exports = function settingsModelProvider(server) {\n  var callWithRequest = server.plugins.elasticsearch.callWithRequest;\n  var config = server.config();\n  var index = config.get('marvel.index');\n\n  function Settings(data, options) {\n    Model.call(this, data, options);\n    this.options.stripEmpties = true;\n  }\n\n  Settings.prototype = new Model();\n\n  Settings.prototype.validate = function () {\n    var parts = this.get('_id').split(/:/);\n    var cluster = parts[0];\n    var id = parts[1];\n    var schema = settingSchemas[id];\n    if (!schema) throw new Error('Schema missing for ' + id);\n    var valid = Joi.validate(Model.flatten(this.data), schema);\n    if (valid.error) {\n      throw valid.error;\n    }\n    this.set(valid.value);\n  };\n\n  Settings.prototype.save = function (options) {\n    this.set('_updated', moment.utc().toISOString());\n    options = options || {};\n    var id = this.get('_id');\n    var data = this.data;\n    var req = options.req;\n    if (options.stripDefaults) {\n      var parts = this.get('_id').split(/:/);\n      var schema = settingSchemas[parts[1]];\n      data = stripDefaults(data, schema);\n    }\n    var self = this;\n    var params = {\n      index: index,\n      type: 'settings',\n      id: id,\n      body: Model.explode(data)\n    };\n    return callWithRequest(req, 'index', params).then(function (resp) {\n      return self;\n    });\n  };\n\n  Settings.fetchById = function (options) {\n    var params = {\n      index: index,\n      type: 'settings',\n      id: options.id\n    };\n    return callWithRequest(options.req, 'get', params).then(function (resp) {\n      var settings = new Settings(resp._source);\n      settings.validate();\n      return settings;\n    });\n  };\n\n  Settings.fetchOrCreate = function (id) {\n    return Settings.fetchById(id)['catch'](function () {\n      var settings = new Settings({ _id: id });\n      settings.validate();\n      return settings;\n    });\n  };\n\n  Settings.bulkFetch = function (options) {\n    var params = {\n      index: config.get('marvel.index'),\n      type: 'settings',\n      body: { ids: options.ids }\n    };\n    return callWithRequest(options.req, 'mget', params).then(function (resp) {\n      var results = resp.docs.map(function (doc) {\n        var value = doc.found ? doc._source : {};\n        value._id = doc._id;\n        var settings = new Settings(value);\n        settings.validate();\n        return settings;\n      });\n      return results;\n    });\n  };\n\n  return Settings;\n};\n//# sourceMappingURL=data:application/json;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/settings.js"
      ],
      "names": [],
      "mappings": "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",
      "file": "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/settings.js",
      "sourcesContent": [
        "var root = require('requirefrom')('');\nvar Model = root('public/lib/model');\nvar settingSchemas = root('server/lib/setting_schemas');\nvar Joi = require('joi');\nvar stripDefaults = root('server/lib/strip_defaults');\nvar moment = require('moment');\n\nmodule.exports = function settingsModelProvider(server) {\n  var callWithRequest = server.plugins.elasticsearch.callWithRequest;\n  var config = server.config();\n  var index = config.get('marvel.index');\n\n  function Settings(data, options) {\n    Model.call(this, data, options);\n    this.options.stripEmpties = true;\n  }\n\n  Settings.prototype = new Model();\n\n  Settings.prototype.validate = function () {\n    var parts = this.get('_id').split(/:/);\n    var cluster = parts[0];\n    var id = parts[1];\n    var schema = settingSchemas[id];\n    if (!schema) throw new Error('Schema missing for ' + id);\n    var valid = Joi.validate(Model.flatten(this.data), schema);\n    if (valid.error) {\n      throw valid.error;\n    }\n    this.set(valid.value);\n  };\n\n  Settings.prototype.save = function (options) {\n    this.set('_updated', moment.utc().toISOString());\n    options = options || {};\n    var id = this.get('_id');\n    var data = this.data;\n    var req = options.req;\n    if (options.stripDefaults) {\n      var parts = this.get('_id').split(/:/);\n      var schema = settingSchemas[parts[1]];\n      data = stripDefaults(data, schema);\n    }\n    var self = this;\n    var params = {\n      index: index,\n      type: 'settings',\n      id: id,\n      body: Model.explode(data)\n    };\n    return callWithRequest(req, 'index', params).then(function (resp) {\n      return self;\n    });\n  };\n\n  Settings.fetchById = function (options) {\n    var params = {\n      index: index,\n      type: 'settings',\n      id: options.id\n    };\n    return callWithRequest(options.req, 'get', params).then(function (resp) {\n      var settings = new Settings(resp._source);\n      settings.validate();\n      return settings;\n    });\n  };\n\n  Settings.fetchOrCreate = function (id) {\n    return Settings.fetchById(id).catch(function () {\n      var settings = new Settings({ _id: id });\n      settings.validate();\n      return settings;\n    });\n  };\n\n  Settings.bulkFetch = function (options) {\n    var params = {\n      index: config.get('marvel.index'),\n      type: 'settings',\n      body: { ids: options.ids }\n    };\n    return callWithRequest(options.req, 'mget', params).then(function (resp) {\n      var results = resp.docs.map(function (doc) {\n        var value = (doc.found) ? doc._source : {};\n        value._id = doc._id;\n        var settings = new Settings(value);\n        settings.validate();\n        return settings;\n      });\n      return results;\n    });\n  };\n\n  return Settings;\n\n};\n"
      ]
    },
    "mtime": 1468947861000
  },
  "{\"filename\":\"/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/public/lib/model.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "'use strict';\n\nvar _ = require('lodash');\n\nfunction Model(data, options) {\n  this.options = options || {};\n  this.data = Model.explode(data);\n}\n\nModel.prototype.get = function (key) {\n  return _.get(this.data, key);\n};\n\nModel.prototype.set = function (key, val) {\n  var self = this;\n  if (_.isPlainObject(key)) {\n    _.each(Model.flatten(key), function (val, key) {\n      _.get(self.data, key, val);\n    });\n  } else {\n    _.set(this.data, key, val);\n  }\n};\n\nModel.prototype.toObject = function (options) {\n  options = _.defaults({}, options, this.options);\n  var data = this.data;\n  if (options.flatten) data = Model.flatten(data);\n  return data;\n};\n\nModel.prototype.toJSON = function () {\n  return this.data;\n};\n\nModel.stripEmpties = function (obj) {\n  for (var i in obj) {\n    if (_.isEmpty(obj[i])) {\n      delete obj[i];\n    } else if (typeof obj[i] === 'object') {\n      Model.stripEmpties(obj[i]);\n    }\n  }\n  return obj;\n};\n\nModel.flatten = function flatten(obj, path, newObj) {\n  newObj = newObj || {};\n  path = path || [];\n  for (var i in obj) {\n    if (_.isPlainObject(obj[i]) && !_.isArray(obj[i])) {\n      flatten(obj[i], path.concat(i), newObj);\n    } else {\n      newObj[path.concat(i).join('.')] = obj[i];\n    }\n  }\n  return newObj;\n};\n\nModel.explode = function explode(obj) {\n  var newObj = {};\n  _.each(obj, function (val, key) {\n    _.set(newObj, key, val);\n  });\n  return newObj;\n};\n\nmodule.exports = Model;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9UaGVvL0Rlc2t0b3AvTmVidWxhVGVtcC9OZWJ1bGEvZWxhc3RpY3NlYXJjaC9pbnN0YWxsZWRQbHVnaW5zL21hcnZlbC9wdWJsaWMvbGliL21vZGVsLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBSSxDQUFDLEdBQUcsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDOztBQUUxQixTQUFTLEtBQUssQ0FBQyxJQUFJLEVBQUUsT0FBTyxFQUFFO0FBQzVCLE1BQUksQ0FBQyxPQUFPLEdBQUcsT0FBTyxJQUFJLEVBQUUsQ0FBQztBQUM3QixNQUFJLENBQUMsSUFBSSxHQUFHLEtBQUssQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7Q0FDakM7O0FBRUQsS0FBSyxDQUFDLFNBQVMsQ0FBQyxHQUFHLEdBQUcsVUFBVSxHQUFHLEVBQUU7QUFDbkMsU0FBTyxDQUFDLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsR0FBRyxDQUFDLENBQUM7Q0FDOUIsQ0FBQzs7QUFFRixLQUFLLENBQUMsU0FBUyxDQUFDLEdBQUcsR0FBRyxVQUFVLEdBQUcsRUFBRSxHQUFHLEVBQUU7QUFDeEMsTUFBSSxJQUFJLEdBQUcsSUFBSSxDQUFDO0FBQ2hCLE1BQUksQ0FBQyxDQUFDLGFBQWEsQ0FBQyxHQUFHLENBQUMsRUFBRTtBQUN4QixLQUFDLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLEVBQUUsVUFBVSxHQUFHLEVBQUUsR0FBRyxFQUFFO0FBQzdDLE9BQUMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxHQUFHLEVBQUUsR0FBRyxDQUFDLENBQUM7S0FDNUIsQ0FBQyxDQUFDO0dBQ0osTUFBTTtBQUNMLEtBQUMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxHQUFHLEVBQUUsR0FBRyxDQUFDLENBQUM7R0FDNUI7Q0FDRixDQUFDOztBQUVGLEtBQUssQ0FBQyxTQUFTLENBQUMsUUFBUSxHQUFHLFVBQVUsT0FBTyxFQUFFO0FBQzVDLFNBQU8sR0FBRyxDQUFDLENBQUMsUUFBUSxDQUFDLEVBQUUsRUFBRSxPQUFPLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0FBQ2hELE1BQUksSUFBSSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUM7QUFDckIsTUFBSSxPQUFPLENBQUMsT0FBTyxFQUFFLElBQUksR0FBRyxLQUFLLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO0FBQ2hELFNBQU8sSUFBSSxDQUFDO0NBQ2IsQ0FBQzs7QUFFRixLQUFLLENBQUMsU0FBUyxDQUFDLE1BQU0sR0FBRyxZQUFZO0FBQ25DLFNBQU8sSUFBSSxDQUFDLElBQUksQ0FBQztDQUNsQixDQUFDOztBQUVGLEtBQUssQ0FBQyxZQUFZLEdBQUcsVUFBVSxHQUFHLEVBQUU7QUFDbEMsT0FBSyxJQUFJLENBQUMsSUFBSSxHQUFHLEVBQUU7QUFDakIsUUFBSSxDQUFDLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFO0FBQ3JCLGFBQU8sR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO0tBQ2YsTUFBTSxJQUFJLE9BQU8sR0FBRyxDQUFDLENBQUMsQ0FBQyxLQUFLLFFBQVEsRUFBRTtBQUNyQyxXQUFLLENBQUMsWUFBWSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0tBQzVCO0dBQ0Y7QUFDRCxTQUFPLEdBQUcsQ0FBQztDQUNaLENBQUM7O0FBRUYsS0FBSyxDQUFDLE9BQU8sR0FBRyxTQUFTLE9BQU8sQ0FBQyxHQUFHLEVBQUUsSUFBSSxFQUFFLE1BQU0sRUFBRTtBQUNsRCxRQUFNLEdBQUcsTUFBTSxJQUFJLEVBQUUsQ0FBQztBQUN0QixNQUFJLEdBQUcsSUFBSSxJQUFJLEVBQUUsQ0FBQztBQUNsQixPQUFLLElBQUksQ0FBQyxJQUFJLEdBQUcsRUFBRTtBQUNqQixRQUFJLENBQUMsQ0FBQyxhQUFhLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFO0FBQ2pELGFBQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRSxNQUFNLENBQUMsQ0FBQztLQUN6QyxNQUFNO0FBQ0wsWUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO0tBQzNDO0dBQ0Y7QUFDRCxTQUFPLE1BQU0sQ0FBQztDQUNmLENBQUM7O0FBRUYsS0FBSyxDQUFDLE9BQU8sR0FBRyxTQUFTLE9BQU8sQ0FBQyxHQUFHLEVBQUU7QUFDcEMsTUFBSSxNQUFNLEdBQUcsRUFBRSxDQUFDO0FBQ2hCLEdBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFLFVBQVUsR0FBRyxFQUFFLEdBQUcsRUFBRTtBQUM5QixLQUFDLENBQUMsR0FBRyxDQUFDLE1BQU0sRUFBRSxHQUFHLEVBQUUsR0FBRyxDQUFDLENBQUM7R0FDekIsQ0FBQyxDQUFDO0FBQ0gsU0FBTyxNQUFNLENBQUM7Q0FDZixDQUFDOztBQUVGLE1BQU0sQ0FBQyxPQUFPLEdBQUcsS0FBSyxDQUFDIiwiZmlsZSI6Ii9Vc2Vycy9UaGVvL0Rlc2t0b3AvTmVidWxhVGVtcC9OZWJ1bGEvZWxhc3RpY3NlYXJjaC9pbnN0YWxsZWRQbHVnaW5zL21hcnZlbC9wdWJsaWMvbGliL21vZGVsLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIF8gPSByZXF1aXJlKCdsb2Rhc2gnKTtcblxuZnVuY3Rpb24gTW9kZWwoZGF0YSwgb3B0aW9ucykge1xuICB0aGlzLm9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICB0aGlzLmRhdGEgPSBNb2RlbC5leHBsb2RlKGRhdGEpO1xufVxuXG5Nb2RlbC5wcm90b3R5cGUuZ2V0ID0gZnVuY3Rpb24gKGtleSkge1xuICByZXR1cm4gXy5nZXQodGhpcy5kYXRhLCBrZXkpO1xufTtcblxuTW9kZWwucHJvdG90eXBlLnNldCA9IGZ1bmN0aW9uIChrZXksIHZhbCkge1xuICB2YXIgc2VsZiA9IHRoaXM7XG4gIGlmIChfLmlzUGxhaW5PYmplY3Qoa2V5KSkge1xuICAgIF8uZWFjaChNb2RlbC5mbGF0dGVuKGtleSksIGZ1bmN0aW9uICh2YWwsIGtleSkge1xuICAgICAgXy5nZXQoc2VsZi5kYXRhLCBrZXksIHZhbCk7XG4gICAgfSk7XG4gIH0gZWxzZSB7XG4gICAgXy5zZXQodGhpcy5kYXRhLCBrZXksIHZhbCk7XG4gIH1cbn07XG5cbk1vZGVsLnByb3RvdHlwZS50b09iamVjdCA9IGZ1bmN0aW9uIChvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBfLmRlZmF1bHRzKHt9LCBvcHRpb25zLCB0aGlzLm9wdGlvbnMpO1xuICB2YXIgZGF0YSA9IHRoaXMuZGF0YTtcbiAgaWYgKG9wdGlvbnMuZmxhdHRlbikgZGF0YSA9IE1vZGVsLmZsYXR0ZW4oZGF0YSk7XG4gIHJldHVybiBkYXRhO1xufTtcblxuTW9kZWwucHJvdG90eXBlLnRvSlNPTiA9IGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIHRoaXMuZGF0YTtcbn07XG5cbk1vZGVsLnN0cmlwRW1wdGllcyA9IGZ1bmN0aW9uIChvYmopIHtcbiAgZm9yICh2YXIgaSBpbiBvYmopIHtcbiAgICBpZiAoXy5pc0VtcHR5KG9ialtpXSkpIHtcbiAgICAgIGRlbGV0ZSBvYmpbaV07XG4gICAgfSBlbHNlIGlmICh0eXBlb2Ygb2JqW2ldID09PSAnb2JqZWN0Jykge1xuICAgICAgTW9kZWwuc3RyaXBFbXB0aWVzKG9ialtpXSk7XG4gICAgfVxuICB9XG4gIHJldHVybiBvYmo7XG59O1xuXG5Nb2RlbC5mbGF0dGVuID0gZnVuY3Rpb24gZmxhdHRlbihvYmosIHBhdGgsIG5ld09iaikge1xuICBuZXdPYmogPSBuZXdPYmogfHwge307XG4gIHBhdGggPSBwYXRoIHx8IFtdO1xuICBmb3IgKHZhciBpIGluIG9iaikge1xuICAgIGlmIChfLmlzUGxhaW5PYmplY3Qob2JqW2ldKSAmJiAhXy5pc0FycmF5KG9ialtpXSkpIHtcbiAgICAgIGZsYXR0ZW4ob2JqW2ldLCBwYXRoLmNvbmNhdChpKSwgbmV3T2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgbmV3T2JqW3BhdGguY29uY2F0KGkpLmpvaW4oJy4nKV0gPSBvYmpbaV07XG4gICAgfVxuICB9XG4gIHJldHVybiBuZXdPYmo7XG59O1xuXG5Nb2RlbC5leHBsb2RlID0gZnVuY3Rpb24gZXhwbG9kZShvYmopIHtcbiAgdmFyIG5ld09iaiA9IHt9O1xuICBfLmVhY2gob2JqLCBmdW5jdGlvbiAodmFsLCBrZXkpIHtcbiAgICBfLnNldChuZXdPYmosIGtleSwgdmFsKTtcbiAgfSk7XG4gIHJldHVybiBuZXdPYmo7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IE1vZGVsO1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/public/lib/model.js"
      ],
      "names": [],
      "mappings": "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",
      "file": "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/public/lib/model.js",
      "sourcesContent": [
        "var _ = require('lodash');\n\nfunction Model(data, options) {\n  this.options = options || {};\n  this.data = Model.explode(data);\n}\n\nModel.prototype.get = function (key) {\n  return _.get(this.data, key);\n};\n\nModel.prototype.set = function (key, val) {\n  var self = this;\n  if (_.isPlainObject(key)) {\n    _.each(Model.flatten(key), function (val, key) {\n      _.get(self.data, key, val);\n    });\n  } else {\n    _.set(this.data, key, val);\n  }\n};\n\nModel.prototype.toObject = function (options) {\n  options = _.defaults({}, options, this.options);\n  var data = this.data;\n  if (options.flatten) data = Model.flatten(data);\n  return data;\n};\n\nModel.prototype.toJSON = function () {\n  return this.data;\n};\n\nModel.stripEmpties = function (obj) {\n  for (var i in obj) {\n    if (_.isEmpty(obj[i])) {\n      delete obj[i];\n    } else if (typeof obj[i] === 'object') {\n      Model.stripEmpties(obj[i]);\n    }\n  }\n  return obj;\n};\n\nModel.flatten = function flatten(obj, path, newObj) {\n  newObj = newObj || {};\n  path = path || [];\n  for (var i in obj) {\n    if (_.isPlainObject(obj[i]) && !_.isArray(obj[i])) {\n      flatten(obj[i], path.concat(i), newObj);\n    } else {\n      newObj[path.concat(i).join('.')] = obj[i];\n    }\n  }\n  return newObj;\n};\n\nModel.explode = function explode(obj) {\n  var newObj = {};\n  _.each(obj, function (val, key) {\n    _.set(newObj, key, val);\n  });\n  return newObj;\n};\n\nmodule.exports = Model;\n"
      ]
    },
    "mtime": 1468947861000
  },
  "{\"filename\":\"/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/strip_defaults.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "'use strict';\n\nvar root = require('requirefrom')('');\nvar _ = require('lodash');\nvar Joi = require('joi');\nvar flatten = root('public/lib/model').flatten;\n\nmodule.exports = function (body, schema) {\n  var target = flatten(body);\n  var defaults = flatten(Joi.validate({}, schema).value);\n  _.each(defaults, function (val, key) {\n    if (target[key] === defaults[key]) delete target[key];\n  });\n  return target;\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9UaGVvL0Rlc2t0b3AvTmVidWxhVGVtcC9OZWJ1bGEvZWxhc3RpY3NlYXJjaC9pbnN0YWxsZWRQbHVnaW5zL21hcnZlbC9zZXJ2ZXIvbGliL3N0cmlwX2RlZmF1bHRzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBSSxJQUFJLEdBQUcsT0FBTyxDQUFDLGFBQWEsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDO0FBQ3RDLElBQUksQ0FBQyxHQUFHLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQztBQUMxQixJQUFJLEdBQUcsR0FBRyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUM7QUFDekIsSUFBSSxPQUFPLEdBQUcsSUFBSSxDQUFDLGtCQUFrQixDQUFDLENBQUMsT0FBTyxDQUFDOztBQUUvQyxNQUFNLENBQUMsT0FBTyxHQUFHLFVBQVUsSUFBSSxFQUFFLE1BQU0sRUFBRTtBQUN2QyxNQUFJLE1BQU0sR0FBRyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDM0IsTUFBSSxRQUFRLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsRUFBRSxFQUFFLE1BQU0sQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDO0FBQ3ZELEdBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFLFVBQVUsR0FBRyxFQUFFLEdBQUcsRUFBRTtBQUNuQyxRQUFJLE1BQU0sQ0FBQyxHQUFHLENBQUMsS0FBSyxRQUFRLENBQUMsR0FBRyxDQUFDLEVBQUUsT0FBTyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUM7R0FDdkQsQ0FBQyxDQUFDO0FBQ0gsU0FBTyxNQUFNLENBQUM7Q0FDZixDQUFDIiwiZmlsZSI6Ii9Vc2Vycy9UaGVvL0Rlc2t0b3AvTmVidWxhVGVtcC9OZWJ1bGEvZWxhc3RpY3NlYXJjaC9pbnN0YWxsZWRQbHVnaW5zL21hcnZlbC9zZXJ2ZXIvbGliL3N0cmlwX2RlZmF1bHRzLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIHJvb3QgPSByZXF1aXJlKCdyZXF1aXJlZnJvbScpKCcnKTtcbnZhciBfID0gcmVxdWlyZSgnbG9kYXNoJyk7XG52YXIgSm9pID0gcmVxdWlyZSgnam9pJyk7XG52YXIgZmxhdHRlbiA9IHJvb3QoJ3B1YmxpYy9saWIvbW9kZWwnKS5mbGF0dGVuO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChib2R5LCBzY2hlbWEpIHtcbiAgdmFyIHRhcmdldCA9IGZsYXR0ZW4oYm9keSk7XG4gIHZhciBkZWZhdWx0cyA9IGZsYXR0ZW4oSm9pLnZhbGlkYXRlKHt9LCBzY2hlbWEpLnZhbHVlKTtcbiAgXy5lYWNoKGRlZmF1bHRzLCBmdW5jdGlvbiAodmFsLCBrZXkpIHtcbiAgICBpZiAodGFyZ2V0W2tleV0gPT09IGRlZmF1bHRzW2tleV0pIGRlbGV0ZSB0YXJnZXRba2V5XTtcbiAgfSk7XG4gIHJldHVybiB0YXJnZXQ7XG59O1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/strip_defaults.js"
      ],
      "names": [],
      "mappings": ";;AAAA,IAAI,IAAI,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC;AACtC,IAAI,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC1B,IAAI,GAAG,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC;AACzB,IAAI,OAAO,GAAG,IAAI,CAAC,kBAAkB,CAAC,CAAC,OAAO,CAAC;;AAE/C,MAAM,CAAC,OAAO,GAAG,UAAU,IAAI,EAAE,MAAM,EAAE;AACvC,MAAI,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;AAC3B,MAAI,QAAQ,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC;AACvD,GAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,UAAU,GAAG,EAAE,GAAG,EAAE;AACnC,QAAI,MAAM,CAAC,GAAG,CAAC,KAAK,QAAQ,CAAC,GAAG,CAAC,EAAE,OAAO,MAAM,CAAC,GAAG,CAAC,CAAC;GACvD,CAAC,CAAC;AACH,SAAO,MAAM,CAAC;CACf,CAAC",
      "file": "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/lib/strip_defaults.js",
      "sourcesContent": [
        "var root = require('requirefrom')('');\nvar _ = require('lodash');\nvar Joi = require('joi');\nvar flatten = root('public/lib/model').flatten;\n\nmodule.exports = function (body, schema) {\n  var target = flatten(body);\n  var defaults = flatten(Joi.validate({}, schema).value);\n  _.each(defaults, function (val, key) {\n    if (target[key] === defaults[key]) delete target[key];\n  });\n  return target;\n};\n"
      ]
    },
    "mtime": 1468947861000
  },
  "{\"filename\":\"/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/routes/api/v1/shards.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "'use strict';\n\nvar _ = require('lodash');\nvar root = require('requirefrom')('');\nvar handleError = root('server/lib/handle_error');\n\nmodule.exports = function (server) {\n  var callWithRequest = server.plugins.elasticsearch.callWithRequest;\n  var config = server.config();\n\n  server.route({\n    path: '/api/marvel/v1/clusters/{cluster_uuid}/state/{state_uuid}/shards',\n    method: 'GET',\n    handler: function handler(req, reply) {\n      var stateUuid = req.params.state_uuid;\n      var clusterUuid = req.params.cluster_uuid;\n      var options = {\n        index: config.get('marvel.index_prefix') + '*',\n        type: 'shards',\n        body: {\n          size: config.get('marvel.max_bucket_size'),\n          query: {\n            filtered: {\n              filter: {\n                bool: {\n                  must: [{ term: { state_uuid: stateUuid } }, { term: { cluster_uuid: clusterUuid } }]\n                }\n              }\n            }\n          }\n        }\n      };\n      if (req.query.node) {\n        options.body.query.filtered.filter.bool.must.push({\n          term: { 'shard.node': req.query.node }\n        });\n      } else if (req.query.index) {\n        options.body.query.filtered.filter.bool.must.push({\n          term: { 'shard.index': req.query.index }\n        });\n      }\n      callWithRequest(req, 'search', options).then(function (resp) {\n        if (resp.hits.total) {\n          reply(resp.hits.hits.map(function (doc) {\n            return doc._source.shard;\n          }));\n        } else {\n          reply([]);\n        }\n      })['catch'](function (err) {\n        return reply(handleError(err, req));\n      });\n    }\n  });\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9UaGVvL0Rlc2t0b3AvTmVidWxhVGVtcC9OZWJ1bGEvZWxhc3RpY3NlYXJjaC9pbnN0YWxsZWRQbHVnaW5zL21hcnZlbC9zZXJ2ZXIvcm91dGVzL2FwaS92MS9zaGFyZHMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFNLENBQUMsR0FBRyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUM7QUFDNUIsSUFBTSxJQUFJLEdBQUcsT0FBTyxDQUFDLGFBQWEsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDO0FBQ3hDLElBQU0sV0FBVyxHQUFHLElBQUksQ0FBQyx5QkFBeUIsQ0FBQyxDQUFDOztBQUVwRCxNQUFNLENBQUMsT0FBTyxHQUFHLFVBQUMsTUFBTSxFQUFLO0FBQzNCLE1BQU0sZUFBZSxHQUFHLE1BQU0sQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDLGVBQWUsQ0FBQztBQUNyRSxNQUFNLE1BQU0sR0FBRyxNQUFNLENBQUMsTUFBTSxFQUFFLENBQUM7O0FBRS9CLFFBQU0sQ0FBQyxLQUFLLENBQUM7QUFDWCxRQUFJLEVBQUUsa0VBQWtFO0FBQ3hFLFVBQU0sRUFBRSxLQUFLO0FBQ2IsV0FBTyxFQUFFLGlCQUFDLEdBQUcsRUFBRSxLQUFLLEVBQUs7QUFDdkIsVUFBTSxTQUFTLEdBQUcsR0FBRyxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUM7QUFDeEMsVUFBTSxXQUFXLEdBQUcsR0FBRyxDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUM7QUFDNUMsVUFBTSxPQUFPLEdBQUc7QUFDZCxhQUFLLEVBQUUsTUFBTSxDQUFDLEdBQUcsQ0FBQyxxQkFBcUIsQ0FBQyxHQUFHLEdBQUc7QUFDOUMsWUFBSSxFQUFFLFFBQVE7QUFDZCxZQUFJLEVBQUU7QUFDSixjQUFJLEVBQUUsTUFBTSxDQUFDLEdBQUcsQ0FBQyx3QkFBd0IsQ0FBQztBQUMxQyxlQUFLLEVBQUU7QUFDTCxvQkFBUSxFQUFFO0FBQ1Isb0JBQU0sRUFBRTtBQUNOLG9CQUFJLEVBQUU7QUFDSixzQkFBSSxFQUFFLENBQ0osRUFBRSxJQUFJLEVBQUUsRUFBRSxVQUFVLEVBQUUsU0FBUyxFQUFFLEVBQUUsRUFDbkMsRUFBRSxJQUFJLEVBQUUsRUFBRSxZQUFZLEVBQUUsV0FBVyxFQUFFLEVBQUUsQ0FDeEM7aUJBQ0Y7ZUFDRjthQUNGO1dBQ0Y7U0FDRjtPQUNGLENBQUM7QUFDRixVQUFJLEdBQUcsQ0FBQyxLQUFLLENBQUMsSUFBSSxFQUFFO0FBQ2xCLGVBQU8sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUM7QUFDaEQsY0FBSSxFQUFFLEVBQUUsWUFBWSxFQUFFLEdBQUcsQ0FBQyxLQUFLLENBQUMsSUFBSSxFQUFFO1NBQ3ZDLENBQUMsQ0FBQztPQUNKLE1BQU0sSUFBSSxHQUFHLENBQUMsS0FBSyxDQUFDLEtBQUssRUFBRTtBQUMxQixlQUFPLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDO0FBQ2hELGNBQUksRUFBRSxFQUFFLGFBQWEsRUFBRSxHQUFHLENBQUMsS0FBSyxDQUFDLEtBQUssRUFBQztTQUN4QyxDQUFDLENBQUM7T0FDSjtBQUNELHFCQUFlLENBQUMsR0FBRyxFQUFFLFFBQVEsRUFBRSxPQUFPLENBQUMsQ0FDdEMsSUFBSSxDQUFDLFVBQUMsSUFBSSxFQUFLO0FBQ2QsWUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRTtBQUNuQixlQUFLLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLFVBQUMsR0FBRzttQkFBSyxHQUFHLENBQUMsT0FBTyxDQUFDLEtBQUs7V0FBQSxDQUFDLENBQUMsQ0FBQztTQUN2RCxNQUFNO0FBQ0wsZUFBSyxDQUFDLEVBQUUsQ0FBQyxDQUFDO1NBQ1g7T0FDRixDQUFDLFNBQ0ksQ0FBQyxVQUFBLEdBQUc7ZUFBSSxLQUFLLENBQUMsV0FBVyxDQUFDLEdBQUcsRUFBRSxHQUFHLENBQUMsQ0FBQztPQUFBLENBQUMsQ0FBQztLQUM3QztHQUNGLENBQUMsQ0FBQztDQUVKLENBQUMiLCJmaWxlIjoiL1VzZXJzL1RoZW8vRGVza3RvcC9OZWJ1bGFUZW1wL05lYnVsYS9lbGFzdGljc2VhcmNoL2luc3RhbGxlZFBsdWdpbnMvbWFydmVsL3NlcnZlci9yb3V0ZXMvYXBpL3YxL3NoYXJkcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IF8gPSByZXF1aXJlKCdsb2Rhc2gnKTtcbmNvbnN0IHJvb3QgPSByZXF1aXJlKCdyZXF1aXJlZnJvbScpKCcnKTtcbmNvbnN0IGhhbmRsZUVycm9yID0gcm9vdCgnc2VydmVyL2xpYi9oYW5kbGVfZXJyb3InKTtcblxubW9kdWxlLmV4cG9ydHMgPSAoc2VydmVyKSA9PiB7XG4gIGNvbnN0IGNhbGxXaXRoUmVxdWVzdCA9IHNlcnZlci5wbHVnaW5zLmVsYXN0aWNzZWFyY2guY2FsbFdpdGhSZXF1ZXN0O1xuICBjb25zdCBjb25maWcgPSBzZXJ2ZXIuY29uZmlnKCk7XG5cbiAgc2VydmVyLnJvdXRlKHtcbiAgICBwYXRoOiAnL2FwaS9tYXJ2ZWwvdjEvY2x1c3RlcnMve2NsdXN0ZXJfdXVpZH0vc3RhdGUve3N0YXRlX3V1aWR9L3NoYXJkcycsXG4gICAgbWV0aG9kOiAnR0VUJyxcbiAgICBoYW5kbGVyOiAocmVxLCByZXBseSkgPT4ge1xuICAgICAgY29uc3Qgc3RhdGVVdWlkID0gcmVxLnBhcmFtcy5zdGF0ZV91dWlkO1xuICAgICAgY29uc3QgY2x1c3RlclV1aWQgPSByZXEucGFyYW1zLmNsdXN0ZXJfdXVpZDtcbiAgICAgIGNvbnN0IG9wdGlvbnMgPSB7XG4gICAgICAgIGluZGV4OiBjb25maWcuZ2V0KCdtYXJ2ZWwuaW5kZXhfcHJlZml4JykgKyAnKicsXG4gICAgICAgIHR5cGU6ICdzaGFyZHMnLFxuICAgICAgICBib2R5OiB7XG4gICAgICAgICAgc2l6ZTogY29uZmlnLmdldCgnbWFydmVsLm1heF9idWNrZXRfc2l6ZScpLFxuICAgICAgICAgIHF1ZXJ5OiB7XG4gICAgICAgICAgICBmaWx0ZXJlZDoge1xuICAgICAgICAgICAgICBmaWx0ZXI6IHtcbiAgICAgICAgICAgICAgICBib29sOiB7XG4gICAgICAgICAgICAgICAgICBtdXN0OiBbXG4gICAgICAgICAgICAgICAgICAgIHsgdGVybTogeyBzdGF0ZV91dWlkOiBzdGF0ZVV1aWQgfSB9LFxuICAgICAgICAgICAgICAgICAgICB7IHRlcm06IHsgY2x1c3Rlcl91dWlkOiBjbHVzdGVyVXVpZCB9IH1cbiAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgICBpZiAocmVxLnF1ZXJ5Lm5vZGUpIHtcbiAgICAgICAgb3B0aW9ucy5ib2R5LnF1ZXJ5LmZpbHRlcmVkLmZpbHRlci5ib29sLm11c3QucHVzaCh7XG4gICAgICAgICAgdGVybTogeyAnc2hhcmQubm9kZSc6IHJlcS5xdWVyeS5ub2RlIH1cbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2UgaWYgKHJlcS5xdWVyeS5pbmRleCkge1xuICAgICAgICBvcHRpb25zLmJvZHkucXVlcnkuZmlsdGVyZWQuZmlsdGVyLmJvb2wubXVzdC5wdXNoKHtcbiAgICAgICAgICB0ZXJtOiB7ICdzaGFyZC5pbmRleCc6IHJlcS5xdWVyeS5pbmRleH1cbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgICBjYWxsV2l0aFJlcXVlc3QocmVxLCAnc2VhcmNoJywgb3B0aW9ucylcbiAgICAgIC50aGVuKChyZXNwKSA9PiB7XG4gICAgICAgIGlmIChyZXNwLmhpdHMudG90YWwpIHtcbiAgICAgICAgICByZXBseShyZXNwLmhpdHMuaGl0cy5tYXAoKGRvYykgPT4gZG9jLl9zb3VyY2Uuc2hhcmQpKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXBseShbXSk7XG4gICAgICAgIH1cbiAgICAgIH0pXG4gICAgICAuY2F0Y2goZXJyID0+IHJlcGx5KGhhbmRsZUVycm9yKGVyciwgcmVxKSkpO1xuICAgIH1cbiAgfSk7XG5cbn07XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/routes/api/v1/shards.js"
      ],
      "names": [],
      "mappings": ";;AAAA,IAAM,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC5B,IAAM,IAAI,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC;AACxC,IAAM,WAAW,GAAG,IAAI,CAAC,yBAAyB,CAAC,CAAC;;AAEpD,MAAM,CAAC,OAAO,GAAG,UAAC,MAAM,EAAK;AAC3B,MAAM,eAAe,GAAG,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,eAAe,CAAC;AACrE,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;;AAE/B,QAAM,CAAC,KAAK,CAAC;AACX,QAAI,EAAE,kEAAkE;AACxE,UAAM,EAAE,KAAK;AACb,WAAO,EAAE,iBAAC,GAAG,EAAE,KAAK,EAAK;AACvB,UAAM,SAAS,GAAG,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC;AACxC,UAAM,WAAW,GAAG,GAAG,CAAC,MAAM,CAAC,YAAY,CAAC;AAC5C,UAAM,OAAO,GAAG;AACd,aAAK,EAAE,MAAM,CAAC,GAAG,CAAC,qBAAqB,CAAC,GAAG,GAAG;AAC9C,YAAI,EAAE,QAAQ;AACd,YAAI,EAAE;AACJ,cAAI,EAAE,MAAM,CAAC,GAAG,CAAC,wBAAwB,CAAC;AAC1C,eAAK,EAAE;AACL,oBAAQ,EAAE;AACR,oBAAM,EAAE;AACN,oBAAI,EAAE;AACJ,sBAAI,EAAE,CACJ,EAAE,IAAI,EAAE,EAAE,UAAU,EAAE,SAAS,EAAE,EAAE,EACnC,EAAE,IAAI,EAAE,EAAE,YAAY,EAAE,WAAW,EAAE,EAAE,CACxC;iBACF;eACF;aACF;WACF;SACF;OACF,CAAC;AACF,UAAI,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE;AAClB,eAAO,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;AAChD,cAAI,EAAE,EAAE,YAAY,EAAE,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE;SACvC,CAAC,CAAC;OACJ,MAAM,IAAI,GAAG,CAAC,KAAK,CAAC,KAAK,EAAE;AAC1B,eAAO,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;AAChD,cAAI,EAAE,EAAE,aAAa,EAAE,GAAG,CAAC,KAAK,CAAC,KAAK,EAAC;SACxC,CAAC,CAAC;OACJ;AACD,qBAAe,CAAC,GAAG,EAAE,QAAQ,EAAE,OAAO,CAAC,CACtC,IAAI,CAAC,UAAC,IAAI,EAAK;AACd,YAAI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;AACnB,eAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAC,GAAG;mBAAK,GAAG,CAAC,OAAO,CAAC,KAAK;WAAA,CAAC,CAAC,CAAC;SACvD,MAAM;AACL,eAAK,CAAC,EAAE,CAAC,CAAC;SACX;OACF,CAAC,SACI,CAAC,UAAA,GAAG;eAAI,KAAK,CAAC,WAAW,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;OAAA,CAAC,CAAC;KAC7C;GACF,CAAC,CAAC;CAEJ,CAAC",
      "file": "/Users/Theo/Desktop/NebulaTemp/Nebula/elasticsearch/installedPlugins/marvel/server/routes/api/v1/shards.js",
      "sourcesContent": [
        "const _ = require('lodash');\nconst root = require('requirefrom')('');\nconst handleError = root('server/lib/handle_error');\n\nmodule.exports = (server) => {\n  const callWithRequest = server.plugins.elasticsearch.callWithRequest;\n  const config = server.config();\n\n  server.route({\n    path: '/api/marvel/v1/clusters/{cluster_uuid}/state/{state_uuid}/shards',\n    method: 'GET',\n    handler: (req, reply) => {\n      const stateUuid = req.params.state_uuid;\n      const clusterUuid = req.params.cluster_uuid;\n      const options = {\n        index: config.get('marvel.index_prefix') + '*',\n        type: 'shards',\n        body: {\n          size: config.get('marvel.max_bucket_size'),\n          query: {\n            filtered: {\n              filter: {\n                bool: {\n                  must: [\n                    { term: { state_uuid: stateUuid } },\n                    { term: { cluster_uuid: clusterUuid } }\n                  ]\n                }\n              }\n            }\n          }\n        }\n      };\n      if (req.query.node) {\n        options.body.query.filtered.filter.bool.must.push({\n          term: { 'shard.node': req.query.node }\n        });\n      } else if (req.query.index) {\n        options.body.query.filtered.filter.bool.must.push({\n          term: { 'shard.index': req.query.index}\n        });\n      }\n      callWithRequest(req, 'search', options)\n      .then((resp) => {\n        if (resp.hits.total) {\n          reply(resp.hits.hits.map((doc) => doc._source.shard));\n        } else {\n          reply([]);\n        }\n      })\n      .catch(err => reply(handleError(err, req)));\n    }\n  });\n\n};\n"
      ]
    },
    "mtime": 1468947861000
  }
}